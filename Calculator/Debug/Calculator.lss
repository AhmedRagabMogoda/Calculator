
Calculator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001ce6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000005a  00800060  00001ce6  00001d5a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .comment      0000005c  00000000  00000000  00001db4  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001e10  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000110  00000000  00000000  00001e4c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   000018a8  00000000  00000000  00001f5c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000979  00000000  00000000  00003804  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000f4a  00000000  00000000  0000417d  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000214  00000000  00000000  000050c8  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000590  00000000  00000000  000052dc  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000117c  00000000  00000000  0000586c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000d0  00000000  00000000  000069e8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 7d 01 	jmp	0x2fa	; 0x2fa <__ctors_end>
       4:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
       8:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
       c:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
      10:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
      14:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
      18:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
      1c:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
      20:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
      24:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
      28:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
      2c:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
      30:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
      34:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
      38:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
      3c:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
      40:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
      44:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
      48:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
      4c:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
      50:	0c 94 92 01 	jmp	0x324	; 0x324 <__bad_interrupt>
      54:	a0 01       	movw	r20, r0
      56:	b9 01       	movw	r22, r18
      58:	d2 01       	movw	r26, r4
      5a:	eb 01       	movw	r28, r22
      5c:	03 02       	muls	r16, r19
      5e:	03 02       	muls	r16, r19
      60:	03 02       	muls	r16, r19
      62:	03 02       	muls	r16, r19
      64:	03 02       	muls	r16, r19
      66:	03 02       	muls	r16, r19
      68:	03 02       	muls	r16, r19
      6a:	03 02       	muls	r16, r19
      6c:	03 02       	muls	r16, r19
      6e:	03 02       	muls	r16, r19
      70:	03 02       	muls	r16, r19
      72:	03 02       	muls	r16, r19
      74:	03 02       	muls	r16, r19
      76:	03 02       	muls	r16, r19
      78:	03 02       	muls	r16, r19
      7a:	03 02       	muls	r16, r19
      7c:	03 02       	muls	r16, r19
      7e:	03 02       	muls	r16, r19
      80:	03 02       	muls	r16, r19
      82:	03 02       	muls	r16, r19
      84:	03 02       	muls	r16, r19
      86:	03 02       	muls	r16, r19
      88:	03 02       	muls	r16, r19
      8a:	03 02       	muls	r16, r19
      8c:	03 02       	muls	r16, r19
      8e:	03 02       	muls	r16, r19
      90:	03 02       	muls	r16, r19
      92:	03 02       	muls	r16, r19
      94:	a0 01       	movw	r20, r0
      96:	b9 01       	movw	r22, r18
      98:	d2 01       	movw	r26, r4
      9a:	eb 01       	movw	r28, r22
      9c:	10 02       	muls	r17, r16
      9e:	29 02       	muls	r18, r25
      a0:	42 02       	muls	r20, r18
      a2:	5b 02       	muls	r21, r27
      a4:	73 02       	muls	r23, r19
      a6:	73 02       	muls	r23, r19
      a8:	73 02       	muls	r23, r19
      aa:	73 02       	muls	r23, r19
      ac:	73 02       	muls	r23, r19
      ae:	73 02       	muls	r23, r19
      b0:	73 02       	muls	r23, r19
      b2:	73 02       	muls	r23, r19
      b4:	73 02       	muls	r23, r19
      b6:	73 02       	muls	r23, r19
      b8:	73 02       	muls	r23, r19
      ba:	73 02       	muls	r23, r19
      bc:	73 02       	muls	r23, r19
      be:	73 02       	muls	r23, r19
      c0:	73 02       	muls	r23, r19
      c2:	73 02       	muls	r23, r19
      c4:	73 02       	muls	r23, r19
      c6:	73 02       	muls	r23, r19
      c8:	73 02       	muls	r23, r19
      ca:	73 02       	muls	r23, r19
      cc:	73 02       	muls	r23, r19
      ce:	73 02       	muls	r23, r19
      d0:	73 02       	muls	r23, r19
      d2:	73 02       	muls	r23, r19
      d4:	73 02       	muls	r23, r19
      d6:	73 02       	muls	r23, r19
      d8:	73 02       	muls	r23, r19
      da:	73 02       	muls	r23, r19
      dc:	10 02       	muls	r17, r16
      de:	29 02       	muls	r18, r25
      e0:	42 02       	muls	r20, r18
      e2:	5b 02       	muls	r21, r27
      e4:	80 02       	muls	r24, r16
      e6:	94 02       	muls	r25, r20
      e8:	a8 02       	muls	r26, r24
      ea:	bc 02       	muls	r27, r28
      ec:	d0 02       	muls	r29, r16
      ee:	d0 02       	muls	r29, r16
      f0:	d0 02       	muls	r29, r16
      f2:	d0 02       	muls	r29, r16
      f4:	d0 02       	muls	r29, r16
      f6:	d0 02       	muls	r29, r16
      f8:	d0 02       	muls	r29, r16
      fa:	d0 02       	muls	r29, r16
      fc:	d0 02       	muls	r29, r16
      fe:	d0 02       	muls	r29, r16
     100:	d0 02       	muls	r29, r16
     102:	d0 02       	muls	r29, r16
     104:	d0 02       	muls	r29, r16
     106:	d0 02       	muls	r29, r16
     108:	d0 02       	muls	r29, r16
     10a:	d0 02       	muls	r29, r16
     10c:	d0 02       	muls	r29, r16
     10e:	d0 02       	muls	r29, r16
     110:	d0 02       	muls	r29, r16
     112:	d0 02       	muls	r29, r16
     114:	d0 02       	muls	r29, r16
     116:	d0 02       	muls	r29, r16
     118:	d0 02       	muls	r29, r16
     11a:	d0 02       	muls	r29, r16
     11c:	d0 02       	muls	r29, r16
     11e:	d0 02       	muls	r29, r16
     120:	d0 02       	muls	r29, r16
     122:	d0 02       	muls	r29, r16
     124:	80 02       	muls	r24, r16
     126:	94 02       	muls	r25, r20
     128:	a8 02       	muls	r26, r24
     12a:	bc 02       	muls	r27, r28
     12c:	dd 02       	muls	r29, r29
     12e:	df 02       	muls	r29, r31
     130:	e1 02       	muls	r30, r17
     132:	e3 02       	muls	r30, r19
     134:	e4 02       	muls	r30, r20
     136:	e4 02       	muls	r30, r20
     138:	e4 02       	muls	r30, r20
     13a:	e4 02       	muls	r30, r20
     13c:	e4 02       	muls	r30, r20
     13e:	e4 02       	muls	r30, r20
     140:	e4 02       	muls	r30, r20
     142:	e4 02       	muls	r30, r20
     144:	e4 02       	muls	r30, r20
     146:	e4 02       	muls	r30, r20
     148:	e4 02       	muls	r30, r20
     14a:	e4 02       	muls	r30, r20
     14c:	e4 02       	muls	r30, r20
     14e:	e4 02       	muls	r30, r20
     150:	e4 02       	muls	r30, r20
     152:	e4 02       	muls	r30, r20
     154:	e4 02       	muls	r30, r20
     156:	e4 02       	muls	r30, r20
     158:	e4 02       	muls	r30, r20
     15a:	e4 02       	muls	r30, r20
     15c:	e4 02       	muls	r30, r20
     15e:	e4 02       	muls	r30, r20
     160:	e4 02       	muls	r30, r20
     162:	e4 02       	muls	r30, r20
     164:	e4 02       	muls	r30, r20
     166:	e4 02       	muls	r30, r20
     168:	e4 02       	muls	r30, r20
     16a:	e4 02       	muls	r30, r20
     16c:	dd 02       	muls	r29, r29
     16e:	df 02       	muls	r29, r31
     170:	e1 02       	muls	r30, r17
     172:	e3 02       	muls	r30, r19
     174:	f0 02       	muls	r31, r16
     176:	f2 02       	muls	r31, r18
     178:	f4 02       	muls	r31, r20
     17a:	f6 02       	muls	r31, r22
     17c:	f7 02       	muls	r31, r23
     17e:	f7 02       	muls	r31, r23
     180:	f7 02       	muls	r31, r23
     182:	f7 02       	muls	r31, r23
     184:	f7 02       	muls	r31, r23
     186:	f7 02       	muls	r31, r23
     188:	f7 02       	muls	r31, r23
     18a:	f7 02       	muls	r31, r23
     18c:	f7 02       	muls	r31, r23
     18e:	f7 02       	muls	r31, r23
     190:	f7 02       	muls	r31, r23
     192:	f7 02       	muls	r31, r23
     194:	f7 02       	muls	r31, r23
     196:	f7 02       	muls	r31, r23
     198:	f7 02       	muls	r31, r23
     19a:	f7 02       	muls	r31, r23
     19c:	f7 02       	muls	r31, r23
     19e:	f7 02       	muls	r31, r23
     1a0:	f7 02       	muls	r31, r23
     1a2:	f7 02       	muls	r31, r23
     1a4:	f7 02       	muls	r31, r23
     1a6:	f7 02       	muls	r31, r23
     1a8:	f7 02       	muls	r31, r23
     1aa:	f7 02       	muls	r31, r23
     1ac:	f7 02       	muls	r31, r23
     1ae:	f7 02       	muls	r31, r23
     1b0:	f7 02       	muls	r31, r23
     1b2:	f7 02       	muls	r31, r23
     1b4:	f0 02       	muls	r31, r16
     1b6:	f2 02       	muls	r31, r18
     1b8:	f4 02       	muls	r31, r20
     1ba:	f6 02       	muls	r31, r22
     1bc:	04 03       	mulsu	r16, r20
     1be:	1d 03       	fmul	r17, r21
     1c0:	36 03       	mulsu	r19, r22
     1c2:	4f 03       	fmul	r20, r23
     1c4:	67 03       	mulsu	r22, r23
     1c6:	67 03       	mulsu	r22, r23
     1c8:	67 03       	mulsu	r22, r23
     1ca:	67 03       	mulsu	r22, r23
     1cc:	67 03       	mulsu	r22, r23
     1ce:	67 03       	mulsu	r22, r23
     1d0:	67 03       	mulsu	r22, r23
     1d2:	67 03       	mulsu	r22, r23
     1d4:	67 03       	mulsu	r22, r23
     1d6:	67 03       	mulsu	r22, r23
     1d8:	67 03       	mulsu	r22, r23
     1da:	67 03       	mulsu	r22, r23
     1dc:	67 03       	mulsu	r22, r23
     1de:	67 03       	mulsu	r22, r23
     1e0:	67 03       	mulsu	r22, r23
     1e2:	67 03       	mulsu	r22, r23
     1e4:	67 03       	mulsu	r22, r23
     1e6:	67 03       	mulsu	r22, r23
     1e8:	67 03       	mulsu	r22, r23
     1ea:	67 03       	mulsu	r22, r23
     1ec:	67 03       	mulsu	r22, r23
     1ee:	67 03       	mulsu	r22, r23
     1f0:	67 03       	mulsu	r22, r23
     1f2:	67 03       	mulsu	r22, r23
     1f4:	67 03       	mulsu	r22, r23
     1f6:	67 03       	mulsu	r22, r23
     1f8:	67 03       	mulsu	r22, r23
     1fa:	67 03       	mulsu	r22, r23
     1fc:	04 03       	mulsu	r16, r20
     1fe:	1d 03       	fmul	r17, r21
     200:	36 03       	mulsu	r19, r22
     202:	4f 03       	fmul	r20, r23
     204:	a4 06       	cpc	r10, r20
     206:	ae 06       	cpc	r10, r30
     208:	ae 06       	cpc	r10, r30
     20a:	ae 06       	cpc	r10, r30
     20c:	ae 06       	cpc	r10, r30
     20e:	3b 06       	cpc	r3, r27
     210:	29 06       	cpc	r2, r25
     212:	ae 06       	cpc	r10, r30
     214:	32 06       	cpc	r3, r18
     216:	ae 06       	cpc	r10, r30
     218:	46 06       	cpc	r4, r22
     21a:	ae 06       	cpc	r10, r30
     21c:	ae 06       	cpc	r10, r30
     21e:	ae 06       	cpc	r10, r30
     220:	ae 06       	cpc	r10, r30
     222:	ae 06       	cpc	r10, r30
     224:	ae 06       	cpc	r10, r30
     226:	ae 06       	cpc	r10, r30
     228:	ae 06       	cpc	r10, r30
     22a:	ae 06       	cpc	r10, r30
     22c:	ae 06       	cpc	r10, r30
     22e:	ae 06       	cpc	r10, r30
     230:	ae 06       	cpc	r10, r30
     232:	ae 06       	cpc	r10, r30
     234:	ae 06       	cpc	r10, r30
     236:	ae 06       	cpc	r10, r30
     238:	ae 06       	cpc	r10, r30
     23a:	ae 06       	cpc	r10, r30
     23c:	ae 06       	cpc	r10, r30
     23e:	ae 06       	cpc	r10, r30
     240:	ae 06       	cpc	r10, r30
     242:	ae 06       	cpc	r10, r30
     244:	ae 06       	cpc	r10, r30
     246:	ae 06       	cpc	r10, r30
     248:	ae 06       	cpc	r10, r30
     24a:	ae 06       	cpc	r10, r30
     24c:	ae 06       	cpc	r10, r30
     24e:	ae 06       	cpc	r10, r30
     250:	ae 06       	cpc	r10, r30
     252:	ae 06       	cpc	r10, r30
     254:	ae 06       	cpc	r10, r30
     256:	ae 06       	cpc	r10, r30
     258:	ae 06       	cpc	r10, r30
     25a:	ae 06       	cpc	r10, r30
     25c:	ae 06       	cpc	r10, r30
     25e:	ae 06       	cpc	r10, r30
     260:	83 06       	cpc	r8, r19
     262:	ae 06       	cpc	r10, r30
     264:	ae 06       	cpc	r10, r30
     266:	ae 06       	cpc	r10, r30
     268:	ae 06       	cpc	r10, r30
     26a:	ae 06       	cpc	r10, r30
     26c:	ae 06       	cpc	r10, r30
     26e:	ae 06       	cpc	r10, r30
     270:	ae 06       	cpc	r10, r30
     272:	ae 06       	cpc	r10, r30
     274:	ae 06       	cpc	r10, r30
     276:	65 06       	cpc	r6, r21
     278:	07 63       	ori	r16, 0x37	; 55
     27a:	42 36       	cpi	r20, 0x62	; 98
     27c:	b7 9b       	sbis	0x16, 7	; 22
     27e:	d8 a7       	std	Y+40, r29	; 0x28
     280:	1a 39       	cpi	r17, 0x9A	; 154
     282:	68 56       	subi	r22, 0x68	; 104
     284:	18 ae       	std	Y+56, r1	; 0x38
     286:	ba ab       	std	Y+50, r27	; 0x32
     288:	55 8c       	ldd	r5, Z+29	; 0x1d
     28a:	1d 3c       	cpi	r17, 0xCD	; 205
     28c:	b7 cc       	rjmp	.-1682   	; 0xfffffbfc <__eeprom_end+0xff7efbfc>
     28e:	57 63       	ori	r21, 0x37	; 55
     290:	bd 6d       	ori	r27, 0xDD	; 221
     292:	ed fd       	.word	0xfded	; ????
     294:	75 3e       	cpi	r23, 0xE5	; 229
     296:	f6 17       	cp	r31, r22
     298:	72 31       	cpi	r23, 0x12	; 18
     29a:	bf 00       	.word	0x00bf	; ????
     29c:	00 00       	nop
     29e:	80 3f       	cpi	r24, 0xF0	; 240
     2a0:	08 00       	.word	0x0008	; ????
     2a2:	00 00       	nop
     2a4:	be 92       	st	-X, r11
     2a6:	24 49       	sbci	r18, 0x94	; 148
     2a8:	12 3e       	cpi	r17, 0xE2	; 226
     2aa:	ab aa       	std	Y+51, r10	; 0x33
     2ac:	aa 2a       	or	r10, r26
     2ae:	be cd       	rjmp	.-1156   	; 0xfffffe2c <__eeprom_end+0xff7efe2c>
     2b0:	cc cc       	rjmp	.-1640   	; 0xfffffc4a <__eeprom_end+0xff7efc4a>
     2b2:	4c 3e       	cpi	r20, 0xEC	; 236
     2b4:	00 00       	nop
     2b6:	00 80       	ld	r0, Z
     2b8:	be ab       	std	Y+54, r27	; 0x36
     2ba:	aa aa       	std	Y+50, r10	; 0x32
     2bc:	aa 3e       	cpi	r26, 0xEA	; 234
     2be:	00 00       	nop
     2c0:	00 00       	nop
     2c2:	bf 00       	.word	0x00bf	; ????
     2c4:	00 00       	nop
     2c6:	80 3f       	cpi	r24, 0xF0	; 240
     2c8:	00 00       	nop
     2ca:	00 00       	nop
     2cc:	00 08       	sbc	r0, r0
     2ce:	41 78       	andi	r20, 0x81	; 129
     2d0:	d3 bb       	out	0x13, r29	; 19
     2d2:	43 87       	std	Z+11, r20	; 0x0b
     2d4:	d1 13       	cpse	r29, r17
     2d6:	3d 19       	sub	r19, r13
     2d8:	0e 3c       	cpi	r16, 0xCE	; 206
     2da:	c3 bd       	out	0x23, r28	; 35
     2dc:	42 82       	std	Z+2, r4	; 0x02
     2de:	ad 2b       	or	r26, r29
     2e0:	3e 68       	ori	r19, 0x8E	; 142
     2e2:	ec 82       	std	Y+4, r14	; 0x04
     2e4:	76 be       	out	0x36, r7	; 54
     2e6:	d9 8f       	std	Y+25, r29	; 0x19
     2e8:	e1 a9       	ldd	r30, Z+49	; 0x31
     2ea:	3e 4c       	sbci	r19, 0xCE	; 206
     2ec:	80 ef       	ldi	r24, 0xF0	; 240
     2ee:	ff be       	out	0x3f, r15	; 63
     2f0:	01 c4       	rjmp	.+2050   	; 0xaf4 <main+0x140>
     2f2:	ff 7f       	andi	r31, 0xFF	; 255
     2f4:	3f 00       	.word	0x003f	; ????
     2f6:	00 00       	nop
	...

000002fa <__ctors_end>:
     2fa:	11 24       	eor	r1, r1
     2fc:	1f be       	out	0x3f, r1	; 63
     2fe:	cf e5       	ldi	r28, 0x5F	; 95
     300:	d8 e0       	ldi	r29, 0x08	; 8
     302:	de bf       	out	0x3e, r29	; 62
     304:	cd bf       	out	0x3d, r28	; 61

00000306 <__do_copy_data>:
     306:	10 e0       	ldi	r17, 0x00	; 0
     308:	a0 e6       	ldi	r26, 0x60	; 96
     30a:	b0 e0       	ldi	r27, 0x00	; 0
     30c:	e6 ee       	ldi	r30, 0xE6	; 230
     30e:	fc e1       	ldi	r31, 0x1C	; 28
     310:	02 c0       	rjmp	.+4      	; 0x316 <__do_copy_data+0x10>
     312:	05 90       	lpm	r0, Z+
     314:	0d 92       	st	X+, r0
     316:	aa 3b       	cpi	r26, 0xBA	; 186
     318:	b1 07       	cpc	r27, r17
     31a:	d9 f7       	brne	.-10     	; 0x312 <__do_copy_data+0xc>
     31c:	0e 94 da 04 	call	0x9b4	; 0x9b4 <main>
     320:	0c 94 71 0e 	jmp	0x1ce2	; 0x1ce2 <_exit>

00000324 <__bad_interrupt>:
     324:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000328 <DIO_set_pin_dir>:
		default:
		break;		
		
	}
	return ret_value;
}
     328:	90 e0       	ldi	r25, 0x00	; 0
     32a:	fc 01       	movw	r30, r24
     32c:	e1 54       	subi	r30, 0x41	; 65
     32e:	f1 09       	sbc	r31, r1
     330:	e4 32       	cpi	r30, 0x24	; 36
     332:	f1 05       	cpc	r31, r1
     334:	08 f0       	brcs	.+2      	; 0x338 <DIO_set_pin_dir+0x10>
     336:	67 c0       	rjmp	.+206    	; 0x406 <__EEPROM_REGION_LENGTH__+0x6>
     338:	e6 5d       	subi	r30, 0xD6	; 214
     33a:	ff 4f       	sbci	r31, 0xFF	; 255
     33c:	0c 94 1f 0b 	jmp	0x163e	; 0x163e <__tablejump2__>
     340:	41 30       	cpi	r20, 0x01	; 1
     342:	59 f4       	brne	.+22     	; 0x35a <DIO_set_pin_dir+0x32>
     344:	2a b3       	in	r18, 0x1a	; 26
     346:	81 e0       	ldi	r24, 0x01	; 1
     348:	90 e0       	ldi	r25, 0x00	; 0
     34a:	02 c0       	rjmp	.+4      	; 0x350 <DIO_set_pin_dir+0x28>
     34c:	88 0f       	add	r24, r24
     34e:	99 1f       	adc	r25, r25
     350:	6a 95       	dec	r22
     352:	e2 f7       	brpl	.-8      	; 0x34c <DIO_set_pin_dir+0x24>
     354:	82 2b       	or	r24, r18
     356:	8a bb       	out	0x1a, r24	; 26
     358:	08 95       	ret
     35a:	2a b3       	in	r18, 0x1a	; 26
     35c:	81 e0       	ldi	r24, 0x01	; 1
     35e:	90 e0       	ldi	r25, 0x00	; 0
     360:	02 c0       	rjmp	.+4      	; 0x366 <DIO_set_pin_dir+0x3e>
     362:	88 0f       	add	r24, r24
     364:	99 1f       	adc	r25, r25
     366:	6a 95       	dec	r22
     368:	e2 f7       	brpl	.-8      	; 0x362 <DIO_set_pin_dir+0x3a>
     36a:	80 95       	com	r24
     36c:	82 23       	and	r24, r18
     36e:	8a bb       	out	0x1a, r24	; 26
     370:	08 95       	ret
     372:	41 30       	cpi	r20, 0x01	; 1
     374:	59 f4       	brne	.+22     	; 0x38c <DIO_set_pin_dir+0x64>
     376:	27 b3       	in	r18, 0x17	; 23
     378:	81 e0       	ldi	r24, 0x01	; 1
     37a:	90 e0       	ldi	r25, 0x00	; 0
     37c:	02 c0       	rjmp	.+4      	; 0x382 <DIO_set_pin_dir+0x5a>
     37e:	88 0f       	add	r24, r24
     380:	99 1f       	adc	r25, r25
     382:	6a 95       	dec	r22
     384:	e2 f7       	brpl	.-8      	; 0x37e <DIO_set_pin_dir+0x56>
     386:	82 2b       	or	r24, r18
     388:	87 bb       	out	0x17, r24	; 23
     38a:	08 95       	ret
     38c:	27 b3       	in	r18, 0x17	; 23
     38e:	81 e0       	ldi	r24, 0x01	; 1
     390:	90 e0       	ldi	r25, 0x00	; 0
     392:	02 c0       	rjmp	.+4      	; 0x398 <DIO_set_pin_dir+0x70>
     394:	88 0f       	add	r24, r24
     396:	99 1f       	adc	r25, r25
     398:	6a 95       	dec	r22
     39a:	e2 f7       	brpl	.-8      	; 0x394 <DIO_set_pin_dir+0x6c>
     39c:	80 95       	com	r24
     39e:	82 23       	and	r24, r18
     3a0:	87 bb       	out	0x17, r24	; 23
     3a2:	08 95       	ret
     3a4:	41 30       	cpi	r20, 0x01	; 1
     3a6:	59 f4       	brne	.+22     	; 0x3be <DIO_set_pin_dir+0x96>
     3a8:	24 b3       	in	r18, 0x14	; 20
     3aa:	81 e0       	ldi	r24, 0x01	; 1
     3ac:	90 e0       	ldi	r25, 0x00	; 0
     3ae:	02 c0       	rjmp	.+4      	; 0x3b4 <DIO_set_pin_dir+0x8c>
     3b0:	88 0f       	add	r24, r24
     3b2:	99 1f       	adc	r25, r25
     3b4:	6a 95       	dec	r22
     3b6:	e2 f7       	brpl	.-8      	; 0x3b0 <DIO_set_pin_dir+0x88>
     3b8:	82 2b       	or	r24, r18
     3ba:	84 bb       	out	0x14, r24	; 20
     3bc:	08 95       	ret
     3be:	24 b3       	in	r18, 0x14	; 20
     3c0:	81 e0       	ldi	r24, 0x01	; 1
     3c2:	90 e0       	ldi	r25, 0x00	; 0
     3c4:	02 c0       	rjmp	.+4      	; 0x3ca <DIO_set_pin_dir+0xa2>
     3c6:	88 0f       	add	r24, r24
     3c8:	99 1f       	adc	r25, r25
     3ca:	6a 95       	dec	r22
     3cc:	e2 f7       	brpl	.-8      	; 0x3c6 <DIO_set_pin_dir+0x9e>
     3ce:	80 95       	com	r24
     3d0:	82 23       	and	r24, r18
     3d2:	84 bb       	out	0x14, r24	; 20
     3d4:	08 95       	ret
     3d6:	41 30       	cpi	r20, 0x01	; 1
     3d8:	59 f4       	brne	.+22     	; 0x3f0 <DIO_set_pin_dir+0xc8>
     3da:	21 b3       	in	r18, 0x11	; 17
     3dc:	81 e0       	ldi	r24, 0x01	; 1
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <DIO_set_pin_dir+0xbe>
     3e2:	88 0f       	add	r24, r24
     3e4:	99 1f       	adc	r25, r25
     3e6:	6a 95       	dec	r22
     3e8:	e2 f7       	brpl	.-8      	; 0x3e2 <DIO_set_pin_dir+0xba>
     3ea:	82 2b       	or	r24, r18
     3ec:	81 bb       	out	0x11, r24	; 17
     3ee:	08 95       	ret
     3f0:	21 b3       	in	r18, 0x11	; 17
     3f2:	81 e0       	ldi	r24, 0x01	; 1
     3f4:	90 e0       	ldi	r25, 0x00	; 0
     3f6:	02 c0       	rjmp	.+4      	; 0x3fc <DIO_set_pin_dir+0xd4>
     3f8:	88 0f       	add	r24, r24
     3fa:	99 1f       	adc	r25, r25
     3fc:	6a 95       	dec	r22
     3fe:	e2 f7       	brpl	.-8      	; 0x3f8 <DIO_set_pin_dir+0xd0>
     400:	80 95       	com	r24
     402:	82 23       	and	r24, r18
     404:	81 bb       	out	0x11, r24	; 17
     406:	08 95       	ret

00000408 <DIO_write_pin>:
     408:	90 e0       	ldi	r25, 0x00	; 0
     40a:	fc 01       	movw	r30, r24
     40c:	e1 54       	subi	r30, 0x41	; 65
     40e:	f1 09       	sbc	r31, r1
     410:	e4 32       	cpi	r30, 0x24	; 36
     412:	f1 05       	cpc	r31, r1
     414:	08 f0       	brcs	.+2      	; 0x418 <DIO_write_pin+0x10>
     416:	67 c0       	rjmp	.+206    	; 0x4e6 <DIO_write_pin+0xde>
     418:	e2 5b       	subi	r30, 0xB2	; 178
     41a:	ff 4f       	sbci	r31, 0xFF	; 255
     41c:	0c 94 1f 0b 	jmp	0x163e	; 0x163e <__tablejump2__>
     420:	41 30       	cpi	r20, 0x01	; 1
     422:	59 f4       	brne	.+22     	; 0x43a <DIO_write_pin+0x32>
     424:	2b b3       	in	r18, 0x1b	; 27
     426:	81 e0       	ldi	r24, 0x01	; 1
     428:	90 e0       	ldi	r25, 0x00	; 0
     42a:	02 c0       	rjmp	.+4      	; 0x430 <DIO_write_pin+0x28>
     42c:	88 0f       	add	r24, r24
     42e:	99 1f       	adc	r25, r25
     430:	6a 95       	dec	r22
     432:	e2 f7       	brpl	.-8      	; 0x42c <DIO_write_pin+0x24>
     434:	82 2b       	or	r24, r18
     436:	8b bb       	out	0x1b, r24	; 27
     438:	08 95       	ret
     43a:	2b b3       	in	r18, 0x1b	; 27
     43c:	81 e0       	ldi	r24, 0x01	; 1
     43e:	90 e0       	ldi	r25, 0x00	; 0
     440:	02 c0       	rjmp	.+4      	; 0x446 <DIO_write_pin+0x3e>
     442:	88 0f       	add	r24, r24
     444:	99 1f       	adc	r25, r25
     446:	6a 95       	dec	r22
     448:	e2 f7       	brpl	.-8      	; 0x442 <DIO_write_pin+0x3a>
     44a:	80 95       	com	r24
     44c:	82 23       	and	r24, r18
     44e:	8b bb       	out	0x1b, r24	; 27
     450:	08 95       	ret
     452:	41 30       	cpi	r20, 0x01	; 1
     454:	59 f4       	brne	.+22     	; 0x46c <DIO_write_pin+0x64>
     456:	28 b3       	in	r18, 0x18	; 24
     458:	81 e0       	ldi	r24, 0x01	; 1
     45a:	90 e0       	ldi	r25, 0x00	; 0
     45c:	02 c0       	rjmp	.+4      	; 0x462 <DIO_write_pin+0x5a>
     45e:	88 0f       	add	r24, r24
     460:	99 1f       	adc	r25, r25
     462:	6a 95       	dec	r22
     464:	e2 f7       	brpl	.-8      	; 0x45e <DIO_write_pin+0x56>
     466:	82 2b       	or	r24, r18
     468:	88 bb       	out	0x18, r24	; 24
     46a:	08 95       	ret
     46c:	28 b3       	in	r18, 0x18	; 24
     46e:	81 e0       	ldi	r24, 0x01	; 1
     470:	90 e0       	ldi	r25, 0x00	; 0
     472:	02 c0       	rjmp	.+4      	; 0x478 <DIO_write_pin+0x70>
     474:	88 0f       	add	r24, r24
     476:	99 1f       	adc	r25, r25
     478:	6a 95       	dec	r22
     47a:	e2 f7       	brpl	.-8      	; 0x474 <DIO_write_pin+0x6c>
     47c:	80 95       	com	r24
     47e:	82 23       	and	r24, r18
     480:	88 bb       	out	0x18, r24	; 24
     482:	08 95       	ret
     484:	41 30       	cpi	r20, 0x01	; 1
     486:	59 f4       	brne	.+22     	; 0x49e <DIO_write_pin+0x96>
     488:	25 b3       	in	r18, 0x15	; 21
     48a:	81 e0       	ldi	r24, 0x01	; 1
     48c:	90 e0       	ldi	r25, 0x00	; 0
     48e:	02 c0       	rjmp	.+4      	; 0x494 <DIO_write_pin+0x8c>
     490:	88 0f       	add	r24, r24
     492:	99 1f       	adc	r25, r25
     494:	6a 95       	dec	r22
     496:	e2 f7       	brpl	.-8      	; 0x490 <DIO_write_pin+0x88>
     498:	82 2b       	or	r24, r18
     49a:	85 bb       	out	0x15, r24	; 21
     49c:	08 95       	ret
     49e:	25 b3       	in	r18, 0x15	; 21
     4a0:	81 e0       	ldi	r24, 0x01	; 1
     4a2:	90 e0       	ldi	r25, 0x00	; 0
     4a4:	02 c0       	rjmp	.+4      	; 0x4aa <DIO_write_pin+0xa2>
     4a6:	88 0f       	add	r24, r24
     4a8:	99 1f       	adc	r25, r25
     4aa:	6a 95       	dec	r22
     4ac:	e2 f7       	brpl	.-8      	; 0x4a6 <DIO_write_pin+0x9e>
     4ae:	80 95       	com	r24
     4b0:	82 23       	and	r24, r18
     4b2:	85 bb       	out	0x15, r24	; 21
     4b4:	08 95       	ret
     4b6:	41 30       	cpi	r20, 0x01	; 1
     4b8:	59 f4       	brne	.+22     	; 0x4d0 <DIO_write_pin+0xc8>
     4ba:	22 b3       	in	r18, 0x12	; 18
     4bc:	81 e0       	ldi	r24, 0x01	; 1
     4be:	90 e0       	ldi	r25, 0x00	; 0
     4c0:	02 c0       	rjmp	.+4      	; 0x4c6 <DIO_write_pin+0xbe>
     4c2:	88 0f       	add	r24, r24
     4c4:	99 1f       	adc	r25, r25
     4c6:	6a 95       	dec	r22
     4c8:	e2 f7       	brpl	.-8      	; 0x4c2 <DIO_write_pin+0xba>
     4ca:	82 2b       	or	r24, r18
     4cc:	82 bb       	out	0x12, r24	; 18
     4ce:	08 95       	ret
     4d0:	22 b3       	in	r18, 0x12	; 18
     4d2:	81 e0       	ldi	r24, 0x01	; 1
     4d4:	90 e0       	ldi	r25, 0x00	; 0
     4d6:	02 c0       	rjmp	.+4      	; 0x4dc <DIO_write_pin+0xd4>
     4d8:	88 0f       	add	r24, r24
     4da:	99 1f       	adc	r25, r25
     4dc:	6a 95       	dec	r22
     4de:	e2 f7       	brpl	.-8      	; 0x4d8 <DIO_write_pin+0xd0>
     4e0:	80 95       	com	r24
     4e2:	82 23       	and	r24, r18
     4e4:	82 bb       	out	0x12, r24	; 18
     4e6:	08 95       	ret

000004e8 <DIO_read_pin>:
     4e8:	90 e0       	ldi	r25, 0x00	; 0
     4ea:	fc 01       	movw	r30, r24
     4ec:	e1 54       	subi	r30, 0x41	; 65
     4ee:	f1 09       	sbc	r31, r1
     4f0:	e4 32       	cpi	r30, 0x24	; 36
     4f2:	f1 05       	cpc	r31, r1
     4f4:	08 f0       	brcs	.+2      	; 0x4f8 <DIO_read_pin+0x10>
     4f6:	54 c0       	rjmp	.+168    	; 0x5a0 <DIO_read_pin+0xb8>
     4f8:	ee 58       	subi	r30, 0x8E	; 142
     4fa:	ff 4f       	sbci	r31, 0xFF	; 255
     4fc:	0c 94 1f 0b 	jmp	0x163e	; 0x163e <__tablejump2__>
     500:	49 b3       	in	r20, 0x19	; 25
     502:	81 e0       	ldi	r24, 0x01	; 1
     504:	90 e0       	ldi	r25, 0x00	; 0
     506:	9c 01       	movw	r18, r24
     508:	06 2e       	mov	r0, r22
     50a:	02 c0       	rjmp	.+4      	; 0x510 <DIO_read_pin+0x28>
     50c:	22 0f       	add	r18, r18
     50e:	33 1f       	adc	r19, r19
     510:	0a 94       	dec	r0
     512:	e2 f7       	brpl	.-8      	; 0x50c <DIO_read_pin+0x24>
     514:	84 2f       	mov	r24, r20
     516:	90 e0       	ldi	r25, 0x00	; 0
     518:	82 23       	and	r24, r18
     51a:	93 23       	and	r25, r19
     51c:	02 c0       	rjmp	.+4      	; 0x522 <DIO_read_pin+0x3a>
     51e:	95 95       	asr	r25
     520:	87 95       	ror	r24
     522:	6a 95       	dec	r22
     524:	e2 f7       	brpl	.-8      	; 0x51e <DIO_read_pin+0x36>
     526:	08 95       	ret
     528:	46 b3       	in	r20, 0x16	; 22
     52a:	81 e0       	ldi	r24, 0x01	; 1
     52c:	90 e0       	ldi	r25, 0x00	; 0
     52e:	9c 01       	movw	r18, r24
     530:	06 2e       	mov	r0, r22
     532:	02 c0       	rjmp	.+4      	; 0x538 <DIO_read_pin+0x50>
     534:	22 0f       	add	r18, r18
     536:	33 1f       	adc	r19, r19
     538:	0a 94       	dec	r0
     53a:	e2 f7       	brpl	.-8      	; 0x534 <DIO_read_pin+0x4c>
     53c:	84 2f       	mov	r24, r20
     53e:	90 e0       	ldi	r25, 0x00	; 0
     540:	82 23       	and	r24, r18
     542:	93 23       	and	r25, r19
     544:	02 c0       	rjmp	.+4      	; 0x54a <DIO_read_pin+0x62>
     546:	95 95       	asr	r25
     548:	87 95       	ror	r24
     54a:	6a 95       	dec	r22
     54c:	e2 f7       	brpl	.-8      	; 0x546 <DIO_read_pin+0x5e>
     54e:	08 95       	ret
     550:	43 b3       	in	r20, 0x13	; 19
     552:	81 e0       	ldi	r24, 0x01	; 1
     554:	90 e0       	ldi	r25, 0x00	; 0
     556:	9c 01       	movw	r18, r24
     558:	06 2e       	mov	r0, r22
     55a:	02 c0       	rjmp	.+4      	; 0x560 <DIO_read_pin+0x78>
     55c:	22 0f       	add	r18, r18
     55e:	33 1f       	adc	r19, r19
     560:	0a 94       	dec	r0
     562:	e2 f7       	brpl	.-8      	; 0x55c <DIO_read_pin+0x74>
     564:	84 2f       	mov	r24, r20
     566:	90 e0       	ldi	r25, 0x00	; 0
     568:	82 23       	and	r24, r18
     56a:	93 23       	and	r25, r19
     56c:	02 c0       	rjmp	.+4      	; 0x572 <DIO_read_pin+0x8a>
     56e:	95 95       	asr	r25
     570:	87 95       	ror	r24
     572:	6a 95       	dec	r22
     574:	e2 f7       	brpl	.-8      	; 0x56e <DIO_read_pin+0x86>
     576:	08 95       	ret
     578:	40 b3       	in	r20, 0x10	; 16
     57a:	81 e0       	ldi	r24, 0x01	; 1
     57c:	90 e0       	ldi	r25, 0x00	; 0
     57e:	9c 01       	movw	r18, r24
     580:	06 2e       	mov	r0, r22
     582:	02 c0       	rjmp	.+4      	; 0x588 <DIO_read_pin+0xa0>
     584:	22 0f       	add	r18, r18
     586:	33 1f       	adc	r19, r19
     588:	0a 94       	dec	r0
     58a:	e2 f7       	brpl	.-8      	; 0x584 <DIO_read_pin+0x9c>
     58c:	84 2f       	mov	r24, r20
     58e:	90 e0       	ldi	r25, 0x00	; 0
     590:	82 23       	and	r24, r18
     592:	93 23       	and	r25, r19
     594:	02 c0       	rjmp	.+4      	; 0x59a <DIO_read_pin+0xb2>
     596:	95 95       	asr	r25
     598:	87 95       	ror	r24
     59a:	6a 95       	dec	r22
     59c:	e2 f7       	brpl	.-8      	; 0x596 <DIO_read_pin+0xae>
     59e:	08 95       	ret
     5a0:	80 e0       	ldi	r24, 0x00	; 0
     5a2:	08 95       	ret

000005a4 <DIO_set_port_dir>:
     5a4:	90 e0       	ldi	r25, 0x00	; 0
     5a6:	fc 01       	movw	r30, r24
     5a8:	e1 54       	subi	r30, 0x41	; 65
     5aa:	f1 09       	sbc	r31, r1
     5ac:	e4 32       	cpi	r30, 0x24	; 36
     5ae:	f1 05       	cpc	r31, r1
     5b0:	58 f4       	brcc	.+22     	; 0x5c8 <DIO_set_port_dir+0x24>
     5b2:	ea 56       	subi	r30, 0x6A	; 106
     5b4:	ff 4f       	sbci	r31, 0xFF	; 255
     5b6:	0c 94 1f 0b 	jmp	0x163e	; 0x163e <__tablejump2__>
     5ba:	6a bb       	out	0x1a, r22	; 26
     5bc:	08 95       	ret
     5be:	67 bb       	out	0x17, r22	; 23
     5c0:	08 95       	ret
     5c2:	64 bb       	out	0x14, r22	; 20
     5c4:	08 95       	ret
     5c6:	61 bb       	out	0x11, r22	; 17
     5c8:	08 95       	ret

000005ca <DIO_write_port>:
     5ca:	90 e0       	ldi	r25, 0x00	; 0
     5cc:	fc 01       	movw	r30, r24
     5ce:	e1 54       	subi	r30, 0x41	; 65
     5d0:	f1 09       	sbc	r31, r1
     5d2:	e4 32       	cpi	r30, 0x24	; 36
     5d4:	f1 05       	cpc	r31, r1
     5d6:	58 f4       	brcc	.+22     	; 0x5ee <DIO_write_port+0x24>
     5d8:	e6 54       	subi	r30, 0x46	; 70
     5da:	ff 4f       	sbci	r31, 0xFF	; 255
     5dc:	0c 94 1f 0b 	jmp	0x163e	; 0x163e <__tablejump2__>
     5e0:	6b bb       	out	0x1b, r22	; 27
     5e2:	08 95       	ret
     5e4:	68 bb       	out	0x18, r22	; 24
     5e6:	08 95       	ret
     5e8:	65 bb       	out	0x15, r22	; 21
     5ea:	08 95       	ret
     5ec:	62 bb       	out	0x12, r22	; 18
     5ee:	08 95       	ret

000005f0 <DIO_connect_pull_up>:

void DIO_connect_pull_up(unsigned char port,unsigned char pin_number,unsigned char connect_pull_up)
{
	switch(port)
     5f0:	90 e0       	ldi	r25, 0x00	; 0
     5f2:	fc 01       	movw	r30, r24
     5f4:	e1 54       	subi	r30, 0x41	; 65
     5f6:	f1 09       	sbc	r31, r1
     5f8:	e4 32       	cpi	r30, 0x24	; 36
     5fa:	f1 05       	cpc	r31, r1
     5fc:	08 f0       	brcs	.+2      	; 0x600 <DIO_connect_pull_up+0x10>
     5fe:	67 c0       	rjmp	.+206    	; 0x6ce <DIO_connect_pull_up+0xde>
     600:	e2 52       	subi	r30, 0x22	; 34
     602:	ff 4f       	sbci	r31, 0xFF	; 255
     604:	0c 94 1f 0b 	jmp	0x163e	; 0x163e <__tablejump2__>
	{
		case 'a':
		case 'A':
		if(1==connect_pull_up)
     608:	41 30       	cpi	r20, 0x01	; 1
     60a:	59 f4       	brne	.+22     	; 0x622 <DIO_connect_pull_up+0x32>
		{
			SET_BIT(PORTA,pin_number);
     60c:	2b b3       	in	r18, 0x1b	; 27
     60e:	81 e0       	ldi	r24, 0x01	; 1
     610:	90 e0       	ldi	r25, 0x00	; 0
     612:	02 c0       	rjmp	.+4      	; 0x618 <DIO_connect_pull_up+0x28>
     614:	88 0f       	add	r24, r24
     616:	99 1f       	adc	r25, r25
     618:	6a 95       	dec	r22
     61a:	e2 f7       	brpl	.-8      	; 0x614 <DIO_connect_pull_up+0x24>
     61c:	82 2b       	or	r24, r18
     61e:	8b bb       	out	0x1b, r24	; 27
     620:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTA,pin_number);
     622:	2b b3       	in	r18, 0x1b	; 27
     624:	81 e0       	ldi	r24, 0x01	; 1
     626:	90 e0       	ldi	r25, 0x00	; 0
     628:	02 c0       	rjmp	.+4      	; 0x62e <DIO_connect_pull_up+0x3e>
     62a:	88 0f       	add	r24, r24
     62c:	99 1f       	adc	r25, r25
     62e:	6a 95       	dec	r22
     630:	e2 f7       	brpl	.-8      	; 0x62a <DIO_connect_pull_up+0x3a>
     632:	80 95       	com	r24
     634:	82 23       	and	r24, r18
     636:	8b bb       	out	0x1b, r24	; 27
     638:	08 95       	ret
		}
		break;
		case 'b':
		case 'B':
		if(1==connect_pull_up)
     63a:	41 30       	cpi	r20, 0x01	; 1
     63c:	59 f4       	brne	.+22     	; 0x654 <DIO_connect_pull_up+0x64>
		{
			SET_BIT(PORTB,pin_number);
     63e:	28 b3       	in	r18, 0x18	; 24
     640:	81 e0       	ldi	r24, 0x01	; 1
     642:	90 e0       	ldi	r25, 0x00	; 0
     644:	02 c0       	rjmp	.+4      	; 0x64a <DIO_connect_pull_up+0x5a>
     646:	88 0f       	add	r24, r24
     648:	99 1f       	adc	r25, r25
     64a:	6a 95       	dec	r22
     64c:	e2 f7       	brpl	.-8      	; 0x646 <DIO_connect_pull_up+0x56>
     64e:	82 2b       	or	r24, r18
     650:	88 bb       	out	0x18, r24	; 24
     652:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTB,pin_number);
     654:	28 b3       	in	r18, 0x18	; 24
     656:	81 e0       	ldi	r24, 0x01	; 1
     658:	90 e0       	ldi	r25, 0x00	; 0
     65a:	02 c0       	rjmp	.+4      	; 0x660 <DIO_connect_pull_up+0x70>
     65c:	88 0f       	add	r24, r24
     65e:	99 1f       	adc	r25, r25
     660:	6a 95       	dec	r22
     662:	e2 f7       	brpl	.-8      	; 0x65c <DIO_connect_pull_up+0x6c>
     664:	80 95       	com	r24
     666:	82 23       	and	r24, r18
     668:	88 bb       	out	0x18, r24	; 24
     66a:	08 95       	ret
		}
		break;		
		case 'c':
		case 'C':
		if(1==connect_pull_up)
     66c:	41 30       	cpi	r20, 0x01	; 1
     66e:	59 f4       	brne	.+22     	; 0x686 <DIO_connect_pull_up+0x96>
		{
			SET_BIT(PORTC,pin_number);
     670:	25 b3       	in	r18, 0x15	; 21
     672:	81 e0       	ldi	r24, 0x01	; 1
     674:	90 e0       	ldi	r25, 0x00	; 0
     676:	02 c0       	rjmp	.+4      	; 0x67c <DIO_connect_pull_up+0x8c>
     678:	88 0f       	add	r24, r24
     67a:	99 1f       	adc	r25, r25
     67c:	6a 95       	dec	r22
     67e:	e2 f7       	brpl	.-8      	; 0x678 <DIO_connect_pull_up+0x88>
     680:	82 2b       	or	r24, r18
     682:	85 bb       	out	0x15, r24	; 21
     684:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTC,pin_number);
     686:	25 b3       	in	r18, 0x15	; 21
     688:	81 e0       	ldi	r24, 0x01	; 1
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	02 c0       	rjmp	.+4      	; 0x692 <DIO_connect_pull_up+0xa2>
     68e:	88 0f       	add	r24, r24
     690:	99 1f       	adc	r25, r25
     692:	6a 95       	dec	r22
     694:	e2 f7       	brpl	.-8      	; 0x68e <DIO_connect_pull_up+0x9e>
     696:	80 95       	com	r24
     698:	82 23       	and	r24, r18
     69a:	85 bb       	out	0x15, r24	; 21
     69c:	08 95       	ret
		}
		break;		
		case 'd':
		case 'D':
		if(1==connect_pull_up)
     69e:	41 30       	cpi	r20, 0x01	; 1
     6a0:	59 f4       	brne	.+22     	; 0x6b8 <DIO_connect_pull_up+0xc8>
		{
			SET_BIT(PORTD,pin_number);
     6a2:	22 b3       	in	r18, 0x12	; 18
     6a4:	81 e0       	ldi	r24, 0x01	; 1
     6a6:	90 e0       	ldi	r25, 0x00	; 0
     6a8:	02 c0       	rjmp	.+4      	; 0x6ae <DIO_connect_pull_up+0xbe>
     6aa:	88 0f       	add	r24, r24
     6ac:	99 1f       	adc	r25, r25
     6ae:	6a 95       	dec	r22
     6b0:	e2 f7       	brpl	.-8      	; 0x6aa <DIO_connect_pull_up+0xba>
     6b2:	82 2b       	or	r24, r18
     6b4:	82 bb       	out	0x12, r24	; 18
     6b6:	08 95       	ret
		}
		else
		{
			CLR_BIT(PORTD,pin_number);
     6b8:	22 b3       	in	r18, 0x12	; 18
     6ba:	81 e0       	ldi	r24, 0x01	; 1
     6bc:	90 e0       	ldi	r25, 0x00	; 0
     6be:	02 c0       	rjmp	.+4      	; 0x6c4 <DIO_connect_pull_up+0xd4>
     6c0:	88 0f       	add	r24, r24
     6c2:	99 1f       	adc	r25, r25
     6c4:	6a 95       	dec	r22
     6c6:	e2 f7       	brpl	.-8      	; 0x6c0 <DIO_connect_pull_up+0xd0>
     6c8:	80 95       	com	r24
     6ca:	82 23       	and	r24, r18
     6cc:	82 bb       	out	0x12, r24	; 18
     6ce:	08 95       	ret

000006d0 <KEYBAD_init>:
#include "KEYBAD.h"
#include "DIO.h"

void KEYBAD_init(void)
{
	DIO_set_pin_dir(PORT_11,0,1);
     6d0:	41 e0       	ldi	r20, 0x01	; 1
     6d2:	60 e0       	ldi	r22, 0x00	; 0
     6d4:	83 e4       	ldi	r24, 0x43	; 67
     6d6:	0e 94 94 01 	call	0x328	; 0x328 <DIO_set_pin_dir>
	DIO_set_pin_dir(PORT_11,1,1);
     6da:	41 e0       	ldi	r20, 0x01	; 1
     6dc:	61 e0       	ldi	r22, 0x01	; 1
     6de:	83 e4       	ldi	r24, 0x43	; 67
     6e0:	0e 94 94 01 	call	0x328	; 0x328 <DIO_set_pin_dir>
	DIO_set_pin_dir(PORT_11,2,1);
     6e4:	41 e0       	ldi	r20, 0x01	; 1
     6e6:	62 e0       	ldi	r22, 0x02	; 2
     6e8:	83 e4       	ldi	r24, 0x43	; 67
     6ea:	0e 94 94 01 	call	0x328	; 0x328 <DIO_set_pin_dir>
	DIO_set_pin_dir(PORT_11,3,1);
     6ee:	41 e0       	ldi	r20, 0x01	; 1
     6f0:	63 e0       	ldi	r22, 0x03	; 3
     6f2:	83 e4       	ldi	r24, 0x43	; 67
     6f4:	0e 94 94 01 	call	0x328	; 0x328 <DIO_set_pin_dir>
	DIO_set_pin_dir(PORT_22,0,0);
     6f8:	40 e0       	ldi	r20, 0x00	; 0
     6fa:	60 e0       	ldi	r22, 0x00	; 0
     6fc:	84 e4       	ldi	r24, 0x44	; 68
     6fe:	0e 94 94 01 	call	0x328	; 0x328 <DIO_set_pin_dir>
	DIO_set_pin_dir(PORT_22,1,0);
     702:	40 e0       	ldi	r20, 0x00	; 0
     704:	61 e0       	ldi	r22, 0x01	; 1
     706:	84 e4       	ldi	r24, 0x44	; 68
     708:	0e 94 94 01 	call	0x328	; 0x328 <DIO_set_pin_dir>
	DIO_set_pin_dir(PORT_22,2,0);
     70c:	40 e0       	ldi	r20, 0x00	; 0
     70e:	62 e0       	ldi	r22, 0x02	; 2
     710:	84 e4       	ldi	r24, 0x44	; 68
     712:	0e 94 94 01 	call	0x328	; 0x328 <DIO_set_pin_dir>
	DIO_set_pin_dir(PORT_22,3,0);
     716:	40 e0       	ldi	r20, 0x00	; 0
     718:	63 e0       	ldi	r22, 0x03	; 3
     71a:	84 e4       	ldi	r24, 0x44	; 68
     71c:	0e 94 94 01 	call	0x328	; 0x328 <DIO_set_pin_dir>
	DIO_set_pin_dir(PORT_22,4,0);
     720:	40 e0       	ldi	r20, 0x00	; 0
     722:	64 e0       	ldi	r22, 0x04	; 4
     724:	84 e4       	ldi	r24, 0x44	; 68
     726:	0e 94 94 01 	call	0x328	; 0x328 <DIO_set_pin_dir>
	DIO_set_pin_dir(PORT_22,5,0);
     72a:	40 e0       	ldi	r20, 0x00	; 0
     72c:	65 e0       	ldi	r22, 0x05	; 5
     72e:	84 e4       	ldi	r24, 0x44	; 68
     730:	0e 94 94 01 	call	0x328	; 0x328 <DIO_set_pin_dir>
	DIO_connect_pull_up(PORT_22,0,1);
     734:	41 e0       	ldi	r20, 0x01	; 1
     736:	60 e0       	ldi	r22, 0x00	; 0
     738:	84 e4       	ldi	r24, 0x44	; 68
     73a:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <DIO_connect_pull_up>
	DIO_connect_pull_up(PORT_22,1,1);
     73e:	41 e0       	ldi	r20, 0x01	; 1
     740:	61 e0       	ldi	r22, 0x01	; 1
     742:	84 e4       	ldi	r24, 0x44	; 68
     744:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <DIO_connect_pull_up>
	DIO_connect_pull_up(PORT_22,2,1);
     748:	41 e0       	ldi	r20, 0x01	; 1
     74a:	62 e0       	ldi	r22, 0x02	; 2
     74c:	84 e4       	ldi	r24, 0x44	; 68
     74e:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <DIO_connect_pull_up>
	DIO_connect_pull_up(PORT_22,3,1);
     752:	41 e0       	ldi	r20, 0x01	; 1
     754:	63 e0       	ldi	r22, 0x03	; 3
     756:	84 e4       	ldi	r24, 0x44	; 68
     758:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <DIO_connect_pull_up>
	DIO_connect_pull_up(PORT_22,4,1);
     75c:	41 e0       	ldi	r20, 0x01	; 1
     75e:	64 e0       	ldi	r22, 0x04	; 4
     760:	84 e4       	ldi	r24, 0x44	; 68
     762:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <DIO_connect_pull_up>
	DIO_connect_pull_up(PORT_22,5,1);
     766:	41 e0       	ldi	r20, 0x01	; 1
     768:	65 e0       	ldi	r22, 0x05	; 5
     76a:	84 e4       	ldi	r24, 0x44	; 68
     76c:	0e 94 f8 02 	call	0x5f0	; 0x5f0 <DIO_connect_pull_up>
     770:	08 95       	ret

00000772 <KEYBAD_check_press>:
}

char KEYBAD_check_press(void)
{
     772:	ef 92       	push	r14
     774:	ff 92       	push	r15
     776:	0f 93       	push	r16
     778:	1f 93       	push	r17
     77a:	cf 93       	push	r28
     77c:	df 93       	push	r29
     77e:	cd b7       	in	r28, 0x3d	; 61
     780:	de b7       	in	r29, 0x3e	; 62
     782:	68 97       	sbiw	r28, 0x18	; 24
     784:	0f b6       	in	r0, 0x3f	; 63
     786:	f8 94       	cli
     788:	de bf       	out	0x3e, r29	; 62
     78a:	0f be       	out	0x3f, r0	; 63
     78c:	cd bf       	out	0x3d, r28	; 61
	char arr_out_val[4][6]={{'A','7','8','9','*','/'},{'^','4','5','6','-','M'},{'%','1','2','3','+','B'},{'S','0','.','=','+','C'}};
     78e:	88 e1       	ldi	r24, 0x18	; 24
     790:	e0 e6       	ldi	r30, 0x60	; 96
     792:	f0 e0       	ldi	r31, 0x00	; 0
     794:	de 01       	movw	r26, r28
     796:	11 96       	adiw	r26, 0x01	; 1
     798:	01 90       	ld	r0, Z+
     79a:	0d 92       	st	X+, r0
     79c:	8a 95       	dec	r24
     79e:	e1 f7       	brne	.-8      	; 0x798 <KEYBAD_check_press+0x26>
	char ret_val=NOT_pressed,value;
	char row,coloum;
	for(row=0;row<4;row++)
     7a0:	f1 2c       	mov	r15, r1
}

char KEYBAD_check_press(void)
{
	char arr_out_val[4][6]={{'A','7','8','9','*','/'},{'^','4','5','6','-','M'},{'%','1','2','3','+','B'},{'S','0','.','=','+','C'}};
	char ret_val=NOT_pressed,value;
     7a2:	ee 24       	eor	r14, r14
     7a4:	ea 94       	dec	r14
	char row,coloum;
	for(row=0;row<4;row++)
     7a6:	3b c0       	rjmp	.+118    	; 0x81e <__DATA_REGION_LENGTH__+0x1e>
	{
		DIO_write_pin(PORT_11,0,1);
     7a8:	41 e0       	ldi	r20, 0x01	; 1
     7aa:	60 e0       	ldi	r22, 0x00	; 0
     7ac:	83 e4       	ldi	r24, 0x43	; 67
     7ae:	0e 94 04 02 	call	0x408	; 0x408 <DIO_write_pin>
		DIO_write_pin(PORT_11,1,1);
     7b2:	41 e0       	ldi	r20, 0x01	; 1
     7b4:	61 e0       	ldi	r22, 0x01	; 1
     7b6:	83 e4       	ldi	r24, 0x43	; 67
     7b8:	0e 94 04 02 	call	0x408	; 0x408 <DIO_write_pin>
		DIO_write_pin(PORT_11,2,1);
     7bc:	41 e0       	ldi	r20, 0x01	; 1
     7be:	62 e0       	ldi	r22, 0x02	; 2
     7c0:	83 e4       	ldi	r24, 0x43	; 67
     7c2:	0e 94 04 02 	call	0x408	; 0x408 <DIO_write_pin>
		DIO_write_pin(PORT_11,3,1);
     7c6:	41 e0       	ldi	r20, 0x01	; 1
     7c8:	63 e0       	ldi	r22, 0x03	; 3
     7ca:	83 e4       	ldi	r24, 0x43	; 67
     7cc:	0e 94 04 02 	call	0x408	; 0x408 <DIO_write_pin>
		DIO_write_pin(PORT_11,row,0);
     7d0:	40 e0       	ldi	r20, 0x00	; 0
     7d2:	6f 2d       	mov	r22, r15
     7d4:	83 e4       	ldi	r24, 0x43	; 67
     7d6:	0e 94 04 02 	call	0x408	; 0x408 <DIO_write_pin>
		for (coloum=0;coloum<6;coloum++)
     7da:	10 e0       	ldi	r17, 0x00	; 0
     7dc:	1b c0       	rjmp	.+54     	; 0x814 <__DATA_REGION_LENGTH__+0x14>
		{
			value=DIO_read_pin(PORT_22,coloum);
     7de:	61 2f       	mov	r22, r17
     7e0:	84 e4       	ldi	r24, 0x44	; 68
     7e2:	0e 94 74 02 	call	0x4e8	; 0x4e8 <DIO_read_pin>
     7e6:	08 2f       	mov	r16, r24
			if(0==value)
     7e8:	81 11       	cpse	r24, r1
     7ea:	13 c0       	rjmp	.+38     	; 0x812 <__DATA_REGION_LENGTH__+0x12>
			{
				ret_val=arr_out_val[row][coloum];
     7ec:	8f 2d       	mov	r24, r15
     7ee:	90 e0       	ldi	r25, 0x00	; 0
     7f0:	fc 01       	movw	r30, r24
     7f2:	ee 0f       	add	r30, r30
     7f4:	ff 1f       	adc	r31, r31
     7f6:	e8 0f       	add	r30, r24
     7f8:	f9 1f       	adc	r31, r25
     7fa:	ee 0f       	add	r30, r30
     7fc:	ff 1f       	adc	r31, r31
     7fe:	81 e0       	ldi	r24, 0x01	; 1
     800:	90 e0       	ldi	r25, 0x00	; 0
     802:	8c 0f       	add	r24, r28
     804:	9d 1f       	adc	r25, r29
     806:	e8 0f       	add	r30, r24
     808:	f9 1f       	adc	r31, r25
     80a:	e1 0f       	add	r30, r17
     80c:	f1 1d       	adc	r31, r1
     80e:	e0 80       	ld	r14, Z
				break;
     810:	03 c0       	rjmp	.+6      	; 0x818 <__DATA_REGION_LENGTH__+0x18>
		DIO_write_pin(PORT_11,0,1);
		DIO_write_pin(PORT_11,1,1);
		DIO_write_pin(PORT_11,2,1);
		DIO_write_pin(PORT_11,3,1);
		DIO_write_pin(PORT_11,row,0);
		for (coloum=0;coloum<6;coloum++)
     812:	1f 5f       	subi	r17, 0xFF	; 255
     814:	16 30       	cpi	r17, 0x06	; 6
     816:	18 f3       	brcs	.-58     	; 0x7de <KEYBAD_check_press+0x6c>
			{
				ret_val=arr_out_val[row][coloum];
				break;
			}
		}
		if (0==value)
     818:	00 23       	and	r16, r16
     81a:	21 f0       	breq	.+8      	; 0x824 <__DATA_REGION_LENGTH__+0x24>
char KEYBAD_check_press(void)
{
	char arr_out_val[4][6]={{'A','7','8','9','*','/'},{'^','4','5','6','-','M'},{'%','1','2','3','+','B'},{'S','0','.','=','+','C'}};
	char ret_val=NOT_pressed,value;
	char row,coloum;
	for(row=0;row<4;row++)
     81c:	f3 94       	inc	r15
     81e:	93 e0       	ldi	r25, 0x03	; 3
     820:	9f 15       	cp	r25, r15
     822:	10 f6       	brcc	.-124    	; 0x7a8 <KEYBAD_check_press+0x36>
		{
			break;
		}
	}
	return ret_val;
     824:	8e 2d       	mov	r24, r14
     826:	68 96       	adiw	r28, 0x18	; 24
     828:	0f b6       	in	r0, 0x3f	; 63
     82a:	f8 94       	cli
     82c:	de bf       	out	0x3e, r29	; 62
     82e:	0f be       	out	0x3f, r0	; 63
     830:	cd bf       	out	0x3d, r28	; 61
     832:	df 91       	pop	r29
     834:	cf 91       	pop	r28
     836:	1f 91       	pop	r17
     838:	0f 91       	pop	r16
     83a:	ff 90       	pop	r15
     83c:	ef 90       	pop	r14
     83e:	08 95       	ret

00000840 <enable>:
	#endif
}

static void enable(void)
{
	DIO_write_pin(PORT_2,EN,1);
     840:	41 e0       	ldi	r20, 0x01	; 1
     842:	62 e0       	ldi	r22, 0x02	; 2
     844:	82 e4       	ldi	r24, 0x42	; 66
     846:	0e 94 04 02 	call	0x408	; 0x408 <DIO_write_pin>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     84a:	8f e9       	ldi	r24, 0x9F	; 159
     84c:	9f e0       	ldi	r25, 0x0F	; 15
     84e:	01 97       	sbiw	r24, 0x01	; 1
     850:	f1 f7       	brne	.-4      	; 0x84e <enable+0xe>
     852:	00 c0       	rjmp	.+0      	; 0x854 <enable+0x14>
     854:	00 00       	nop
	_delay_ms(2);
	DIO_write_pin(PORT_2,EN,0);
     856:	40 e0       	ldi	r20, 0x00	; 0
     858:	62 e0       	ldi	r22, 0x02	; 2
     85a:	82 e4       	ldi	r24, 0x42	; 66
     85c:	0e 94 04 02 	call	0x408	; 0x408 <DIO_write_pin>
     860:	8f e9       	ldi	r24, 0x9F	; 159
     862:	9f e0       	ldi	r25, 0x0F	; 15
     864:	01 97       	sbiw	r24, 0x01	; 1
     866:	f1 f7       	brne	.-4      	; 0x864 <__stack+0x5>
     868:	00 c0       	rjmp	.+0      	; 0x86a <__stack+0xb>
     86a:	00 00       	nop
     86c:	08 95       	ret

0000086e <LCD_send_cmd>:
	_delay_ms(2);
}

void LCD_send_cmd(char cmd)
{
     86e:	cf 93       	push	r28
     870:	c8 2f       	mov	r28, r24
	DIO_write_pin(PORT_2,RS,0);
     872:	40 e0       	ldi	r20, 0x00	; 0
     874:	60 e0       	ldi	r22, 0x00	; 0
     876:	82 e4       	ldi	r24, 0x42	; 66
     878:	0e 94 04 02 	call	0x408	; 0x408 <DIO_write_pin>
	#if defined eight_bits_mode
	DIO_write_port(PORT_1,cmd);
     87c:	6c 2f       	mov	r22, r28
     87e:	81 e4       	ldi	r24, 0x41	; 65
     880:	0e 94 e5 02 	call	0x5ca	; 0x5ca <DIO_write_port>
	enable();
     884:	0e 94 20 04 	call	0x840	; 0x840 <enable>
     888:	8f ec       	ldi	r24, 0xCF	; 207
     88a:	97 e0       	ldi	r25, 0x07	; 7
     88c:	01 97       	sbiw	r24, 0x01	; 1
     88e:	f1 f7       	brne	.-4      	; 0x88c <LCD_send_cmd+0x1e>
     890:	00 c0       	rjmp	.+0      	; 0x892 <LCD_send_cmd+0x24>
     892:	00 00       	nop
	enable();
	DIO_write_high_nibble(PORT_1,cmd);
	enable();
	#endif
	_delay_ms(1);
}
     894:	cf 91       	pop	r28
     896:	08 95       	ret

00000898 <LCD_init>:
     898:	2f ef       	ldi	r18, 0xFF	; 255
     89a:	81 ee       	ldi	r24, 0xE1	; 225
     89c:	94 e0       	ldi	r25, 0x04	; 4
     89e:	21 50       	subi	r18, 0x01	; 1
     8a0:	80 40       	sbci	r24, 0x00	; 0
     8a2:	90 40       	sbci	r25, 0x00	; 0
     8a4:	e1 f7       	brne	.-8      	; 0x89e <LCD_init+0x6>
     8a6:	00 c0       	rjmp	.+0      	; 0x8a8 <LCD_init+0x10>
     8a8:	00 00       	nop

void LCD_init(void)
{
	_delay_ms(200);
	#if defined eight_bits_mode
	DIO_set_port_dir(PORT_1,0xff);
     8aa:	6f ef       	ldi	r22, 0xFF	; 255
     8ac:	81 e4       	ldi	r24, 0x41	; 65
     8ae:	0e 94 d2 02 	call	0x5a4	; 0x5a4 <DIO_set_port_dir>
	DIO_set_pin_dir(PORT_2,EN,1);
     8b2:	41 e0       	ldi	r20, 0x01	; 1
     8b4:	62 e0       	ldi	r22, 0x02	; 2
     8b6:	82 e4       	ldi	r24, 0x42	; 66
     8b8:	0e 94 94 01 	call	0x328	; 0x328 <DIO_set_pin_dir>
	DIO_set_pin_dir(PORT_2,RW,1);
     8bc:	41 e0       	ldi	r20, 0x01	; 1
     8be:	61 e0       	ldi	r22, 0x01	; 1
     8c0:	82 e4       	ldi	r24, 0x42	; 66
     8c2:	0e 94 94 01 	call	0x328	; 0x328 <DIO_set_pin_dir>
	DIO_set_pin_dir(PORT_2,RS,1);
     8c6:	41 e0       	ldi	r20, 0x01	; 1
     8c8:	60 e0       	ldi	r22, 0x00	; 0
     8ca:	82 e4       	ldi	r24, 0x42	; 66
     8cc:	0e 94 94 01 	call	0x328	; 0x328 <DIO_set_pin_dir>
	DIO_write_pin(PORT_2,RW,0);
     8d0:	40 e0       	ldi	r20, 0x00	; 0
     8d2:	61 e0       	ldi	r22, 0x01	; 1
     8d4:	82 e4       	ldi	r24, 0x42	; 66
     8d6:	0e 94 04 02 	call	0x408	; 0x408 <DIO_write_pin>
	
	LCD_send_cmd(EIGHT_BITS);  //8_bits_mode
     8da:	88 e3       	ldi	r24, 0x38	; 56
     8dc:	0e 94 37 04 	call	0x86e	; 0x86e <LCD_send_cmd>
     8e0:	8f ec       	ldi	r24, 0xCF	; 207
     8e2:	97 e0       	ldi	r25, 0x07	; 7
     8e4:	01 97       	sbiw	r24, 0x01	; 1
     8e6:	f1 f7       	brne	.-4      	; 0x8e4 <LCD_init+0x4c>
     8e8:	00 c0       	rjmp	.+0      	; 0x8ea <LCD_init+0x52>
     8ea:	00 00       	nop
	_delay_ms(1);
	LCD_send_cmd(CLR_SCREEN);  //clear screen
     8ec:	81 e0       	ldi	r24, 0x01	; 1
     8ee:	0e 94 37 04 	call	0x86e	; 0x86e <LCD_send_cmd>
     8f2:	8f e1       	ldi	r24, 0x1F	; 31
     8f4:	9e e4       	ldi	r25, 0x4E	; 78
     8f6:	01 97       	sbiw	r24, 0x01	; 1
     8f8:	f1 f7       	brne	.-4      	; 0x8f6 <LCD_init+0x5e>
     8fa:	00 c0       	rjmp	.+0      	; 0x8fc <LCD_init+0x64>
     8fc:	00 00       	nop
	_delay_ms(10);
	LCD_send_cmd(CURSOR_ON_DISPLAY_ON); //curson on, display on
     8fe:	8e e0       	ldi	r24, 0x0E	; 14
     900:	0e 94 37 04 	call	0x86e	; 0x86e <LCD_send_cmd>
     904:	8f ec       	ldi	r24, 0xCF	; 207
     906:	97 e0       	ldi	r25, 0x07	; 7
     908:	01 97       	sbiw	r24, 0x01	; 1
     90a:	f1 f7       	brne	.-4      	; 0x908 <LCD_init+0x70>
     90c:	00 c0       	rjmp	.+0      	; 0x90e <LCD_init+0x76>
     90e:	00 00       	nop
	_delay_ms(1);
	LCD_send_cmd(ENTRY_MODE);  //sift curson to right
     910:	86 e0       	ldi	r24, 0x06	; 6
     912:	0e 94 37 04 	call	0x86e	; 0x86e <LCD_send_cmd>
     916:	8f ec       	ldi	r24, 0xCF	; 207
     918:	97 e0       	ldi	r25, 0x07	; 7
     91a:	01 97       	sbiw	r24, 0x01	; 1
     91c:	f1 f7       	brne	.-4      	; 0x91a <LCD_init+0x82>
     91e:	00 c0       	rjmp	.+0      	; 0x920 <LCD_init+0x88>
     920:	00 00       	nop
     922:	08 95       	ret

00000924 <LCD_send_data>:
	#endif
	_delay_ms(1);
}

void LCD_send_data(char data)
{
     924:	cf 93       	push	r28
     926:	c8 2f       	mov	r28, r24
	DIO_write_pin(PORT_2,RS,1);
     928:	41 e0       	ldi	r20, 0x01	; 1
     92a:	60 e0       	ldi	r22, 0x00	; 0
     92c:	82 e4       	ldi	r24, 0x42	; 66
     92e:	0e 94 04 02 	call	0x408	; 0x408 <DIO_write_pin>
	#if defined eight_bits_mode
	DIO_write_port(PORT_1,data);
     932:	6c 2f       	mov	r22, r28
     934:	81 e4       	ldi	r24, 0x41	; 65
     936:	0e 94 e5 02 	call	0x5ca	; 0x5ca <DIO_write_port>
	enable();
     93a:	0e 94 20 04 	call	0x840	; 0x840 <enable>
	enable();
	DIO_write_high_nibble(PORT_1,data);
	enable();
	#endif
	
}
     93e:	cf 91       	pop	r28
     940:	08 95       	ret

00000942 <LCD_send_string>:

void LCD_send_string(char* string)
{
     942:	cf 93       	push	r28
     944:	df 93       	push	r29
     946:	ec 01       	movw	r28, r24
	while((*string!='\0'))
     948:	03 c0       	rjmp	.+6      	; 0x950 <LCD_send_string+0xe>
	{
		LCD_send_data(*string);
     94a:	0e 94 92 04 	call	0x924	; 0x924 <LCD_send_data>
		string++;
     94e:	21 96       	adiw	r28, 0x01	; 1
	
}

void LCD_send_string(char* string)
{
	while((*string!='\0'))
     950:	88 81       	ld	r24, Y
     952:	81 11       	cpse	r24, r1
     954:	fa cf       	rjmp	.-12     	; 0x94a <LCD_send_string+0x8>
	{
		LCD_send_data(*string);
		string++;
	}
}
     956:	df 91       	pop	r29
     958:	cf 91       	pop	r28
     95a:	08 95       	ret

0000095c <LCD_clr_screen>:

void LCD_clr_screen(void)
{
	LCD_send_cmd(CLR_SCREEN);
     95c:	81 e0       	ldi	r24, 0x01	; 1
     95e:	0e 94 37 04 	call	0x86e	; 0x86e <LCD_send_cmd>
     962:	8f e1       	ldi	r24, 0x1F	; 31
     964:	9e e4       	ldi	r25, 0x4E	; 78
     966:	01 97       	sbiw	r24, 0x01	; 1
     968:	f1 f7       	brne	.-4      	; 0x966 <LCD_clr_screen+0xa>
     96a:	00 c0       	rjmp	.+0      	; 0x96c <LCD_clr_screen+0x10>
     96c:	00 00       	nop
     96e:	08 95       	ret

00000970 <LCD_move_cursor>:
}

void LCD_move_cursor(char row,char coloum)
{
	char data=0;
	if (row>2 || row<1 || coloum>16 || coloum<1)
     970:	9f ef       	ldi	r25, 0xFF	; 255
     972:	98 0f       	add	r25, r24
     974:	92 30       	cpi	r25, 0x02	; 2
     976:	70 f4       	brcc	.+28     	; 0x994 <LCD_move_cursor+0x24>
     978:	61 31       	cpi	r22, 0x11	; 17
     97a:	70 f4       	brcc	.+28     	; 0x998 <LCD_move_cursor+0x28>
     97c:	66 23       	and	r22, r22
     97e:	71 f0       	breq	.+28     	; 0x99c <LCD_move_cursor+0x2c>
	{
		data=0x80;
	}
	else if (row==1)
     980:	81 30       	cpi	r24, 0x01	; 1
     982:	19 f4       	brne	.+6      	; 0x98a <LCD_move_cursor+0x1a>
	{
		data=(0x80+coloum-1);
     984:	8f e7       	ldi	r24, 0x7F	; 127
     986:	86 0f       	add	r24, r22
     988:	0c c0       	rjmp	.+24     	; 0x9a2 <LCD_move_cursor+0x32>
	}
	else if (row==2)
     98a:	82 30       	cpi	r24, 0x02	; 2
     98c:	49 f4       	brne	.+18     	; 0x9a0 <LCD_move_cursor+0x30>
	{
		data=(0xC0+coloum-1);
     98e:	8f eb       	ldi	r24, 0xBF	; 191
     990:	86 0f       	add	r24, r22
     992:	07 c0       	rjmp	.+14     	; 0x9a2 <LCD_move_cursor+0x32>
void LCD_move_cursor(char row,char coloum)
{
	char data=0;
	if (row>2 || row<1 || coloum>16 || coloum<1)
	{
		data=0x80;
     994:	80 e8       	ldi	r24, 0x80	; 128
     996:	05 c0       	rjmp	.+10     	; 0x9a2 <LCD_move_cursor+0x32>
     998:	80 e8       	ldi	r24, 0x80	; 128
     99a:	03 c0       	rjmp	.+6      	; 0x9a2 <LCD_move_cursor+0x32>
     99c:	80 e8       	ldi	r24, 0x80	; 128
     99e:	01 c0       	rjmp	.+2      	; 0x9a2 <LCD_move_cursor+0x32>
	_delay_ms(10);
}

void LCD_move_cursor(char row,char coloum)
{
	char data=0;
     9a0:	80 e0       	ldi	r24, 0x00	; 0
	}
	else if (row==2)
	{
		data=(0xC0+coloum-1);
	}
	LCD_send_cmd(data);
     9a2:	0e 94 37 04 	call	0x86e	; 0x86e <LCD_send_cmd>
     9a6:	8f ec       	ldi	r24, 0xCF	; 207
     9a8:	97 e0       	ldi	r25, 0x07	; 7
     9aa:	01 97       	sbiw	r24, 0x01	; 1
     9ac:	f1 f7       	brne	.-4      	; 0x9aa <LCD_move_cursor+0x3a>
     9ae:	00 c0       	rjmp	.+0      	; 0x9b0 <LCD_move_cursor+0x40>
     9b0:	00 00       	nop
     9b2:	08 95       	ret

000009b4 <main>:
#include "LCD.h"
#include "KEYBAD.h"


int main(void)
{
     9b4:	cf 93       	push	r28
     9b6:	df 93       	push	r29
     9b8:	cd b7       	in	r28, 0x3d	; 61
     9ba:	de b7       	in	r29, 0x3e	; 62
     9bc:	68 97       	sbiw	r28, 0x18	; 24
     9be:	0f b6       	in	r0, 0x3f	; 63
     9c0:	f8 94       	cli
     9c2:	de bf       	out	0x3e, r29	; 62
     9c4:	0f be       	out	0x3f, r0	; 63
     9c6:	cd bf       	out	0x3d, r28	; 61
	LCD_init();
     9c8:	0e 94 4c 04 	call	0x898	; 0x898 <LCD_init>
	KEYBAD_init();
     9cc:	0e 94 68 03 	call	0x6d0	; 0x6d0 <KEYBAD_init>
   
    while (1) 
    {
label_1:
		counter_1=counter_2=0;
		operand_1_str[0]=operand_1_str[1]=operand_1_str[2]=operand_1_str[3]=0;
     9d0:	1c 82       	std	Y+4, r1	; 0x04
     9d2:	1b 82       	std	Y+3, r1	; 0x03
     9d4:	1a 82       	std	Y+2, r1	; 0x02
     9d6:	19 82       	std	Y+1, r1	; 0x01
		operand_2_str[0]=operand_2_str[1]=operand_2_str[2]=operand_2_str[3]=0;
     9d8:	19 86       	std	Y+9, r1	; 0x09
     9da:	18 86       	std	Y+8, r1	; 0x08
     9dc:	1f 82       	std	Y+7, r1	; 0x07
     9de:	1e 82       	std	Y+6, r1	; 0x06
		operation='0';
		LCD_clr_screen();
     9e0:	0e 94 ae 04 	call	0x95c	; 0x95c <LCD_clr_screen>
		LCD_send_cmd(CURSOR_ON_DISPLAY_ON);
     9e4:	8e e0       	ldi	r24, 0x0E	; 14
     9e6:	0e 94 37 04 	call	0x86e	; 0x86e <LCD_send_cmd>
	
   
    while (1) 
    {
label_1:
		counter_1=counter_2=0;
     9ea:	b1 2c       	mov	r11, r1
		operation='0';
		LCD_clr_screen();
		LCD_send_cmd(CURSOR_ON_DISPLAY_ON);
		do   //Enter first number
		{
			key=KEYBAD_check_press();
     9ec:	0e 94 b9 03 	call	0x772	; 0x772 <KEYBAD_check_press>
     9f0:	08 2f       	mov	r16, r24
			if ( (('+' == key || '-' == key ) && 0==operand_1_str[0]) || '.'==key || '0'== key || '1'== key || '2'== key || '3'== key || '4'== key || '5'== key || '6'== key || '7'== key || '8'== key || '9'== key)
     9f2:	8b 32       	cpi	r24, 0x2B	; 43
     9f4:	11 f0       	breq	.+4      	; 0x9fa <main+0x46>
     9f6:	8d 32       	cpi	r24, 0x2D	; 45
     9f8:	19 f4       	brne	.+6      	; 0xa00 <main+0x4c>
     9fa:	89 81       	ldd	r24, Y+1	; 0x01
     9fc:	88 23       	and	r24, r24
     9fe:	b1 f0       	breq	.+44     	; 0xa2c <main+0x78>
     a00:	0e 32       	cpi	r16, 0x2E	; 46
     a02:	a1 f0       	breq	.+40     	; 0xa2c <main+0x78>
     a04:	00 33       	cpi	r16, 0x30	; 48
     a06:	91 f0       	breq	.+36     	; 0xa2c <main+0x78>
     a08:	01 33       	cpi	r16, 0x31	; 49
     a0a:	81 f0       	breq	.+32     	; 0xa2c <main+0x78>
     a0c:	02 33       	cpi	r16, 0x32	; 50
     a0e:	71 f0       	breq	.+28     	; 0xa2c <main+0x78>
     a10:	03 33       	cpi	r16, 0x33	; 51
     a12:	61 f0       	breq	.+24     	; 0xa2c <main+0x78>
     a14:	04 33       	cpi	r16, 0x34	; 52
     a16:	51 f0       	breq	.+20     	; 0xa2c <main+0x78>
     a18:	05 33       	cpi	r16, 0x35	; 53
     a1a:	41 f0       	breq	.+16     	; 0xa2c <main+0x78>
     a1c:	06 33       	cpi	r16, 0x36	; 54
     a1e:	31 f0       	breq	.+12     	; 0xa2c <main+0x78>
     a20:	07 33       	cpi	r16, 0x37	; 55
     a22:	21 f0       	breq	.+8      	; 0xa2c <main+0x78>
     a24:	08 33       	cpi	r16, 0x38	; 56
     a26:	11 f0       	breq	.+4      	; 0xa2c <main+0x78>
     a28:	09 33       	cpi	r16, 0x39	; 57
     a2a:	a9 f4       	brne	.+42     	; 0xa56 <main+0xa2>
			{
				operand_1_str[counter_1]=key;
     a2c:	e1 e0       	ldi	r30, 0x01	; 1
     a2e:	f0 e0       	ldi	r31, 0x00	; 0
     a30:	ec 0f       	add	r30, r28
     a32:	fd 1f       	adc	r31, r29
     a34:	eb 0d       	add	r30, r11
     a36:	f1 1d       	adc	r31, r1
     a38:	00 83       	st	Z, r16
				LCD_send_data(operand_1_str[counter_1]);
     a3a:	80 2f       	mov	r24, r16
     a3c:	0e 94 92 04 	call	0x924	; 0x924 <LCD_send_data>
				counter_1++;
     a40:	b3 94       	inc	r11
     a42:	2f e7       	ldi	r18, 0x7F	; 127
     a44:	3a e1       	ldi	r19, 0x1A	; 26
     a46:	46 e0       	ldi	r20, 0x06	; 6
     a48:	21 50       	subi	r18, 0x01	; 1
     a4a:	30 40       	sbci	r19, 0x00	; 0
     a4c:	40 40       	sbci	r20, 0x00	; 0
     a4e:	e1 f7       	brne	.-8      	; 0xa48 <main+0x94>
     a50:	00 c0       	rjmp	.+0      	; 0xa52 <main+0x9e>
     a52:	00 00       	nop
     a54:	20 c0       	rjmp	.+64     	; 0xa96 <main+0xe2>
				_delay_ms(250);
			}
			else if ('+'==key || '-'==key || '*'==key || '/'==key || '^'==key || 'S'==key || '%'==key)
     a56:	0b 32       	cpi	r16, 0x2B	; 43
     a58:	61 f0       	breq	.+24     	; 0xa72 <main+0xbe>
     a5a:	0d 32       	cpi	r16, 0x2D	; 45
     a5c:	51 f0       	breq	.+20     	; 0xa72 <main+0xbe>
     a5e:	0a 32       	cpi	r16, 0x2A	; 42
     a60:	41 f0       	breq	.+16     	; 0xa72 <main+0xbe>
     a62:	0f 32       	cpi	r16, 0x2F	; 47
     a64:	31 f0       	breq	.+12     	; 0xa72 <main+0xbe>
     a66:	0e 35       	cpi	r16, 0x5E	; 94
     a68:	21 f0       	breq	.+8      	; 0xa72 <main+0xbe>
     a6a:	03 35       	cpi	r16, 0x53	; 83
     a6c:	11 f0       	breq	.+4      	; 0xa72 <main+0xbe>
     a6e:	05 32       	cpi	r16, 0x25	; 37
     a70:	79 f4       	brne	.+30     	; 0xa90 <main+0xdc>
			{
				operation=key;
				if ('S'==operation)
     a72:	03 35       	cpi	r16, 0x53	; 83
     a74:	41 f4       	brne	.+16     	; 0xa86 <main+0xd2>
				{
					LCD_clr_screen();
     a76:	0e 94 ae 04 	call	0x95c	; 0x95c <LCD_clr_screen>
					LCD_send_string("Sqrt(");
     a7a:	88 e7       	ldi	r24, 0x78	; 120
     a7c:	90 e0       	ldi	r25, 0x00	; 0
     a7e:	0e 94 a1 04 	call	0x942	; 0x942 <LCD_send_string>
				counter_1++;
				_delay_ms(250);
			}
			else if ('+'==key || '-'==key || '*'==key || '/'==key || '^'==key || 'S'==key || '%'==key)
			{
				operation=key;
     a82:	10 2f       	mov	r17, r16
     a84:	0c c0       	rjmp	.+24     	; 0xa9e <main+0xea>
					LCD_clr_screen();
					LCD_send_string("Sqrt(");
				}
				else 
				{
					LCD_send_data(operation);
     a86:	80 2f       	mov	r24, r16
     a88:	0e 94 92 04 	call	0x924	; 0x924 <LCD_send_data>
				counter_1++;
				_delay_ms(250);
			}
			else if ('+'==key || '-'==key || '*'==key || '/'==key || '^'==key || 'S'==key || '%'==key)
			{
				operation=key;
     a8c:	10 2f       	mov	r17, r16
     a8e:	07 c0       	rjmp	.+14     	; 0xa9e <main+0xea>
				{
					LCD_send_data(operation);
				}
				break;	
			}
			else if('A'== key)
     a90:	01 34       	cpi	r16, 0x41	; 65
     a92:	09 f4       	brne	.+2      	; 0xa96 <main+0xe2>
     a94:	9d cf       	rjmp	.-198    	; 0x9d0 <main+0x1c>
			{
				goto label_1;
			}
		} while (4!=counter_1);
     a96:	54 e0       	ldi	r21, 0x04	; 4
     a98:	b5 12       	cpse	r11, r21
     a9a:	a8 cf       	rjmp	.-176    	; 0x9ec <main+0x38>
    {
label_1:
		counter_1=counter_2=0;
		operand_1_str[0]=operand_1_str[1]=operand_1_str[2]=operand_1_str[3]=0;
		operand_2_str[0]=operand_2_str[1]=operand_2_str[2]=operand_2_str[3]=0;
		operation='0';
     a9c:	10 e3       	ldi	r17, 0x30	; 48
     a9e:	8f ef       	ldi	r24, 0xFF	; 255
     aa0:	91 ee       	ldi	r25, 0xE1	; 225
     aa2:	a4 e0       	ldi	r26, 0x04	; 4
     aa4:	81 50       	subi	r24, 0x01	; 1
     aa6:	90 40       	sbci	r25, 0x00	; 0
     aa8:	a0 40       	sbci	r26, 0x00	; 0
     aaa:	e1 f7       	brne	.-8      	; 0xaa4 <main+0xf0>
     aac:	00 c0       	rjmp	.+0      	; 0xaae <main+0xfa>
     aae:	00 00       	nop
			{
				goto label_1;
			}
		} while (4!=counter_1);
		_delay_ms(200);
		operand_1_str[counter_1] = '\0';
     ab0:	e1 e0       	ldi	r30, 0x01	; 1
     ab2:	f0 e0       	ldi	r31, 0x00	; 0
     ab4:	ec 0f       	add	r30, r28
     ab6:	fd 1f       	adc	r31, r29
     ab8:	eb 0d       	add	r30, r11
     aba:	f1 1d       	adc	r31, r1
     abc:	10 82       	st	Z, r1
		operand_1=atoi(operand_1_str);
     abe:	ce 01       	movw	r24, r28
     ac0:	01 96       	adiw	r24, 0x01	; 1
     ac2:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <atoi>
     ac6:	9c 01       	movw	r18, r24
     ac8:	99 0f       	add	r25, r25
     aca:	44 0b       	sbc	r20, r20
     acc:	55 0b       	sbc	r21, r21
     ace:	2d 8b       	std	Y+21, r18	; 0x15
     ad0:	3e 8b       	std	Y+22, r19	; 0x16
     ad2:	4f 8b       	std	Y+23, r20	; 0x17
     ad4:	58 8f       	std	Y+24, r21	; 0x18
		
		if ('0'==operation)
     ad6:	10 33       	cpi	r17, 0x30	; 48
     ad8:	59 f5       	brne	.+86     	; 0xb30 <main+0x17c>
		{
			do    //Enter operation
			{
				key=KEYBAD_check_press();
     ada:	0e 94 b9 03 	call	0x772	; 0x772 <KEYBAD_check_press>
     ade:	08 2f       	mov	r16, r24
				if ('+'==key || '-'==key || '*'==key || '/'==key || '^'==key || 'S'==key || '%'==key)
     ae0:	8b 32       	cpi	r24, 0x2B	; 43
     ae2:	61 f0       	breq	.+24     	; 0xafc <main+0x148>
     ae4:	8d 32       	cpi	r24, 0x2D	; 45
     ae6:	51 f0       	breq	.+20     	; 0xafc <main+0x148>
     ae8:	8a 32       	cpi	r24, 0x2A	; 42
     aea:	41 f0       	breq	.+16     	; 0xafc <main+0x148>
     aec:	8f 32       	cpi	r24, 0x2F	; 47
     aee:	31 f0       	breq	.+12     	; 0xafc <main+0x148>
     af0:	8e 35       	cpi	r24, 0x5E	; 94
     af2:	21 f0       	breq	.+8      	; 0xafc <main+0x148>
     af4:	83 35       	cpi	r24, 0x53	; 83
     af6:	11 f0       	breq	.+4      	; 0xafc <main+0x148>
     af8:	85 32       	cpi	r24, 0x25	; 37
     afa:	69 f4       	brne	.+26     	; 0xb16 <main+0x162>
				{
					operation=key;
					if ('S'==operation)
     afc:	03 35       	cpi	r16, 0x53	; 83
     afe:	39 f4       	brne	.+14     	; 0xb0e <main+0x15a>
					{
						LCD_clr_screen();
     b00:	0e 94 ae 04 	call	0x95c	; 0x95c <LCD_clr_screen>
						LCD_send_string("Sqrt(");
     b04:	88 e7       	ldi	r24, 0x78	; 120
     b06:	90 e0       	ldi	r25, 0x00	; 0
     b08:	0e 94 a1 04 	call	0x942	; 0x942 <LCD_send_string>
     b0c:	07 c0       	rjmp	.+14     	; 0xb1c <main+0x168>
					}
					else
					{
						LCD_send_data(operation);
     b0e:	80 2f       	mov	r24, r16
     b10:	0e 94 92 04 	call	0x924	; 0x924 <LCD_send_data>
     b14:	03 c0       	rjmp	.+6      	; 0xb1c <main+0x168>
					}
					break;
				}
				else if('A'== key)
     b16:	81 34       	cpi	r24, 0x41	; 65
     b18:	01 f7       	brne	.-64     	; 0xada <main+0x126>
     b1a:	5a cf       	rjmp	.-332    	; 0x9d0 <main+0x1c>
     b1c:	3f e7       	ldi	r19, 0x7F	; 127
     b1e:	4a e1       	ldi	r20, 0x1A	; 26
     b20:	56 e0       	ldi	r21, 0x06	; 6
     b22:	31 50       	subi	r19, 0x01	; 1
     b24:	40 40       	sbci	r20, 0x00	; 0
     b26:	50 40       	sbci	r21, 0x00	; 0
     b28:	e1 f7       	brne	.-8      	; 0xb22 <main+0x16e>
     b2a:	00 c0       	rjmp	.+0      	; 0xb2c <main+0x178>
     b2c:	00 00       	nop
			do    //Enter operation
			{
				key=KEYBAD_check_press();
				if ('+'==key || '-'==key || '*'==key || '/'==key || '^'==key || 'S'==key || '%'==key)
				{
					operation=key;
     b2e:	10 2f       	mov	r17, r16
					goto label_1;
				}
			} while (1);
			_delay_ms(250);
		}
label_2:if ((('*'==key || '/'==key || '^'==key || '%'==key) && 0==operand_1) || ('S'==key && 0!=operand_1))
     b30:	0a 32       	cpi	r16, 0x2A	; 42
     b32:	31 f0       	breq	.+12     	; 0xb40 <main+0x18c>
     b34:	0f 32       	cpi	r16, 0x2F	; 47
     b36:	21 f0       	breq	.+8      	; 0xb40 <main+0x18c>
     b38:	0e 35       	cpi	r16, 0x5E	; 94
     b3a:	11 f0       	breq	.+4      	; 0xb40 <main+0x18c>
     b3c:	05 32       	cpi	r16, 0x25	; 37
     b3e:	41 f4       	brne	.+16     	; 0xb50 <main+0x19c>
     b40:	8d 89       	ldd	r24, Y+21	; 0x15
     b42:	9e 89       	ldd	r25, Y+22	; 0x16
     b44:	af 89       	ldd	r26, Y+23	; 0x17
     b46:	b8 8d       	ldd	r27, Y+24	; 0x18
     b48:	89 2b       	or	r24, r25
     b4a:	8a 2b       	or	r24, r26
     b4c:	8b 2b       	or	r24, r27
     b4e:	51 f0       	breq	.+20     	; 0xb64 <main+0x1b0>
     b50:	03 35       	cpi	r16, 0x53	; 83
     b52:	c1 f4       	brne	.+48     	; 0xb84 <main+0x1d0>
     b54:	2d 89       	ldd	r18, Y+21	; 0x15
     b56:	3e 89       	ldd	r19, Y+22	; 0x16
     b58:	4f 89       	ldd	r20, Y+23	; 0x17
     b5a:	58 8d       	ldd	r21, Y+24	; 0x18
     b5c:	23 2b       	or	r18, r19
     b5e:	24 2b       	or	r18, r20
     b60:	25 2b       	or	r18, r21
     b62:	91 f0       	breq	.+36     	; 0xb88 <main+0x1d4>
		{
			LCD_clr_screen();
     b64:	0e 94 ae 04 	call	0x95c	; 0x95c <LCD_clr_screen>
			LCD_send_string("Erorr");
     b68:	8e e7       	ldi	r24, 0x7E	; 126
     b6a:	90 e0       	ldi	r25, 0x00	; 0
     b6c:	0e 94 a1 04 	call	0x942	; 0x942 <LCD_send_string>
     b70:	3f ef       	ldi	r19, 0xFF	; 255
     b72:	49 e6       	ldi	r20, 0x69	; 105
     b74:	58 e1       	ldi	r21, 0x18	; 24
     b76:	31 50       	subi	r19, 0x01	; 1
     b78:	40 40       	sbci	r20, 0x00	; 0
     b7a:	50 40       	sbci	r21, 0x00	; 0
     b7c:	e1 f7       	brne	.-8      	; 0xb76 <main+0x1c2>
     b7e:	00 c0       	rjmp	.+0      	; 0xb80 <main+0x1cc>
     b80:	00 00       	nop
     b82:	26 cf       	rjmp	.-436    	; 0x9d0 <main+0x1c>
     b84:	00 e0       	ldi	r16, 0x00	; 0
     b86:	01 c0       	rjmp	.+2      	; 0xb8a <main+0x1d6>
     b88:	00 e0       	ldi	r16, 0x00	; 0
			goto label_1;
		}
		
		do   //Enter second number
		{
			key=KEYBAD_check_press();
     b8a:	0e 94 b9 03 	call	0x772	; 0x772 <KEYBAD_check_press>
			if ((('+' == key || '-' == key ) && 0==operand_2_str[0]) || '.'==key || '0'== key ||'1'== key || '2'== key || '3'== key || '4'== key || '5'== key || '6'== key || '7'== key || '8'== key || '9'== key)
     b8e:	8b 32       	cpi	r24, 0x2B	; 43
     b90:	11 f0       	breq	.+4      	; 0xb96 <main+0x1e2>
     b92:	8d 32       	cpi	r24, 0x2D	; 45
     b94:	19 f4       	brne	.+6      	; 0xb9c <main+0x1e8>
     b96:	9e 81       	ldd	r25, Y+6	; 0x06
     b98:	99 23       	and	r25, r25
     b9a:	b1 f0       	breq	.+44     	; 0xbc8 <main+0x214>
     b9c:	8e 32       	cpi	r24, 0x2E	; 46
     b9e:	a1 f0       	breq	.+40     	; 0xbc8 <main+0x214>
     ba0:	80 33       	cpi	r24, 0x30	; 48
     ba2:	91 f0       	breq	.+36     	; 0xbc8 <main+0x214>
     ba4:	81 33       	cpi	r24, 0x31	; 49
     ba6:	81 f0       	breq	.+32     	; 0xbc8 <main+0x214>
     ba8:	82 33       	cpi	r24, 0x32	; 50
     baa:	71 f0       	breq	.+28     	; 0xbc8 <main+0x214>
     bac:	83 33       	cpi	r24, 0x33	; 51
     bae:	61 f0       	breq	.+24     	; 0xbc8 <main+0x214>
     bb0:	84 33       	cpi	r24, 0x34	; 52
     bb2:	51 f0       	breq	.+20     	; 0xbc8 <main+0x214>
     bb4:	85 33       	cpi	r24, 0x35	; 53
     bb6:	41 f0       	breq	.+16     	; 0xbc8 <main+0x214>
     bb8:	86 33       	cpi	r24, 0x36	; 54
     bba:	31 f0       	breq	.+12     	; 0xbc8 <main+0x214>
     bbc:	87 33       	cpi	r24, 0x37	; 55
     bbe:	21 f0       	breq	.+8      	; 0xbc8 <main+0x214>
     bc0:	88 33       	cpi	r24, 0x38	; 56
     bc2:	11 f0       	breq	.+4      	; 0xbc8 <main+0x214>
     bc4:	89 33       	cpi	r24, 0x39	; 57
     bc6:	a1 f4       	brne	.+40     	; 0xbf0 <main+0x23c>
			{
				operand_2_str[counter_2]=key;
     bc8:	e6 e0       	ldi	r30, 0x06	; 6
     bca:	f0 e0       	ldi	r31, 0x00	; 0
     bcc:	ec 0f       	add	r30, r28
     bce:	fd 1f       	adc	r31, r29
     bd0:	e0 0f       	add	r30, r16
     bd2:	f1 1d       	adc	r31, r1
     bd4:	80 83       	st	Z, r24
				LCD_send_data(operand_2_str[counter_2]);
     bd6:	0e 94 92 04 	call	0x924	; 0x924 <LCD_send_data>
				counter_2++;
     bda:	0f 5f       	subi	r16, 0xFF	; 255
     bdc:	8f e7       	ldi	r24, 0x7F	; 127
     bde:	9a e1       	ldi	r25, 0x1A	; 26
     be0:	a6 e0       	ldi	r26, 0x06	; 6
     be2:	81 50       	subi	r24, 0x01	; 1
     be4:	90 40       	sbci	r25, 0x00	; 0
     be6:	a0 40       	sbci	r26, 0x00	; 0
     be8:	e1 f7       	brne	.-8      	; 0xbe2 <main+0x22e>
     bea:	00 c0       	rjmp	.+0      	; 0xbec <main+0x238>
     bec:	00 00       	nop
     bee:	05 c0       	rjmp	.+10     	; 0xbfa <main+0x246>
				_delay_ms(250);
			}
			else if('A'== key)
     bf0:	81 34       	cpi	r24, 0x41	; 65
     bf2:	09 f4       	brne	.+2      	; 0xbf6 <main+0x242>
     bf4:	ed ce       	rjmp	.-550    	; 0x9d0 <main+0x1c>
			{
				goto label_1;
			}
			else if('='== key)
     bf6:	8d 33       	cpi	r24, 0x3D	; 61
     bf8:	11 f0       	breq	.+4      	; 0xbfe <main+0x24a>
			{
				break;
			}
		} while (4!=counter_2);
     bfa:	04 30       	cpi	r16, 0x04	; 4
     bfc:	31 f6       	brne	.-116    	; 0xb8a <main+0x1d6>
		operand_2_str[counter_2] = '\0';
     bfe:	e6 e0       	ldi	r30, 0x06	; 6
     c00:	f0 e0       	ldi	r31, 0x00	; 0
     c02:	ec 0f       	add	r30, r28
     c04:	fd 1f       	adc	r31, r29
     c06:	e0 0f       	add	r30, r16
     c08:	f1 1d       	adc	r31, r1
     c0a:	10 82       	st	Z, r1
		operand_2=atoi(operand_2_str);
     c0c:	ce 01       	movw	r24, r28
     c0e:	06 96       	adiw	r24, 0x06	; 6
     c10:	0e 94 61 0b 	call	0x16c2	; 0x16c2 <atoi>
     c14:	4c 01       	movw	r8, r24
     c16:	2c 01       	movw	r4, r24
     c18:	99 0f       	add	r25, r25
     c1a:	66 08       	sbc	r6, r6
     c1c:	77 08       	sbc	r7, r7
		
		do    // Calculate result
		{
			key=KEYBAD_check_press();
     c1e:	0e 94 b9 03 	call	0x772	; 0x772 <KEYBAD_check_press>
     c22:	08 2f       	mov	r16, r24
			if ('='==key)
     c24:	8d 33       	cpi	r24, 0x3D	; 61
     c26:	09 f0       	breq	.+2      	; 0xc2a <main+0x276>
     c28:	b1 c0       	rjmp	.+354    	; 0xd8c <main+0x3d8>
			{
				if ('S'==operation)
     c2a:	13 35       	cpi	r17, 0x53	; 83
     c2c:	19 f4       	brne	.+6      	; 0xc34 <main+0x280>
				{
					LCD_send_data(')');
     c2e:	89 e2       	ldi	r24, 0x29	; 41
     c30:	0e 94 92 04 	call	0x924	; 0x924 <LCD_send_data>
				}
				LCD_send_data('=');
     c34:	8d e3       	ldi	r24, 0x3D	; 61
     c36:	0e 94 92 04 	call	0x924	; 0x924 <LCD_send_data>
				switch(operation)
     c3a:	81 2f       	mov	r24, r17
     c3c:	90 e0       	ldi	r25, 0x00	; 0
     c3e:	fc 01       	movw	r30, r24
     c40:	b5 97       	sbiw	r30, 0x25	; 37
     c42:	ea 33       	cpi	r30, 0x3A	; 58
     c44:	f1 05       	cpc	r31, r1
     c46:	08 f0       	brcs	.+2      	; 0xc4a <main+0x296>
     c48:	89 c0       	rjmp	.+274    	; 0xd5c <main+0x3a8>
     c4a:	ee 5f       	subi	r30, 0xFE	; 254
     c4c:	fe 4f       	sbci	r31, 0xFE	; 254
     c4e:	0c 94 1f 0b 	jmp	0x163e	; 0x163e <__tablejump2__>
				{
					case '+':
					{
						result=operand_1 + operand_2;
     c52:	cd 88       	ldd	r12, Y+21	; 0x15
     c54:	de 88       	ldd	r13, Y+22	; 0x16
     c56:	ef 88       	ldd	r14, Y+23	; 0x17
     c58:	f8 8c       	ldd	r15, Y+24	; 0x18
     c5a:	c4 0c       	add	r12, r4
     c5c:	d5 1c       	adc	r13, r5
     c5e:	e6 1c       	adc	r14, r6
     c60:	f7 1c       	adc	r15, r7
						break;
     c62:	7c c0       	rjmp	.+248    	; 0xd5c <main+0x3a8>
					}
					case '-':
					{
						result=operand_1 - operand_2;
     c64:	cd 88       	ldd	r12, Y+21	; 0x15
     c66:	de 88       	ldd	r13, Y+22	; 0x16
     c68:	ef 88       	ldd	r14, Y+23	; 0x17
     c6a:	f8 8c       	ldd	r15, Y+24	; 0x18
     c6c:	c4 18       	sub	r12, r4
     c6e:	d5 08       	sbc	r13, r5
     c70:	e6 08       	sbc	r14, r6
     c72:	f7 08       	sbc	r15, r7
						break;
     c74:	73 c0       	rjmp	.+230    	; 0xd5c <main+0x3a8>
					}
					case '*':
					{
						result=operand_1 * operand_2;
     c76:	2d 89       	ldd	r18, Y+21	; 0x15
     c78:	3e 89       	ldd	r19, Y+22	; 0x16
     c7a:	4f 89       	ldd	r20, Y+23	; 0x17
     c7c:	58 8d       	ldd	r21, Y+24	; 0x18
     c7e:	c3 01       	movw	r24, r6
     c80:	b2 01       	movw	r22, r4
     c82:	0e 94 f0 0a 	call	0x15e0	; 0x15e0 <__mulsi3>
     c86:	6b 01       	movw	r12, r22
     c88:	7c 01       	movw	r14, r24
						break;
     c8a:	68 c0       	rjmp	.+208    	; 0xd5c <main+0x3a8>
					}
					case '/':
					{
						if (operand_2!=0)
     c8c:	41 14       	cp	r4, r1
     c8e:	51 04       	cpc	r5, r1
     c90:	61 04       	cpc	r6, r1
     c92:	71 04       	cpc	r7, r1
     c94:	59 f0       	breq	.+22     	; 0xcac <main+0x2f8>
						{
							result=operand_1 / operand_2;
     c96:	6d 89       	ldd	r22, Y+21	; 0x15
     c98:	7e 89       	ldd	r23, Y+22	; 0x16
     c9a:	8f 89       	ldd	r24, Y+23	; 0x17
     c9c:	98 8d       	ldd	r25, Y+24	; 0x18
     c9e:	a3 01       	movw	r20, r6
     ca0:	92 01       	movw	r18, r4
     ca2:	0e 94 00 0b 	call	0x1600	; 0x1600 <__divmodsi4>
     ca6:	69 01       	movw	r12, r18
     ca8:	7a 01       	movw	r14, r20
							break;
     caa:	58 c0       	rjmp	.+176    	; 0xd5c <main+0x3a8>
						}
						else
						{
							LCD_clr_screen();
     cac:	0e 94 ae 04 	call	0x95c	; 0x95c <LCD_clr_screen>
							LCD_send_string("Error: Division ");
     cb0:	84 e8       	ldi	r24, 0x84	; 132
     cb2:	90 e0       	ldi	r25, 0x00	; 0
     cb4:	0e 94 a1 04 	call	0x942	; 0x942 <LCD_send_string>
							LCD_move_cursor(2,4);
     cb8:	64 e0       	ldi	r22, 0x04	; 4
     cba:	82 e0       	ldi	r24, 0x02	; 2
     cbc:	0e 94 b8 04 	call	0x970	; 0x970 <LCD_move_cursor>
							LCD_send_string("by zero");
     cc0:	85 e9       	ldi	r24, 0x95	; 149
     cc2:	90 e0       	ldi	r25, 0x00	; 0
     cc4:	0e 94 a1 04 	call	0x942	; 0x942 <LCD_send_string>
							continue;
     cc8:	61 c0       	rjmp	.+194    	; 0xd8c <main+0x3d8>
						}
					}
					case '^':
					{
						result=(pow(operand_1,operand_2)+1);
     cca:	b4 01       	movw	r22, r8
     ccc:	09 2c       	mov	r0, r9
     cce:	00 0c       	add	r0, r0
     cd0:	88 0b       	sbc	r24, r24
     cd2:	99 0b       	sbc	r25, r25
     cd4:	0e 94 b3 07 	call	0xf66	; 0xf66 <__floatsisf>
     cd8:	6b 01       	movw	r12, r22
     cda:	7c 01       	movw	r14, r24
     cdc:	6d 89       	ldd	r22, Y+21	; 0x15
     cde:	7e 89       	ldd	r23, Y+22	; 0x16
     ce0:	8f 89       	ldd	r24, Y+23	; 0x17
     ce2:	98 8d       	ldd	r25, Y+24	; 0x18
     ce4:	0e 94 b3 07 	call	0xf66	; 0xf66 <__floatsisf>
     ce8:	a7 01       	movw	r20, r14
     cea:	96 01       	movw	r18, r12
     cec:	0e 94 3f 08 	call	0x107e	; 0x107e <pow>
     cf0:	20 e0       	ldi	r18, 0x00	; 0
     cf2:	30 e0       	ldi	r19, 0x00	; 0
     cf4:	40 e8       	ldi	r20, 0x80	; 128
     cf6:	5f e3       	ldi	r21, 0x3F	; 63
     cf8:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__addsf3>
     cfc:	0e 94 7b 07 	call	0xef6	; 0xef6 <__fixsfsi>
     d00:	6b 01       	movw	r12, r22
     d02:	7c 01       	movw	r14, r24
						break;
     d04:	2b c0       	rjmp	.+86     	; 0xd5c <main+0x3a8>
					}
					case 'S':
					{
						if (operand_2>=0)
     d06:	77 20       	and	r7, r7
     d08:	84 f0       	brlt	.+32     	; 0xd2a <main+0x376>
						{
							result=sqrt(operand_2);
     d0a:	64 01       	movw	r12, r8
     d0c:	09 2c       	mov	r0, r9
     d0e:	00 0c       	add	r0, r0
     d10:	ee 08       	sbc	r14, r14
     d12:	ff 08       	sbc	r15, r15
     d14:	c7 01       	movw	r24, r14
     d16:	b6 01       	movw	r22, r12
     d18:	0e 94 b3 07 	call	0xf66	; 0xf66 <__floatsisf>
     d1c:	0e 94 95 08 	call	0x112a	; 0x112a <sqrt>
     d20:	0e 94 7b 07 	call	0xef6	; 0xef6 <__fixsfsi>
     d24:	6b 01       	movw	r12, r22
     d26:	7c 01       	movw	r14, r24
							LCD_send_string("Error: Negative");
							LCD_move_cursor(2,5);
							LCD_send_string("sqrt");
							continue;
						}
						break;
     d28:	19 c0       	rjmp	.+50     	; 0xd5c <main+0x3a8>
						{
							result=sqrt(operand_2);
						}
						else
						{
							LCD_clr_screen();
     d2a:	0e 94 ae 04 	call	0x95c	; 0x95c <LCD_clr_screen>
							LCD_send_string("Error: Negative");
     d2e:	8d e9       	ldi	r24, 0x9D	; 157
     d30:	90 e0       	ldi	r25, 0x00	; 0
     d32:	0e 94 a1 04 	call	0x942	; 0x942 <LCD_send_string>
							LCD_move_cursor(2,5);
     d36:	65 e0       	ldi	r22, 0x05	; 5
     d38:	82 e0       	ldi	r24, 0x02	; 2
     d3a:	0e 94 b8 04 	call	0x970	; 0x970 <LCD_move_cursor>
							LCD_send_string("sqrt");
     d3e:	8d ea       	ldi	r24, 0xAD	; 173
     d40:	90 e0       	ldi	r25, 0x00	; 0
     d42:	0e 94 a1 04 	call	0x942	; 0x942 <LCD_send_string>
							continue;
     d46:	22 c0       	rjmp	.+68     	; 0xd8c <main+0x3d8>
						}
						break;
					}
					case '%':
					{
						result=operand_1 % operand_2;
     d48:	6d 89       	ldd	r22, Y+21	; 0x15
     d4a:	7e 89       	ldd	r23, Y+22	; 0x16
     d4c:	8f 89       	ldd	r24, Y+23	; 0x17
     d4e:	98 8d       	ldd	r25, Y+24	; 0x18
     d50:	a3 01       	movw	r20, r6
     d52:	92 01       	movw	r18, r4
     d54:	0e 94 00 0b 	call	0x1600	; 0x1600 <__divmodsi4>
     d58:	6b 01       	movw	r12, r22
     d5a:	7c 01       	movw	r14, r24
					}
				}
				
				 //display result can handle negative and positive number
				char result_str[10]; 
				sprintf(result_str, "%ld", result);
     d5c:	ff 92       	push	r15
     d5e:	ef 92       	push	r14
     d60:	df 92       	push	r13
     d62:	cf 92       	push	r12
     d64:	82 eb       	ldi	r24, 0xB2	; 178
     d66:	90 e0       	ldi	r25, 0x00	; 0
     d68:	9f 93       	push	r25
     d6a:	8f 93       	push	r24
     d6c:	5e 01       	movw	r10, r28
     d6e:	bb e0       	ldi	r27, 0x0B	; 11
     d70:	ab 0e       	add	r10, r27
     d72:	b1 1c       	adc	r11, r1
     d74:	bf 92       	push	r11
     d76:	af 92       	push	r10
     d78:	0e 94 87 0b 	call	0x170e	; 0x170e <sprintf>
				//LCD_move_cursor(2,8);
				LCD_send_string(result_str);
     d7c:	c5 01       	movw	r24, r10
     d7e:	0e 94 a1 04 	call	0x942	; 0x942 <LCD_send_string>
     d82:	0f b6       	in	r0, 0x3f	; 63
     d84:	f8 94       	cli
     d86:	de bf       	out	0x3e, r29	; 62
     d88:	0f be       	out	0x3f, r0	; 63
     d8a:	cd bf       	out	0x3d, r28	; 61
					LCD_send_data((result%100)/10+48);
					LCD_send_data(result%10+48);
				}
				*/
			}
		} while ('='!=key);
     d8c:	0d 33       	cpi	r16, 0x3D	; 61
     d8e:	09 f0       	breq	.+2      	; 0xd92 <main+0x3de>
     d90:	46 cf       	rjmp	.-372    	; 0xc1e <main+0x26a>
		LCD_send_cmd(CURSOR_Off_DISPLAY_ON);
     d92:	8c e0       	ldi	r24, 0x0C	; 12
     d94:	0e 94 37 04 	call	0x86e	; 0x86e <LCD_send_cmd>
     d98:	3f e7       	ldi	r19, 0x7F	; 127
     d9a:	4a e1       	ldi	r20, 0x1A	; 26
     d9c:	56 e0       	ldi	r21, 0x06	; 6
     d9e:	31 50       	subi	r19, 0x01	; 1
     da0:	40 40       	sbci	r20, 0x00	; 0
     da2:	50 40       	sbci	r21, 0x00	; 0
     da4:	e1 f7       	brne	.-8      	; 0xd9e <main+0x3ea>
     da6:	00 c0       	rjmp	.+0      	; 0xda8 <main+0x3f4>
     da8:	00 00       	nop
		_delay_ms(250);
		
		do    // Continue with result
		{
			key=KEYBAD_check_press();
     daa:	0e 94 b9 03 	call	0x772	; 0x772 <KEYBAD_check_press>
     dae:	18 2f       	mov	r17, r24
			if ('+'==key || '-'==key || '*'==key || '/'==key || '^'==key || 'S'==key || '%'==key)
     db0:	8b 32       	cpi	r24, 0x2B	; 43
     db2:	61 f0       	breq	.+24     	; 0xdcc <main+0x418>
     db4:	8d 32       	cpi	r24, 0x2D	; 45
     db6:	51 f0       	breq	.+20     	; 0xdcc <main+0x418>
     db8:	8a 32       	cpi	r24, 0x2A	; 42
     dba:	41 f0       	breq	.+16     	; 0xdcc <main+0x418>
     dbc:	8f 32       	cpi	r24, 0x2F	; 47
     dbe:	31 f0       	breq	.+12     	; 0xdcc <main+0x418>
     dc0:	8e 35       	cpi	r24, 0x5E	; 94
     dc2:	21 f0       	breq	.+8      	; 0xdcc <main+0x418>
     dc4:	83 35       	cpi	r24, 0x53	; 83
     dc6:	11 f0       	breq	.+4      	; 0xdcc <main+0x418>
     dc8:	85 32       	cpi	r24, 0x25	; 37
     dca:	19 f5       	brne	.+70     	; 0xe12 <main+0x45e>
			{
				LCD_clr_screen();
     dcc:	0e 94 ae 04 	call	0x95c	; 0x95c <LCD_clr_screen>
				LCD_send_string("Ans");
     dd0:	86 eb       	ldi	r24, 0xB6	; 182
     dd2:	90 e0       	ldi	r25, 0x00	; 0
     dd4:	0e 94 a1 04 	call	0x942	; 0x942 <LCD_send_string>
				operation = key;
				operand_1 = result;
				counter_2 = 0;
				operand_2_str[0] = 0;
     dd8:	1e 82       	std	Y+6, r1	; 0x06
				operand_2_str[1] = 0;
     dda:	1f 82       	std	Y+7, r1	; 0x07
				operand_2_str[2] = 0;
     ddc:	18 86       	std	Y+8, r1	; 0x08
				operand_2_str[3] = 0;
     dde:	19 86       	std	Y+9, r1	; 0x09
				if ('S' == key)
     de0:	13 35       	cpi	r17, 0x53	; 83
     de2:	29 f4       	brne	.+10     	; 0xdee <main+0x43a>
				{
					LCD_send_string("Sqrt(");
     de4:	88 e7       	ldi	r24, 0x78	; 120
     de6:	90 e0       	ldi	r25, 0x00	; 0
     de8:	0e 94 a1 04 	call	0x942	; 0x942 <LCD_send_string>
     dec:	03 c0       	rjmp	.+6      	; 0xdf4 <main+0x440>
				}
				else
				{
					LCD_send_data(operation);
     dee:	81 2f       	mov	r24, r17
     df0:	0e 94 92 04 	call	0x924	; 0x924 <LCD_send_data>
     df4:	8f e7       	ldi	r24, 0x7F	; 127
     df6:	9a e1       	ldi	r25, 0x1A	; 26
     df8:	a6 e0       	ldi	r26, 0x06	; 6
     dfa:	81 50       	subi	r24, 0x01	; 1
     dfc:	90 40       	sbci	r25, 0x00	; 0
     dfe:	a0 40       	sbci	r26, 0x00	; 0
     e00:	e1 f7       	brne	.-8      	; 0xdfa <main+0x446>
     e02:	00 c0       	rjmp	.+0      	; 0xe04 <main+0x450>
     e04:	00 00       	nop
		LCD_send_cmd(CURSOR_Off_DISPLAY_ON);
		_delay_ms(250);
		
		do    // Continue with result
		{
			key=KEYBAD_check_press();
     e06:	01 2f       	mov	r16, r17
			if ('+'==key || '-'==key || '*'==key || '/'==key || '^'==key || 'S'==key || '%'==key)
			{
				LCD_clr_screen();
				LCD_send_string("Ans");
				operation = key;
				operand_1 = result;
     e08:	cd 8a       	std	Y+21, r12	; 0x15
     e0a:	de 8a       	std	Y+22, r13	; 0x16
     e0c:	ef 8a       	std	Y+23, r14	; 0x17
     e0e:	f8 8e       	std	Y+24, r15	; 0x18
     e10:	8f ce       	rjmp	.-738    	; 0xb30 <main+0x17c>
					LCD_send_data(operation);
				}
				_delay_ms(250);
				goto label_2;
			}
		} while (NOT_pressed==key || '='==key);		
     e12:	8f 3f       	cpi	r24, 0xFF	; 255
     e14:	51 f2       	breq	.-108    	; 0xdaa <main+0x3f6>
     e16:	8d 33       	cpi	r24, 0x3D	; 61
     e18:	41 f2       	breq	.-112    	; 0xdaa <main+0x3f6>
     e1a:	da cd       	rjmp	.-1100   	; 0x9d0 <main+0x1c>

00000e1c <__subsf3>:
     e1c:	50 58       	subi	r21, 0x80	; 128

00000e1e <__addsf3>:
     e1e:	bb 27       	eor	r27, r27
     e20:	aa 27       	eor	r26, r26
     e22:	0e 94 26 07 	call	0xe4c	; 0xe4c <__addsf3x>
     e26:	0c 94 05 08 	jmp	0x100a	; 0x100a <__fp_round>
     e2a:	0e 94 f7 07 	call	0xfee	; 0xfee <__fp_pscA>
     e2e:	38 f0       	brcs	.+14     	; 0xe3e <__addsf3+0x20>
     e30:	0e 94 fe 07 	call	0xffc	; 0xffc <__fp_pscB>
     e34:	20 f0       	brcs	.+8      	; 0xe3e <__addsf3+0x20>
     e36:	39 f4       	brne	.+14     	; 0xe46 <__addsf3+0x28>
     e38:	9f 3f       	cpi	r25, 0xFF	; 255
     e3a:	19 f4       	brne	.+6      	; 0xe42 <__addsf3+0x24>
     e3c:	26 f4       	brtc	.+8      	; 0xe46 <__addsf3+0x28>
     e3e:	0c 94 f4 07 	jmp	0xfe8	; 0xfe8 <__fp_nan>
     e42:	0e f4       	brtc	.+2      	; 0xe46 <__addsf3+0x28>
     e44:	e0 95       	com	r30
     e46:	e7 fb       	bst	r30, 7
     e48:	0c 94 ee 07 	jmp	0xfdc	; 0xfdc <__fp_inf>

00000e4c <__addsf3x>:
     e4c:	e9 2f       	mov	r30, r25
     e4e:	0e 94 16 08 	call	0x102c	; 0x102c <__fp_split3>
     e52:	58 f3       	brcs	.-42     	; 0xe2a <__addsf3+0xc>
     e54:	ba 17       	cp	r27, r26
     e56:	62 07       	cpc	r22, r18
     e58:	73 07       	cpc	r23, r19
     e5a:	84 07       	cpc	r24, r20
     e5c:	95 07       	cpc	r25, r21
     e5e:	20 f0       	brcs	.+8      	; 0xe68 <__addsf3x+0x1c>
     e60:	79 f4       	brne	.+30     	; 0xe80 <__addsf3x+0x34>
     e62:	a6 f5       	brtc	.+104    	; 0xecc <__addsf3x+0x80>
     e64:	0c 94 38 08 	jmp	0x1070	; 0x1070 <__fp_zero>
     e68:	0e f4       	brtc	.+2      	; 0xe6c <__addsf3x+0x20>
     e6a:	e0 95       	com	r30
     e6c:	0b 2e       	mov	r0, r27
     e6e:	ba 2f       	mov	r27, r26
     e70:	a0 2d       	mov	r26, r0
     e72:	0b 01       	movw	r0, r22
     e74:	b9 01       	movw	r22, r18
     e76:	90 01       	movw	r18, r0
     e78:	0c 01       	movw	r0, r24
     e7a:	ca 01       	movw	r24, r20
     e7c:	a0 01       	movw	r20, r0
     e7e:	11 24       	eor	r1, r1
     e80:	ff 27       	eor	r31, r31
     e82:	59 1b       	sub	r21, r25
     e84:	99 f0       	breq	.+38     	; 0xeac <__addsf3x+0x60>
     e86:	59 3f       	cpi	r21, 0xF9	; 249
     e88:	50 f4       	brcc	.+20     	; 0xe9e <__addsf3x+0x52>
     e8a:	50 3e       	cpi	r21, 0xE0	; 224
     e8c:	68 f1       	brcs	.+90     	; 0xee8 <__addsf3x+0x9c>
     e8e:	1a 16       	cp	r1, r26
     e90:	f0 40       	sbci	r31, 0x00	; 0
     e92:	a2 2f       	mov	r26, r18
     e94:	23 2f       	mov	r18, r19
     e96:	34 2f       	mov	r19, r20
     e98:	44 27       	eor	r20, r20
     e9a:	58 5f       	subi	r21, 0xF8	; 248
     e9c:	f3 cf       	rjmp	.-26     	; 0xe84 <__addsf3x+0x38>
     e9e:	46 95       	lsr	r20
     ea0:	37 95       	ror	r19
     ea2:	27 95       	ror	r18
     ea4:	a7 95       	ror	r26
     ea6:	f0 40       	sbci	r31, 0x00	; 0
     ea8:	53 95       	inc	r21
     eaa:	c9 f7       	brne	.-14     	; 0xe9e <__addsf3x+0x52>
     eac:	7e f4       	brtc	.+30     	; 0xecc <__addsf3x+0x80>
     eae:	1f 16       	cp	r1, r31
     eb0:	ba 0b       	sbc	r27, r26
     eb2:	62 0b       	sbc	r22, r18
     eb4:	73 0b       	sbc	r23, r19
     eb6:	84 0b       	sbc	r24, r20
     eb8:	ba f0       	brmi	.+46     	; 0xee8 <__addsf3x+0x9c>
     eba:	91 50       	subi	r25, 0x01	; 1
     ebc:	a1 f0       	breq	.+40     	; 0xee6 <__addsf3x+0x9a>
     ebe:	ff 0f       	add	r31, r31
     ec0:	bb 1f       	adc	r27, r27
     ec2:	66 1f       	adc	r22, r22
     ec4:	77 1f       	adc	r23, r23
     ec6:	88 1f       	adc	r24, r24
     ec8:	c2 f7       	brpl	.-16     	; 0xeba <__addsf3x+0x6e>
     eca:	0e c0       	rjmp	.+28     	; 0xee8 <__addsf3x+0x9c>
     ecc:	ba 0f       	add	r27, r26
     ece:	62 1f       	adc	r22, r18
     ed0:	73 1f       	adc	r23, r19
     ed2:	84 1f       	adc	r24, r20
     ed4:	48 f4       	brcc	.+18     	; 0xee8 <__addsf3x+0x9c>
     ed6:	87 95       	ror	r24
     ed8:	77 95       	ror	r23
     eda:	67 95       	ror	r22
     edc:	b7 95       	ror	r27
     ede:	f7 95       	ror	r31
     ee0:	9e 3f       	cpi	r25, 0xFE	; 254
     ee2:	08 f0       	brcs	.+2      	; 0xee6 <__addsf3x+0x9a>
     ee4:	b0 cf       	rjmp	.-160    	; 0xe46 <__addsf3+0x28>
     ee6:	93 95       	inc	r25
     ee8:	88 0f       	add	r24, r24
     eea:	08 f0       	brcs	.+2      	; 0xeee <__addsf3x+0xa2>
     eec:	99 27       	eor	r25, r25
     eee:	ee 0f       	add	r30, r30
     ef0:	97 95       	ror	r25
     ef2:	87 95       	ror	r24
     ef4:	08 95       	ret

00000ef6 <__fixsfsi>:
     ef6:	0e 94 82 07 	call	0xf04	; 0xf04 <__fixunssfsi>
     efa:	68 94       	set
     efc:	b1 11       	cpse	r27, r1
     efe:	0c 94 39 08 	jmp	0x1072	; 0x1072 <__fp_szero>
     f02:	08 95       	ret

00000f04 <__fixunssfsi>:
     f04:	0e 94 1e 08 	call	0x103c	; 0x103c <__fp_splitA>
     f08:	88 f0       	brcs	.+34     	; 0xf2c <__fixunssfsi+0x28>
     f0a:	9f 57       	subi	r25, 0x7F	; 127
     f0c:	98 f0       	brcs	.+38     	; 0xf34 <__fixunssfsi+0x30>
     f0e:	b9 2f       	mov	r27, r25
     f10:	99 27       	eor	r25, r25
     f12:	b7 51       	subi	r27, 0x17	; 23
     f14:	b0 f0       	brcs	.+44     	; 0xf42 <__fixunssfsi+0x3e>
     f16:	e1 f0       	breq	.+56     	; 0xf50 <__fixunssfsi+0x4c>
     f18:	66 0f       	add	r22, r22
     f1a:	77 1f       	adc	r23, r23
     f1c:	88 1f       	adc	r24, r24
     f1e:	99 1f       	adc	r25, r25
     f20:	1a f0       	brmi	.+6      	; 0xf28 <__fixunssfsi+0x24>
     f22:	ba 95       	dec	r27
     f24:	c9 f7       	brne	.-14     	; 0xf18 <__fixunssfsi+0x14>
     f26:	14 c0       	rjmp	.+40     	; 0xf50 <__fixunssfsi+0x4c>
     f28:	b1 30       	cpi	r27, 0x01	; 1
     f2a:	91 f0       	breq	.+36     	; 0xf50 <__fixunssfsi+0x4c>
     f2c:	0e 94 38 08 	call	0x1070	; 0x1070 <__fp_zero>
     f30:	b1 e0       	ldi	r27, 0x01	; 1
     f32:	08 95       	ret
     f34:	0c 94 38 08 	jmp	0x1070	; 0x1070 <__fp_zero>
     f38:	67 2f       	mov	r22, r23
     f3a:	78 2f       	mov	r23, r24
     f3c:	88 27       	eor	r24, r24
     f3e:	b8 5f       	subi	r27, 0xF8	; 248
     f40:	39 f0       	breq	.+14     	; 0xf50 <__fixunssfsi+0x4c>
     f42:	b9 3f       	cpi	r27, 0xF9	; 249
     f44:	cc f3       	brlt	.-14     	; 0xf38 <__fixunssfsi+0x34>
     f46:	86 95       	lsr	r24
     f48:	77 95       	ror	r23
     f4a:	67 95       	ror	r22
     f4c:	b3 95       	inc	r27
     f4e:	d9 f7       	brne	.-10     	; 0xf46 <__fixunssfsi+0x42>
     f50:	3e f4       	brtc	.+14     	; 0xf60 <__fixunssfsi+0x5c>
     f52:	90 95       	com	r25
     f54:	80 95       	com	r24
     f56:	70 95       	com	r23
     f58:	61 95       	neg	r22
     f5a:	7f 4f       	sbci	r23, 0xFF	; 255
     f5c:	8f 4f       	sbci	r24, 0xFF	; 255
     f5e:	9f 4f       	sbci	r25, 0xFF	; 255
     f60:	08 95       	ret

00000f62 <__floatunsisf>:
     f62:	e8 94       	clt
     f64:	09 c0       	rjmp	.+18     	; 0xf78 <__floatsisf+0x12>

00000f66 <__floatsisf>:
     f66:	97 fb       	bst	r25, 7
     f68:	3e f4       	brtc	.+14     	; 0xf78 <__floatsisf+0x12>
     f6a:	90 95       	com	r25
     f6c:	80 95       	com	r24
     f6e:	70 95       	com	r23
     f70:	61 95       	neg	r22
     f72:	7f 4f       	sbci	r23, 0xFF	; 255
     f74:	8f 4f       	sbci	r24, 0xFF	; 255
     f76:	9f 4f       	sbci	r25, 0xFF	; 255
     f78:	99 23       	and	r25, r25
     f7a:	a9 f0       	breq	.+42     	; 0xfa6 <__floatsisf+0x40>
     f7c:	f9 2f       	mov	r31, r25
     f7e:	96 e9       	ldi	r25, 0x96	; 150
     f80:	bb 27       	eor	r27, r27
     f82:	93 95       	inc	r25
     f84:	f6 95       	lsr	r31
     f86:	87 95       	ror	r24
     f88:	77 95       	ror	r23
     f8a:	67 95       	ror	r22
     f8c:	b7 95       	ror	r27
     f8e:	f1 11       	cpse	r31, r1
     f90:	f8 cf       	rjmp	.-16     	; 0xf82 <__floatsisf+0x1c>
     f92:	fa f4       	brpl	.+62     	; 0xfd2 <__floatsisf+0x6c>
     f94:	bb 0f       	add	r27, r27
     f96:	11 f4       	brne	.+4      	; 0xf9c <__floatsisf+0x36>
     f98:	60 ff       	sbrs	r22, 0
     f9a:	1b c0       	rjmp	.+54     	; 0xfd2 <__floatsisf+0x6c>
     f9c:	6f 5f       	subi	r22, 0xFF	; 255
     f9e:	7f 4f       	sbci	r23, 0xFF	; 255
     fa0:	8f 4f       	sbci	r24, 0xFF	; 255
     fa2:	9f 4f       	sbci	r25, 0xFF	; 255
     fa4:	16 c0       	rjmp	.+44     	; 0xfd2 <__floatsisf+0x6c>
     fa6:	88 23       	and	r24, r24
     fa8:	11 f0       	breq	.+4      	; 0xfae <__floatsisf+0x48>
     faa:	96 e9       	ldi	r25, 0x96	; 150
     fac:	11 c0       	rjmp	.+34     	; 0xfd0 <__floatsisf+0x6a>
     fae:	77 23       	and	r23, r23
     fb0:	21 f0       	breq	.+8      	; 0xfba <__floatsisf+0x54>
     fb2:	9e e8       	ldi	r25, 0x8E	; 142
     fb4:	87 2f       	mov	r24, r23
     fb6:	76 2f       	mov	r23, r22
     fb8:	05 c0       	rjmp	.+10     	; 0xfc4 <__floatsisf+0x5e>
     fba:	66 23       	and	r22, r22
     fbc:	71 f0       	breq	.+28     	; 0xfda <__floatsisf+0x74>
     fbe:	96 e8       	ldi	r25, 0x86	; 134
     fc0:	86 2f       	mov	r24, r22
     fc2:	70 e0       	ldi	r23, 0x00	; 0
     fc4:	60 e0       	ldi	r22, 0x00	; 0
     fc6:	2a f0       	brmi	.+10     	; 0xfd2 <__floatsisf+0x6c>
     fc8:	9a 95       	dec	r25
     fca:	66 0f       	add	r22, r22
     fcc:	77 1f       	adc	r23, r23
     fce:	88 1f       	adc	r24, r24
     fd0:	da f7       	brpl	.-10     	; 0xfc8 <__floatsisf+0x62>
     fd2:	88 0f       	add	r24, r24
     fd4:	96 95       	lsr	r25
     fd6:	87 95       	ror	r24
     fd8:	97 f9       	bld	r25, 7
     fda:	08 95       	ret

00000fdc <__fp_inf>:
     fdc:	97 f9       	bld	r25, 7
     fde:	9f 67       	ori	r25, 0x7F	; 127
     fe0:	80 e8       	ldi	r24, 0x80	; 128
     fe2:	70 e0       	ldi	r23, 0x00	; 0
     fe4:	60 e0       	ldi	r22, 0x00	; 0
     fe6:	08 95       	ret

00000fe8 <__fp_nan>:
     fe8:	9f ef       	ldi	r25, 0xFF	; 255
     fea:	80 ec       	ldi	r24, 0xC0	; 192
     fec:	08 95       	ret

00000fee <__fp_pscA>:
     fee:	00 24       	eor	r0, r0
     ff0:	0a 94       	dec	r0
     ff2:	16 16       	cp	r1, r22
     ff4:	17 06       	cpc	r1, r23
     ff6:	18 06       	cpc	r1, r24
     ff8:	09 06       	cpc	r0, r25
     ffa:	08 95       	ret

00000ffc <__fp_pscB>:
     ffc:	00 24       	eor	r0, r0
     ffe:	0a 94       	dec	r0
    1000:	12 16       	cp	r1, r18
    1002:	13 06       	cpc	r1, r19
    1004:	14 06       	cpc	r1, r20
    1006:	05 06       	cpc	r0, r21
    1008:	08 95       	ret

0000100a <__fp_round>:
    100a:	09 2e       	mov	r0, r25
    100c:	03 94       	inc	r0
    100e:	00 0c       	add	r0, r0
    1010:	11 f4       	brne	.+4      	; 0x1016 <__fp_round+0xc>
    1012:	88 23       	and	r24, r24
    1014:	52 f0       	brmi	.+20     	; 0x102a <__fp_round+0x20>
    1016:	bb 0f       	add	r27, r27
    1018:	40 f4       	brcc	.+16     	; 0x102a <__fp_round+0x20>
    101a:	bf 2b       	or	r27, r31
    101c:	11 f4       	brne	.+4      	; 0x1022 <__fp_round+0x18>
    101e:	60 ff       	sbrs	r22, 0
    1020:	04 c0       	rjmp	.+8      	; 0x102a <__fp_round+0x20>
    1022:	6f 5f       	subi	r22, 0xFF	; 255
    1024:	7f 4f       	sbci	r23, 0xFF	; 255
    1026:	8f 4f       	sbci	r24, 0xFF	; 255
    1028:	9f 4f       	sbci	r25, 0xFF	; 255
    102a:	08 95       	ret

0000102c <__fp_split3>:
    102c:	57 fd       	sbrc	r21, 7
    102e:	90 58       	subi	r25, 0x80	; 128
    1030:	44 0f       	add	r20, r20
    1032:	55 1f       	adc	r21, r21
    1034:	59 f0       	breq	.+22     	; 0x104c <__fp_splitA+0x10>
    1036:	5f 3f       	cpi	r21, 0xFF	; 255
    1038:	71 f0       	breq	.+28     	; 0x1056 <__fp_splitA+0x1a>
    103a:	47 95       	ror	r20

0000103c <__fp_splitA>:
    103c:	88 0f       	add	r24, r24
    103e:	97 fb       	bst	r25, 7
    1040:	99 1f       	adc	r25, r25
    1042:	61 f0       	breq	.+24     	; 0x105c <__fp_splitA+0x20>
    1044:	9f 3f       	cpi	r25, 0xFF	; 255
    1046:	79 f0       	breq	.+30     	; 0x1066 <__fp_splitA+0x2a>
    1048:	87 95       	ror	r24
    104a:	08 95       	ret
    104c:	12 16       	cp	r1, r18
    104e:	13 06       	cpc	r1, r19
    1050:	14 06       	cpc	r1, r20
    1052:	55 1f       	adc	r21, r21
    1054:	f2 cf       	rjmp	.-28     	; 0x103a <__fp_split3+0xe>
    1056:	46 95       	lsr	r20
    1058:	f1 df       	rcall	.-30     	; 0x103c <__fp_splitA>
    105a:	08 c0       	rjmp	.+16     	; 0x106c <__fp_splitA+0x30>
    105c:	16 16       	cp	r1, r22
    105e:	17 06       	cpc	r1, r23
    1060:	18 06       	cpc	r1, r24
    1062:	99 1f       	adc	r25, r25
    1064:	f1 cf       	rjmp	.-30     	; 0x1048 <__fp_splitA+0xc>
    1066:	86 95       	lsr	r24
    1068:	71 05       	cpc	r23, r1
    106a:	61 05       	cpc	r22, r1
    106c:	08 94       	sec
    106e:	08 95       	ret

00001070 <__fp_zero>:
    1070:	e8 94       	clt

00001072 <__fp_szero>:
    1072:	bb 27       	eor	r27, r27
    1074:	66 27       	eor	r22, r22
    1076:	77 27       	eor	r23, r23
    1078:	cb 01       	movw	r24, r22
    107a:	97 f9       	bld	r25, 7
    107c:	08 95       	ret

0000107e <pow>:
    107e:	fa 01       	movw	r30, r20
    1080:	ee 0f       	add	r30, r30
    1082:	ff 1f       	adc	r31, r31
    1084:	30 96       	adiw	r30, 0x00	; 0
    1086:	21 05       	cpc	r18, r1
    1088:	31 05       	cpc	r19, r1
    108a:	a1 f1       	breq	.+104    	; 0x10f4 <pow+0x76>
    108c:	61 15       	cp	r22, r1
    108e:	71 05       	cpc	r23, r1
    1090:	61 f4       	brne	.+24     	; 0x10aa <pow+0x2c>
    1092:	80 38       	cpi	r24, 0x80	; 128
    1094:	bf e3       	ldi	r27, 0x3F	; 63
    1096:	9b 07       	cpc	r25, r27
    1098:	49 f1       	breq	.+82     	; 0x10ec <pow+0x6e>
    109a:	68 94       	set
    109c:	90 38       	cpi	r25, 0x80	; 128
    109e:	81 05       	cpc	r24, r1
    10a0:	61 f0       	breq	.+24     	; 0x10ba <pow+0x3c>
    10a2:	80 38       	cpi	r24, 0x80	; 128
    10a4:	bf ef       	ldi	r27, 0xFF	; 255
    10a6:	9b 07       	cpc	r25, r27
    10a8:	41 f0       	breq	.+16     	; 0x10ba <pow+0x3c>
    10aa:	99 23       	and	r25, r25
    10ac:	4a f5       	brpl	.+82     	; 0x1100 <pow+0x82>
    10ae:	ff 3f       	cpi	r31, 0xFF	; 255
    10b0:	e1 05       	cpc	r30, r1
    10b2:	31 05       	cpc	r19, r1
    10b4:	21 05       	cpc	r18, r1
    10b6:	19 f1       	breq	.+70     	; 0x10fe <pow+0x80>
    10b8:	e8 94       	clt
    10ba:	08 94       	sec
    10bc:	e7 95       	ror	r30
    10be:	d9 01       	movw	r26, r18
    10c0:	aa 23       	and	r26, r26
    10c2:	29 f4       	brne	.+10     	; 0x10ce <pow+0x50>
    10c4:	ab 2f       	mov	r26, r27
    10c6:	be 2f       	mov	r27, r30
    10c8:	f8 5f       	subi	r31, 0xF8	; 248
    10ca:	d0 f3       	brcs	.-12     	; 0x10c0 <pow+0x42>
    10cc:	10 c0       	rjmp	.+32     	; 0x10ee <pow+0x70>
    10ce:	ff 5f       	subi	r31, 0xFF	; 255
    10d0:	70 f4       	brcc	.+28     	; 0x10ee <pow+0x70>
    10d2:	a6 95       	lsr	r26
    10d4:	e0 f7       	brcc	.-8      	; 0x10ce <pow+0x50>
    10d6:	f7 39       	cpi	r31, 0x97	; 151
    10d8:	50 f0       	brcs	.+20     	; 0x10ee <pow+0x70>
    10da:	19 f0       	breq	.+6      	; 0x10e2 <pow+0x64>
    10dc:	ff 3a       	cpi	r31, 0xAF	; 175
    10de:	38 f4       	brcc	.+14     	; 0x10ee <pow+0x70>
    10e0:	9f 77       	andi	r25, 0x7F	; 127
    10e2:	9f 93       	push	r25
    10e4:	0d d0       	rcall	.+26     	; 0x1100 <pow+0x82>
    10e6:	0f 90       	pop	r0
    10e8:	07 fc       	sbrc	r0, 7
    10ea:	90 58       	subi	r25, 0x80	; 128
    10ec:	08 95       	ret
    10ee:	46 f0       	brts	.+16     	; 0x1100 <pow+0x82>
    10f0:	0c 94 f4 07 	jmp	0xfe8	; 0xfe8 <__fp_nan>
    10f4:	60 e0       	ldi	r22, 0x00	; 0
    10f6:	70 e0       	ldi	r23, 0x00	; 0
    10f8:	80 e8       	ldi	r24, 0x80	; 128
    10fa:	9f e3       	ldi	r25, 0x3F	; 63
    10fc:	08 95       	ret
    10fe:	4f e7       	ldi	r20, 0x7F	; 127
    1100:	9f 77       	andi	r25, 0x7F	; 127
    1102:	5f 93       	push	r21
    1104:	4f 93       	push	r20
    1106:	3f 93       	push	r19
    1108:	2f 93       	push	r18
    110a:	0e 94 95 09 	call	0x132a	; 0x132a <log>
    110e:	2f 91       	pop	r18
    1110:	3f 91       	pop	r19
    1112:	4f 91       	pop	r20
    1114:	5f 91       	pop	r21
    1116:	0e 94 11 0a 	call	0x1422	; 0x1422 <__mulsf3>
    111a:	0c 94 dd 08 	jmp	0x11ba	; 0x11ba <exp>
    111e:	19 f4       	brne	.+6      	; 0x1126 <pow+0xa8>
    1120:	16 f4       	brtc	.+4      	; 0x1126 <pow+0xa8>
    1122:	0c 94 f4 07 	jmp	0xfe8	; 0xfe8 <__fp_nan>
    1126:	0c 94 0f 09 	jmp	0x121e	; 0x121e <__fp_mpack>

0000112a <sqrt>:
    112a:	0e 94 1e 08 	call	0x103c	; 0x103c <__fp_splitA>
    112e:	b8 f3       	brcs	.-18     	; 0x111e <pow+0xa0>
    1130:	99 23       	and	r25, r25
    1132:	c9 f3       	breq	.-14     	; 0x1126 <pow+0xa8>
    1134:	b6 f3       	brts	.-20     	; 0x1122 <pow+0xa4>
    1136:	9f 57       	subi	r25, 0x7F	; 127
    1138:	55 0b       	sbc	r21, r21
    113a:	87 ff       	sbrs	r24, 7
    113c:	0e 94 1d 09 	call	0x123a	; 0x123a <__fp_norm2>
    1140:	00 24       	eor	r0, r0
    1142:	a0 e6       	ldi	r26, 0x60	; 96
    1144:	40 ea       	ldi	r20, 0xA0	; 160
    1146:	90 01       	movw	r18, r0
    1148:	80 58       	subi	r24, 0x80	; 128
    114a:	56 95       	lsr	r21
    114c:	97 95       	ror	r25
    114e:	28 f4       	brcc	.+10     	; 0x115a <sqrt+0x30>
    1150:	80 5c       	subi	r24, 0xC0	; 192
    1152:	66 0f       	add	r22, r22
    1154:	77 1f       	adc	r23, r23
    1156:	88 1f       	adc	r24, r24
    1158:	20 f0       	brcs	.+8      	; 0x1162 <sqrt+0x38>
    115a:	26 17       	cp	r18, r22
    115c:	37 07       	cpc	r19, r23
    115e:	48 07       	cpc	r20, r24
    1160:	30 f4       	brcc	.+12     	; 0x116e <sqrt+0x44>
    1162:	62 1b       	sub	r22, r18
    1164:	73 0b       	sbc	r23, r19
    1166:	84 0b       	sbc	r24, r20
    1168:	20 29       	or	r18, r0
    116a:	31 29       	or	r19, r1
    116c:	4a 2b       	or	r20, r26
    116e:	a6 95       	lsr	r26
    1170:	17 94       	ror	r1
    1172:	07 94       	ror	r0
    1174:	20 25       	eor	r18, r0
    1176:	31 25       	eor	r19, r1
    1178:	4a 27       	eor	r20, r26
    117a:	58 f7       	brcc	.-42     	; 0x1152 <sqrt+0x28>
    117c:	66 0f       	add	r22, r22
    117e:	77 1f       	adc	r23, r23
    1180:	88 1f       	adc	r24, r24
    1182:	20 f0       	brcs	.+8      	; 0x118c <sqrt+0x62>
    1184:	26 17       	cp	r18, r22
    1186:	37 07       	cpc	r19, r23
    1188:	48 07       	cpc	r20, r24
    118a:	30 f4       	brcc	.+12     	; 0x1198 <sqrt+0x6e>
    118c:	62 0b       	sbc	r22, r18
    118e:	73 0b       	sbc	r23, r19
    1190:	84 0b       	sbc	r24, r20
    1192:	20 0d       	add	r18, r0
    1194:	31 1d       	adc	r19, r1
    1196:	41 1d       	adc	r20, r1
    1198:	a0 95       	com	r26
    119a:	81 f7       	brne	.-32     	; 0x117c <sqrt+0x52>
    119c:	b9 01       	movw	r22, r18
    119e:	84 2f       	mov	r24, r20
    11a0:	91 58       	subi	r25, 0x81	; 129
    11a2:	88 0f       	add	r24, r24
    11a4:	96 95       	lsr	r25
    11a6:	87 95       	ror	r24
    11a8:	08 95       	ret
    11aa:	29 f4       	brne	.+10     	; 0x11b6 <sqrt+0x8c>
    11ac:	16 f0       	brts	.+4      	; 0x11b2 <sqrt+0x88>
    11ae:	0c 94 ee 07 	jmp	0xfdc	; 0xfdc <__fp_inf>
    11b2:	0c 94 38 08 	jmp	0x1070	; 0x1070 <__fp_zero>
    11b6:	0c 94 f4 07 	jmp	0xfe8	; 0xfe8 <__fp_nan>

000011ba <exp>:
    11ba:	0e 94 1e 08 	call	0x103c	; 0x103c <__fp_splitA>
    11be:	a8 f3       	brcs	.-22     	; 0x11aa <sqrt+0x80>
    11c0:	96 38       	cpi	r25, 0x86	; 134
    11c2:	a0 f7       	brcc	.-24     	; 0x11ac <sqrt+0x82>
    11c4:	07 f8       	bld	r0, 7
    11c6:	0f 92       	push	r0
    11c8:	e8 94       	clt
    11ca:	2b e3       	ldi	r18, 0x3B	; 59
    11cc:	3a ea       	ldi	r19, 0xAA	; 170
    11ce:	48 eb       	ldi	r20, 0xB8	; 184
    11d0:	5f e7       	ldi	r21, 0x7F	; 127
    11d2:	0e 94 27 0a 	call	0x144e	; 0x144e <__mulsf3_pse>
    11d6:	0f 92       	push	r0
    11d8:	0f 92       	push	r0
    11da:	0f 92       	push	r0
    11dc:	4d b7       	in	r20, 0x3d	; 61
    11de:	5e b7       	in	r21, 0x3e	; 62
    11e0:	0f 92       	push	r0
    11e2:	0e 94 dd 09 	call	0x13ba	; 0x13ba <modf>
    11e6:	e8 e7       	ldi	r30, 0x78	; 120
    11e8:	f2 e0       	ldi	r31, 0x02	; 2
    11ea:	0e 94 24 09 	call	0x1248	; 0x1248 <__fp_powser>
    11ee:	4f 91       	pop	r20
    11f0:	5f 91       	pop	r21
    11f2:	ef 91       	pop	r30
    11f4:	ff 91       	pop	r31
    11f6:	e5 95       	asr	r30
    11f8:	ee 1f       	adc	r30, r30
    11fa:	ff 1f       	adc	r31, r31
    11fc:	49 f0       	breq	.+18     	; 0x1210 <exp+0x56>
    11fe:	fe 57       	subi	r31, 0x7E	; 126
    1200:	e0 68       	ori	r30, 0x80	; 128
    1202:	44 27       	eor	r20, r20
    1204:	ee 0f       	add	r30, r30
    1206:	44 1f       	adc	r20, r20
    1208:	fa 95       	dec	r31
    120a:	e1 f7       	brne	.-8      	; 0x1204 <exp+0x4a>
    120c:	41 95       	neg	r20
    120e:	55 0b       	sbc	r21, r21
    1210:	0e 94 57 09 	call	0x12ae	; 0x12ae <ldexp>
    1214:	0f 90       	pop	r0
    1216:	07 fe       	sbrs	r0, 7
    1218:	0c 94 4b 09 	jmp	0x1296	; 0x1296 <inverse>
    121c:	08 95       	ret

0000121e <__fp_mpack>:
    121e:	9f 3f       	cpi	r25, 0xFF	; 255
    1220:	31 f0       	breq	.+12     	; 0x122e <__fp_mpack_finite+0xc>

00001222 <__fp_mpack_finite>:
    1222:	91 50       	subi	r25, 0x01	; 1
    1224:	20 f4       	brcc	.+8      	; 0x122e <__fp_mpack_finite+0xc>
    1226:	87 95       	ror	r24
    1228:	77 95       	ror	r23
    122a:	67 95       	ror	r22
    122c:	b7 95       	ror	r27
    122e:	88 0f       	add	r24, r24
    1230:	91 1d       	adc	r25, r1
    1232:	96 95       	lsr	r25
    1234:	87 95       	ror	r24
    1236:	97 f9       	bld	r25, 7
    1238:	08 95       	ret

0000123a <__fp_norm2>:
    123a:	91 50       	subi	r25, 0x01	; 1
    123c:	50 40       	sbci	r21, 0x00	; 0
    123e:	66 0f       	add	r22, r22
    1240:	77 1f       	adc	r23, r23
    1242:	88 1f       	adc	r24, r24
    1244:	d2 f7       	brpl	.-12     	; 0x123a <__fp_norm2>
    1246:	08 95       	ret

00001248 <__fp_powser>:
    1248:	df 93       	push	r29
    124a:	cf 93       	push	r28
    124c:	1f 93       	push	r17
    124e:	0f 93       	push	r16
    1250:	ff 92       	push	r15
    1252:	ef 92       	push	r14
    1254:	df 92       	push	r13
    1256:	7b 01       	movw	r14, r22
    1258:	8c 01       	movw	r16, r24
    125a:	68 94       	set
    125c:	06 c0       	rjmp	.+12     	; 0x126a <__fp_powser+0x22>
    125e:	da 2e       	mov	r13, r26
    1260:	ef 01       	movw	r28, r30
    1262:	0e 94 24 0a 	call	0x1448	; 0x1448 <__mulsf3x>
    1266:	fe 01       	movw	r30, r28
    1268:	e8 94       	clt
    126a:	a5 91       	lpm	r26, Z+
    126c:	25 91       	lpm	r18, Z+
    126e:	35 91       	lpm	r19, Z+
    1270:	45 91       	lpm	r20, Z+
    1272:	55 91       	lpm	r21, Z+
    1274:	a6 f3       	brts	.-24     	; 0x125e <__fp_powser+0x16>
    1276:	ef 01       	movw	r28, r30
    1278:	0e 94 26 07 	call	0xe4c	; 0xe4c <__addsf3x>
    127c:	fe 01       	movw	r30, r28
    127e:	97 01       	movw	r18, r14
    1280:	a8 01       	movw	r20, r16
    1282:	da 94       	dec	r13
    1284:	69 f7       	brne	.-38     	; 0x1260 <__fp_powser+0x18>
    1286:	df 90       	pop	r13
    1288:	ef 90       	pop	r14
    128a:	ff 90       	pop	r15
    128c:	0f 91       	pop	r16
    128e:	1f 91       	pop	r17
    1290:	cf 91       	pop	r28
    1292:	df 91       	pop	r29
    1294:	08 95       	ret

00001296 <inverse>:
    1296:	9b 01       	movw	r18, r22
    1298:	ac 01       	movw	r20, r24
    129a:	60 e0       	ldi	r22, 0x00	; 0
    129c:	70 e0       	ldi	r23, 0x00	; 0
    129e:	80 e8       	ldi	r24, 0x80	; 128
    12a0:	9f e3       	ldi	r25, 0x3F	; 63
    12a2:	0c 94 7e 0a 	jmp	0x14fc	; 0x14fc <__divsf3>
    12a6:	0c 94 ee 07 	jmp	0xfdc	; 0xfdc <__fp_inf>
    12aa:	0c 94 0f 09 	jmp	0x121e	; 0x121e <__fp_mpack>

000012ae <ldexp>:
    12ae:	0e 94 1e 08 	call	0x103c	; 0x103c <__fp_splitA>
    12b2:	d8 f3       	brcs	.-10     	; 0x12aa <inverse+0x14>
    12b4:	99 23       	and	r25, r25
    12b6:	c9 f3       	breq	.-14     	; 0x12aa <inverse+0x14>
    12b8:	94 0f       	add	r25, r20
    12ba:	51 1d       	adc	r21, r1
    12bc:	a3 f3       	brvs	.-24     	; 0x12a6 <inverse+0x10>
    12be:	91 50       	subi	r25, 0x01	; 1
    12c0:	50 40       	sbci	r21, 0x00	; 0
    12c2:	94 f0       	brlt	.+36     	; 0x12e8 <ldexp+0x3a>
    12c4:	59 f0       	breq	.+22     	; 0x12dc <ldexp+0x2e>
    12c6:	88 23       	and	r24, r24
    12c8:	32 f0       	brmi	.+12     	; 0x12d6 <ldexp+0x28>
    12ca:	66 0f       	add	r22, r22
    12cc:	77 1f       	adc	r23, r23
    12ce:	88 1f       	adc	r24, r24
    12d0:	91 50       	subi	r25, 0x01	; 1
    12d2:	50 40       	sbci	r21, 0x00	; 0
    12d4:	c1 f7       	brne	.-16     	; 0x12c6 <ldexp+0x18>
    12d6:	9e 3f       	cpi	r25, 0xFE	; 254
    12d8:	51 05       	cpc	r21, r1
    12da:	2c f7       	brge	.-54     	; 0x12a6 <inverse+0x10>
    12dc:	88 0f       	add	r24, r24
    12de:	91 1d       	adc	r25, r1
    12e0:	96 95       	lsr	r25
    12e2:	87 95       	ror	r24
    12e4:	97 f9       	bld	r25, 7
    12e6:	08 95       	ret
    12e8:	5f 3f       	cpi	r21, 0xFF	; 255
    12ea:	ac f0       	brlt	.+42     	; 0x1316 <ldexp+0x68>
    12ec:	98 3e       	cpi	r25, 0xE8	; 232
    12ee:	9c f0       	brlt	.+38     	; 0x1316 <ldexp+0x68>
    12f0:	bb 27       	eor	r27, r27
    12f2:	86 95       	lsr	r24
    12f4:	77 95       	ror	r23
    12f6:	67 95       	ror	r22
    12f8:	b7 95       	ror	r27
    12fa:	08 f4       	brcc	.+2      	; 0x12fe <ldexp+0x50>
    12fc:	b1 60       	ori	r27, 0x01	; 1
    12fe:	93 95       	inc	r25
    1300:	c1 f7       	brne	.-16     	; 0x12f2 <ldexp+0x44>
    1302:	bb 0f       	add	r27, r27
    1304:	58 f7       	brcc	.-42     	; 0x12dc <ldexp+0x2e>
    1306:	11 f4       	brne	.+4      	; 0x130c <ldexp+0x5e>
    1308:	60 ff       	sbrs	r22, 0
    130a:	e8 cf       	rjmp	.-48     	; 0x12dc <ldexp+0x2e>
    130c:	6f 5f       	subi	r22, 0xFF	; 255
    130e:	7f 4f       	sbci	r23, 0xFF	; 255
    1310:	8f 4f       	sbci	r24, 0xFF	; 255
    1312:	9f 4f       	sbci	r25, 0xFF	; 255
    1314:	e3 cf       	rjmp	.-58     	; 0x12dc <ldexp+0x2e>
    1316:	0c 94 39 08 	jmp	0x1072	; 0x1072 <__fp_szero>
    131a:	16 f0       	brts	.+4      	; 0x1320 <ldexp+0x72>
    131c:	0c 94 0f 09 	jmp	0x121e	; 0x121e <__fp_mpack>
    1320:	0c 94 f4 07 	jmp	0xfe8	; 0xfe8 <__fp_nan>
    1324:	68 94       	set
    1326:	0c 94 ee 07 	jmp	0xfdc	; 0xfdc <__fp_inf>

0000132a <log>:
    132a:	0e 94 1e 08 	call	0x103c	; 0x103c <__fp_splitA>
    132e:	a8 f3       	brcs	.-22     	; 0x131a <ldexp+0x6c>
    1330:	99 23       	and	r25, r25
    1332:	c1 f3       	breq	.-16     	; 0x1324 <ldexp+0x76>
    1334:	ae f3       	brts	.-22     	; 0x1320 <ldexp+0x72>
    1336:	df 93       	push	r29
    1338:	cf 93       	push	r28
    133a:	1f 93       	push	r17
    133c:	0f 93       	push	r16
    133e:	ff 92       	push	r15
    1340:	c9 2f       	mov	r28, r25
    1342:	dd 27       	eor	r29, r29
    1344:	88 23       	and	r24, r24
    1346:	2a f0       	brmi	.+10     	; 0x1352 <log+0x28>
    1348:	21 97       	sbiw	r28, 0x01	; 1
    134a:	66 0f       	add	r22, r22
    134c:	77 1f       	adc	r23, r23
    134e:	88 1f       	adc	r24, r24
    1350:	da f7       	brpl	.-10     	; 0x1348 <log+0x1e>
    1352:	20 e0       	ldi	r18, 0x00	; 0
    1354:	30 e0       	ldi	r19, 0x00	; 0
    1356:	40 e8       	ldi	r20, 0x80	; 128
    1358:	5f eb       	ldi	r21, 0xBF	; 191
    135a:	9f e3       	ldi	r25, 0x3F	; 63
    135c:	88 39       	cpi	r24, 0x98	; 152
    135e:	20 f0       	brcs	.+8      	; 0x1368 <log+0x3e>
    1360:	80 3e       	cpi	r24, 0xE0	; 224
    1362:	38 f0       	brcs	.+14     	; 0x1372 <log+0x48>
    1364:	21 96       	adiw	r28, 0x01	; 1
    1366:	8f 77       	andi	r24, 0x7F	; 127
    1368:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__addsf3>
    136c:	e0 ea       	ldi	r30, 0xA0	; 160
    136e:	f2 e0       	ldi	r31, 0x02	; 2
    1370:	04 c0       	rjmp	.+8      	; 0x137a <log+0x50>
    1372:	0e 94 0f 07 	call	0xe1e	; 0xe1e <__addsf3>
    1376:	ed ec       	ldi	r30, 0xCD	; 205
    1378:	f2 e0       	ldi	r31, 0x02	; 2
    137a:	0e 94 24 09 	call	0x1248	; 0x1248 <__fp_powser>
    137e:	8b 01       	movw	r16, r22
    1380:	be 01       	movw	r22, r28
    1382:	ec 01       	movw	r28, r24
    1384:	fb 2e       	mov	r15, r27
    1386:	6f 57       	subi	r22, 0x7F	; 127
    1388:	71 09       	sbc	r23, r1
    138a:	75 95       	asr	r23
    138c:	77 1f       	adc	r23, r23
    138e:	88 0b       	sbc	r24, r24
    1390:	99 0b       	sbc	r25, r25
    1392:	0e 94 b3 07 	call	0xf66	; 0xf66 <__floatsisf>
    1396:	28 e1       	ldi	r18, 0x18	; 24
    1398:	32 e7       	ldi	r19, 0x72	; 114
    139a:	41 e3       	ldi	r20, 0x31	; 49
    139c:	5f e3       	ldi	r21, 0x3F	; 63
    139e:	0e 94 24 0a 	call	0x1448	; 0x1448 <__mulsf3x>
    13a2:	af 2d       	mov	r26, r15
    13a4:	98 01       	movw	r18, r16
    13a6:	ae 01       	movw	r20, r28
    13a8:	ff 90       	pop	r15
    13aa:	0f 91       	pop	r16
    13ac:	1f 91       	pop	r17
    13ae:	cf 91       	pop	r28
    13b0:	df 91       	pop	r29
    13b2:	0e 94 26 07 	call	0xe4c	; 0xe4c <__addsf3x>
    13b6:	0c 94 05 08 	jmp	0x100a	; 0x100a <__fp_round>

000013ba <modf>:
    13ba:	fa 01       	movw	r30, r20
    13bc:	dc 01       	movw	r26, r24
    13be:	aa 0f       	add	r26, r26
    13c0:	bb 1f       	adc	r27, r27
    13c2:	9b 01       	movw	r18, r22
    13c4:	ac 01       	movw	r20, r24
    13c6:	bf 57       	subi	r27, 0x7F	; 127
    13c8:	28 f4       	brcc	.+10     	; 0x13d4 <modf+0x1a>
    13ca:	22 27       	eor	r18, r18
    13cc:	33 27       	eor	r19, r19
    13ce:	44 27       	eor	r20, r20
    13d0:	50 78       	andi	r21, 0x80	; 128
    13d2:	20 c0       	rjmp	.+64     	; 0x1414 <modf+0x5a>
    13d4:	b7 51       	subi	r27, 0x17	; 23
    13d6:	90 f4       	brcc	.+36     	; 0x13fc <modf+0x42>
    13d8:	ab 2f       	mov	r26, r27
    13da:	00 24       	eor	r0, r0
    13dc:	46 95       	lsr	r20
    13de:	37 95       	ror	r19
    13e0:	27 95       	ror	r18
    13e2:	01 1c       	adc	r0, r1
    13e4:	a3 95       	inc	r26
    13e6:	d2 f3       	brmi	.-12     	; 0x13dc <modf+0x22>
    13e8:	00 20       	and	r0, r0
    13ea:	71 f0       	breq	.+28     	; 0x1408 <modf+0x4e>
    13ec:	22 0f       	add	r18, r18
    13ee:	33 1f       	adc	r19, r19
    13f0:	44 1f       	adc	r20, r20
    13f2:	b3 95       	inc	r27
    13f4:	da f3       	brmi	.-10     	; 0x13ec <modf+0x32>
    13f6:	0e d0       	rcall	.+28     	; 0x1414 <modf+0x5a>
    13f8:	0c 94 0e 07 	jmp	0xe1c	; 0xe1c <__subsf3>
    13fc:	61 30       	cpi	r22, 0x01	; 1
    13fe:	71 05       	cpc	r23, r1
    1400:	a0 e8       	ldi	r26, 0x80	; 128
    1402:	8a 07       	cpc	r24, r26
    1404:	b9 46       	sbci	r27, 0x69	; 105
    1406:	30 f4       	brcc	.+12     	; 0x1414 <modf+0x5a>
    1408:	9b 01       	movw	r18, r22
    140a:	ac 01       	movw	r20, r24
    140c:	66 27       	eor	r22, r22
    140e:	77 27       	eor	r23, r23
    1410:	88 27       	eor	r24, r24
    1412:	90 78       	andi	r25, 0x80	; 128
    1414:	30 96       	adiw	r30, 0x00	; 0
    1416:	21 f0       	breq	.+8      	; 0x1420 <modf+0x66>
    1418:	20 83       	st	Z, r18
    141a:	31 83       	std	Z+1, r19	; 0x01
    141c:	42 83       	std	Z+2, r20	; 0x02
    141e:	53 83       	std	Z+3, r21	; 0x03
    1420:	08 95       	ret

00001422 <__mulsf3>:
    1422:	0e 94 24 0a 	call	0x1448	; 0x1448 <__mulsf3x>
    1426:	0c 94 05 08 	jmp	0x100a	; 0x100a <__fp_round>
    142a:	0e 94 f7 07 	call	0xfee	; 0xfee <__fp_pscA>
    142e:	38 f0       	brcs	.+14     	; 0x143e <__mulsf3+0x1c>
    1430:	0e 94 fe 07 	call	0xffc	; 0xffc <__fp_pscB>
    1434:	20 f0       	brcs	.+8      	; 0x143e <__mulsf3+0x1c>
    1436:	95 23       	and	r25, r21
    1438:	11 f0       	breq	.+4      	; 0x143e <__mulsf3+0x1c>
    143a:	0c 94 ee 07 	jmp	0xfdc	; 0xfdc <__fp_inf>
    143e:	0c 94 f4 07 	jmp	0xfe8	; 0xfe8 <__fp_nan>
    1442:	11 24       	eor	r1, r1
    1444:	0c 94 39 08 	jmp	0x1072	; 0x1072 <__fp_szero>

00001448 <__mulsf3x>:
    1448:	0e 94 16 08 	call	0x102c	; 0x102c <__fp_split3>
    144c:	70 f3       	brcs	.-36     	; 0x142a <__mulsf3+0x8>

0000144e <__mulsf3_pse>:
    144e:	95 9f       	mul	r25, r21
    1450:	c1 f3       	breq	.-16     	; 0x1442 <__mulsf3+0x20>
    1452:	95 0f       	add	r25, r21
    1454:	50 e0       	ldi	r21, 0x00	; 0
    1456:	55 1f       	adc	r21, r21
    1458:	62 9f       	mul	r22, r18
    145a:	f0 01       	movw	r30, r0
    145c:	72 9f       	mul	r23, r18
    145e:	bb 27       	eor	r27, r27
    1460:	f0 0d       	add	r31, r0
    1462:	b1 1d       	adc	r27, r1
    1464:	63 9f       	mul	r22, r19
    1466:	aa 27       	eor	r26, r26
    1468:	f0 0d       	add	r31, r0
    146a:	b1 1d       	adc	r27, r1
    146c:	aa 1f       	adc	r26, r26
    146e:	64 9f       	mul	r22, r20
    1470:	66 27       	eor	r22, r22
    1472:	b0 0d       	add	r27, r0
    1474:	a1 1d       	adc	r26, r1
    1476:	66 1f       	adc	r22, r22
    1478:	82 9f       	mul	r24, r18
    147a:	22 27       	eor	r18, r18
    147c:	b0 0d       	add	r27, r0
    147e:	a1 1d       	adc	r26, r1
    1480:	62 1f       	adc	r22, r18
    1482:	73 9f       	mul	r23, r19
    1484:	b0 0d       	add	r27, r0
    1486:	a1 1d       	adc	r26, r1
    1488:	62 1f       	adc	r22, r18
    148a:	83 9f       	mul	r24, r19
    148c:	a0 0d       	add	r26, r0
    148e:	61 1d       	adc	r22, r1
    1490:	22 1f       	adc	r18, r18
    1492:	74 9f       	mul	r23, r20
    1494:	33 27       	eor	r19, r19
    1496:	a0 0d       	add	r26, r0
    1498:	61 1d       	adc	r22, r1
    149a:	23 1f       	adc	r18, r19
    149c:	84 9f       	mul	r24, r20
    149e:	60 0d       	add	r22, r0
    14a0:	21 1d       	adc	r18, r1
    14a2:	82 2f       	mov	r24, r18
    14a4:	76 2f       	mov	r23, r22
    14a6:	6a 2f       	mov	r22, r26
    14a8:	11 24       	eor	r1, r1
    14aa:	9f 57       	subi	r25, 0x7F	; 127
    14ac:	50 40       	sbci	r21, 0x00	; 0
    14ae:	9a f0       	brmi	.+38     	; 0x14d6 <__mulsf3_pse+0x88>
    14b0:	f1 f0       	breq	.+60     	; 0x14ee <__mulsf3_pse+0xa0>
    14b2:	88 23       	and	r24, r24
    14b4:	4a f0       	brmi	.+18     	; 0x14c8 <__mulsf3_pse+0x7a>
    14b6:	ee 0f       	add	r30, r30
    14b8:	ff 1f       	adc	r31, r31
    14ba:	bb 1f       	adc	r27, r27
    14bc:	66 1f       	adc	r22, r22
    14be:	77 1f       	adc	r23, r23
    14c0:	88 1f       	adc	r24, r24
    14c2:	91 50       	subi	r25, 0x01	; 1
    14c4:	50 40       	sbci	r21, 0x00	; 0
    14c6:	a9 f7       	brne	.-22     	; 0x14b2 <__mulsf3_pse+0x64>
    14c8:	9e 3f       	cpi	r25, 0xFE	; 254
    14ca:	51 05       	cpc	r21, r1
    14cc:	80 f0       	brcs	.+32     	; 0x14ee <__mulsf3_pse+0xa0>
    14ce:	0c 94 ee 07 	jmp	0xfdc	; 0xfdc <__fp_inf>
    14d2:	0c 94 39 08 	jmp	0x1072	; 0x1072 <__fp_szero>
    14d6:	5f 3f       	cpi	r21, 0xFF	; 255
    14d8:	e4 f3       	brlt	.-8      	; 0x14d2 <__mulsf3_pse+0x84>
    14da:	98 3e       	cpi	r25, 0xE8	; 232
    14dc:	d4 f3       	brlt	.-12     	; 0x14d2 <__mulsf3_pse+0x84>
    14de:	86 95       	lsr	r24
    14e0:	77 95       	ror	r23
    14e2:	67 95       	ror	r22
    14e4:	b7 95       	ror	r27
    14e6:	f7 95       	ror	r31
    14e8:	e7 95       	ror	r30
    14ea:	9f 5f       	subi	r25, 0xFF	; 255
    14ec:	c1 f7       	brne	.-16     	; 0x14de <__mulsf3_pse+0x90>
    14ee:	fe 2b       	or	r31, r30
    14f0:	88 0f       	add	r24, r24
    14f2:	91 1d       	adc	r25, r1
    14f4:	96 95       	lsr	r25
    14f6:	87 95       	ror	r24
    14f8:	97 f9       	bld	r25, 7
    14fa:	08 95       	ret

000014fc <__divsf3>:
    14fc:	0e 94 92 0a 	call	0x1524	; 0x1524 <__divsf3x>
    1500:	0c 94 05 08 	jmp	0x100a	; 0x100a <__fp_round>
    1504:	0e 94 fe 07 	call	0xffc	; 0xffc <__fp_pscB>
    1508:	58 f0       	brcs	.+22     	; 0x1520 <__divsf3+0x24>
    150a:	0e 94 f7 07 	call	0xfee	; 0xfee <__fp_pscA>
    150e:	40 f0       	brcs	.+16     	; 0x1520 <__divsf3+0x24>
    1510:	29 f4       	brne	.+10     	; 0x151c <__divsf3+0x20>
    1512:	5f 3f       	cpi	r21, 0xFF	; 255
    1514:	29 f0       	breq	.+10     	; 0x1520 <__divsf3+0x24>
    1516:	0c 94 ee 07 	jmp	0xfdc	; 0xfdc <__fp_inf>
    151a:	51 11       	cpse	r21, r1
    151c:	0c 94 39 08 	jmp	0x1072	; 0x1072 <__fp_szero>
    1520:	0c 94 f4 07 	jmp	0xfe8	; 0xfe8 <__fp_nan>

00001524 <__divsf3x>:
    1524:	0e 94 16 08 	call	0x102c	; 0x102c <__fp_split3>
    1528:	68 f3       	brcs	.-38     	; 0x1504 <__divsf3+0x8>

0000152a <__divsf3_pse>:
    152a:	99 23       	and	r25, r25
    152c:	b1 f3       	breq	.-20     	; 0x151a <__divsf3+0x1e>
    152e:	55 23       	and	r21, r21
    1530:	91 f3       	breq	.-28     	; 0x1516 <__divsf3+0x1a>
    1532:	95 1b       	sub	r25, r21
    1534:	55 0b       	sbc	r21, r21
    1536:	bb 27       	eor	r27, r27
    1538:	aa 27       	eor	r26, r26
    153a:	62 17       	cp	r22, r18
    153c:	73 07       	cpc	r23, r19
    153e:	84 07       	cpc	r24, r20
    1540:	38 f0       	brcs	.+14     	; 0x1550 <__divsf3_pse+0x26>
    1542:	9f 5f       	subi	r25, 0xFF	; 255
    1544:	5f 4f       	sbci	r21, 0xFF	; 255
    1546:	22 0f       	add	r18, r18
    1548:	33 1f       	adc	r19, r19
    154a:	44 1f       	adc	r20, r20
    154c:	aa 1f       	adc	r26, r26
    154e:	a9 f3       	breq	.-22     	; 0x153a <__divsf3_pse+0x10>
    1550:	35 d0       	rcall	.+106    	; 0x15bc <__divsf3_pse+0x92>
    1552:	0e 2e       	mov	r0, r30
    1554:	3a f0       	brmi	.+14     	; 0x1564 <__divsf3_pse+0x3a>
    1556:	e0 e8       	ldi	r30, 0x80	; 128
    1558:	32 d0       	rcall	.+100    	; 0x15be <__divsf3_pse+0x94>
    155a:	91 50       	subi	r25, 0x01	; 1
    155c:	50 40       	sbci	r21, 0x00	; 0
    155e:	e6 95       	lsr	r30
    1560:	00 1c       	adc	r0, r0
    1562:	ca f7       	brpl	.-14     	; 0x1556 <__divsf3_pse+0x2c>
    1564:	2b d0       	rcall	.+86     	; 0x15bc <__divsf3_pse+0x92>
    1566:	fe 2f       	mov	r31, r30
    1568:	29 d0       	rcall	.+82     	; 0x15bc <__divsf3_pse+0x92>
    156a:	66 0f       	add	r22, r22
    156c:	77 1f       	adc	r23, r23
    156e:	88 1f       	adc	r24, r24
    1570:	bb 1f       	adc	r27, r27
    1572:	26 17       	cp	r18, r22
    1574:	37 07       	cpc	r19, r23
    1576:	48 07       	cpc	r20, r24
    1578:	ab 07       	cpc	r26, r27
    157a:	b0 e8       	ldi	r27, 0x80	; 128
    157c:	09 f0       	breq	.+2      	; 0x1580 <__divsf3_pse+0x56>
    157e:	bb 0b       	sbc	r27, r27
    1580:	80 2d       	mov	r24, r0
    1582:	bf 01       	movw	r22, r30
    1584:	ff 27       	eor	r31, r31
    1586:	93 58       	subi	r25, 0x83	; 131
    1588:	5f 4f       	sbci	r21, 0xFF	; 255
    158a:	3a f0       	brmi	.+14     	; 0x159a <__divsf3_pse+0x70>
    158c:	9e 3f       	cpi	r25, 0xFE	; 254
    158e:	51 05       	cpc	r21, r1
    1590:	78 f0       	brcs	.+30     	; 0x15b0 <__divsf3_pse+0x86>
    1592:	0c 94 ee 07 	jmp	0xfdc	; 0xfdc <__fp_inf>
    1596:	0c 94 39 08 	jmp	0x1072	; 0x1072 <__fp_szero>
    159a:	5f 3f       	cpi	r21, 0xFF	; 255
    159c:	e4 f3       	brlt	.-8      	; 0x1596 <__divsf3_pse+0x6c>
    159e:	98 3e       	cpi	r25, 0xE8	; 232
    15a0:	d4 f3       	brlt	.-12     	; 0x1596 <__divsf3_pse+0x6c>
    15a2:	86 95       	lsr	r24
    15a4:	77 95       	ror	r23
    15a6:	67 95       	ror	r22
    15a8:	b7 95       	ror	r27
    15aa:	f7 95       	ror	r31
    15ac:	9f 5f       	subi	r25, 0xFF	; 255
    15ae:	c9 f7       	brne	.-14     	; 0x15a2 <__divsf3_pse+0x78>
    15b0:	88 0f       	add	r24, r24
    15b2:	91 1d       	adc	r25, r1
    15b4:	96 95       	lsr	r25
    15b6:	87 95       	ror	r24
    15b8:	97 f9       	bld	r25, 7
    15ba:	08 95       	ret
    15bc:	e1 e0       	ldi	r30, 0x01	; 1
    15be:	66 0f       	add	r22, r22
    15c0:	77 1f       	adc	r23, r23
    15c2:	88 1f       	adc	r24, r24
    15c4:	bb 1f       	adc	r27, r27
    15c6:	62 17       	cp	r22, r18
    15c8:	73 07       	cpc	r23, r19
    15ca:	84 07       	cpc	r24, r20
    15cc:	ba 07       	cpc	r27, r26
    15ce:	20 f0       	brcs	.+8      	; 0x15d8 <__divsf3_pse+0xae>
    15d0:	62 1b       	sub	r22, r18
    15d2:	73 0b       	sbc	r23, r19
    15d4:	84 0b       	sbc	r24, r20
    15d6:	ba 0b       	sbc	r27, r26
    15d8:	ee 1f       	adc	r30, r30
    15da:	88 f7       	brcc	.-30     	; 0x15be <__divsf3_pse+0x94>
    15dc:	e0 95       	com	r30
    15de:	08 95       	ret

000015e0 <__mulsi3>:
    15e0:	db 01       	movw	r26, r22
    15e2:	8f 93       	push	r24
    15e4:	9f 93       	push	r25
    15e6:	0e 94 25 0b 	call	0x164a	; 0x164a <__muluhisi3>
    15ea:	bf 91       	pop	r27
    15ec:	af 91       	pop	r26
    15ee:	a2 9f       	mul	r26, r18
    15f0:	80 0d       	add	r24, r0
    15f2:	91 1d       	adc	r25, r1
    15f4:	a3 9f       	mul	r26, r19
    15f6:	90 0d       	add	r25, r0
    15f8:	b2 9f       	mul	r27, r18
    15fa:	90 0d       	add	r25, r0
    15fc:	11 24       	eor	r1, r1
    15fe:	08 95       	ret

00001600 <__divmodsi4>:
    1600:	05 2e       	mov	r0, r21
    1602:	97 fb       	bst	r25, 7
    1604:	1e f4       	brtc	.+6      	; 0x160c <__divmodsi4+0xc>
    1606:	00 94       	com	r0
    1608:	0e 94 17 0b 	call	0x162e	; 0x162e <__negsi2>
    160c:	57 fd       	sbrc	r21, 7
    160e:	07 d0       	rcall	.+14     	; 0x161e <__divmodsi4_neg2>
    1610:	0e 94 30 0b 	call	0x1660	; 0x1660 <__udivmodsi4>
    1614:	07 fc       	sbrc	r0, 7
    1616:	03 d0       	rcall	.+6      	; 0x161e <__divmodsi4_neg2>
    1618:	4e f4       	brtc	.+18     	; 0x162c <__divmodsi4_exit>
    161a:	0c 94 17 0b 	jmp	0x162e	; 0x162e <__negsi2>

0000161e <__divmodsi4_neg2>:
    161e:	50 95       	com	r21
    1620:	40 95       	com	r20
    1622:	30 95       	com	r19
    1624:	21 95       	neg	r18
    1626:	3f 4f       	sbci	r19, 0xFF	; 255
    1628:	4f 4f       	sbci	r20, 0xFF	; 255
    162a:	5f 4f       	sbci	r21, 0xFF	; 255

0000162c <__divmodsi4_exit>:
    162c:	08 95       	ret

0000162e <__negsi2>:
    162e:	90 95       	com	r25
    1630:	80 95       	com	r24
    1632:	70 95       	com	r23
    1634:	61 95       	neg	r22
    1636:	7f 4f       	sbci	r23, 0xFF	; 255
    1638:	8f 4f       	sbci	r24, 0xFF	; 255
    163a:	9f 4f       	sbci	r25, 0xFF	; 255
    163c:	08 95       	ret

0000163e <__tablejump2__>:
    163e:	ee 0f       	add	r30, r30
    1640:	ff 1f       	adc	r31, r31
    1642:	05 90       	lpm	r0, Z+
    1644:	f4 91       	lpm	r31, Z
    1646:	e0 2d       	mov	r30, r0
    1648:	09 94       	ijmp

0000164a <__muluhisi3>:
    164a:	0e 94 52 0b 	call	0x16a4	; 0x16a4 <__umulhisi3>
    164e:	a5 9f       	mul	r26, r21
    1650:	90 0d       	add	r25, r0
    1652:	b4 9f       	mul	r27, r20
    1654:	90 0d       	add	r25, r0
    1656:	a4 9f       	mul	r26, r20
    1658:	80 0d       	add	r24, r0
    165a:	91 1d       	adc	r25, r1
    165c:	11 24       	eor	r1, r1
    165e:	08 95       	ret

00001660 <__udivmodsi4>:
    1660:	a1 e2       	ldi	r26, 0x21	; 33
    1662:	1a 2e       	mov	r1, r26
    1664:	aa 1b       	sub	r26, r26
    1666:	bb 1b       	sub	r27, r27
    1668:	fd 01       	movw	r30, r26
    166a:	0d c0       	rjmp	.+26     	; 0x1686 <__udivmodsi4_ep>

0000166c <__udivmodsi4_loop>:
    166c:	aa 1f       	adc	r26, r26
    166e:	bb 1f       	adc	r27, r27
    1670:	ee 1f       	adc	r30, r30
    1672:	ff 1f       	adc	r31, r31
    1674:	a2 17       	cp	r26, r18
    1676:	b3 07       	cpc	r27, r19
    1678:	e4 07       	cpc	r30, r20
    167a:	f5 07       	cpc	r31, r21
    167c:	20 f0       	brcs	.+8      	; 0x1686 <__udivmodsi4_ep>
    167e:	a2 1b       	sub	r26, r18
    1680:	b3 0b       	sbc	r27, r19
    1682:	e4 0b       	sbc	r30, r20
    1684:	f5 0b       	sbc	r31, r21

00001686 <__udivmodsi4_ep>:
    1686:	66 1f       	adc	r22, r22
    1688:	77 1f       	adc	r23, r23
    168a:	88 1f       	adc	r24, r24
    168c:	99 1f       	adc	r25, r25
    168e:	1a 94       	dec	r1
    1690:	69 f7       	brne	.-38     	; 0x166c <__udivmodsi4_loop>
    1692:	60 95       	com	r22
    1694:	70 95       	com	r23
    1696:	80 95       	com	r24
    1698:	90 95       	com	r25
    169a:	9b 01       	movw	r18, r22
    169c:	ac 01       	movw	r20, r24
    169e:	bd 01       	movw	r22, r26
    16a0:	cf 01       	movw	r24, r30
    16a2:	08 95       	ret

000016a4 <__umulhisi3>:
    16a4:	a2 9f       	mul	r26, r18
    16a6:	b0 01       	movw	r22, r0
    16a8:	b3 9f       	mul	r27, r19
    16aa:	c0 01       	movw	r24, r0
    16ac:	a3 9f       	mul	r26, r19
    16ae:	70 0d       	add	r23, r0
    16b0:	81 1d       	adc	r24, r1
    16b2:	11 24       	eor	r1, r1
    16b4:	91 1d       	adc	r25, r1
    16b6:	b2 9f       	mul	r27, r18
    16b8:	70 0d       	add	r23, r0
    16ba:	81 1d       	adc	r24, r1
    16bc:	11 24       	eor	r1, r1
    16be:	91 1d       	adc	r25, r1
    16c0:	08 95       	ret

000016c2 <atoi>:
    16c2:	fc 01       	movw	r30, r24
    16c4:	88 27       	eor	r24, r24
    16c6:	99 27       	eor	r25, r25
    16c8:	e8 94       	clt
    16ca:	21 91       	ld	r18, Z+
    16cc:	20 32       	cpi	r18, 0x20	; 32
    16ce:	e9 f3       	breq	.-6      	; 0x16ca <atoi+0x8>
    16d0:	29 30       	cpi	r18, 0x09	; 9
    16d2:	10 f0       	brcs	.+4      	; 0x16d8 <atoi+0x16>
    16d4:	2e 30       	cpi	r18, 0x0E	; 14
    16d6:	c8 f3       	brcs	.-14     	; 0x16ca <atoi+0x8>
    16d8:	2b 32       	cpi	r18, 0x2B	; 43
    16da:	41 f0       	breq	.+16     	; 0x16ec <atoi+0x2a>
    16dc:	2d 32       	cpi	r18, 0x2D	; 45
    16de:	39 f4       	brne	.+14     	; 0x16ee <atoi+0x2c>
    16e0:	68 94       	set
    16e2:	04 c0       	rjmp	.+8      	; 0x16ec <atoi+0x2a>
    16e4:	0e 94 7f 0b 	call	0x16fe	; 0x16fe <__mulhi_const_10>
    16e8:	82 0f       	add	r24, r18
    16ea:	91 1d       	adc	r25, r1
    16ec:	21 91       	ld	r18, Z+
    16ee:	20 53       	subi	r18, 0x30	; 48
    16f0:	2a 30       	cpi	r18, 0x0A	; 10
    16f2:	c0 f3       	brcs	.-16     	; 0x16e4 <atoi+0x22>
    16f4:	1e f4       	brtc	.+6      	; 0x16fc <atoi+0x3a>
    16f6:	90 95       	com	r25
    16f8:	81 95       	neg	r24
    16fa:	9f 4f       	sbci	r25, 0xFF	; 255
    16fc:	08 95       	ret

000016fe <__mulhi_const_10>:
    16fe:	7a e0       	ldi	r23, 0x0A	; 10
    1700:	97 9f       	mul	r25, r23
    1702:	90 2d       	mov	r25, r0
    1704:	87 9f       	mul	r24, r23
    1706:	80 2d       	mov	r24, r0
    1708:	91 0d       	add	r25, r1
    170a:	11 24       	eor	r1, r1
    170c:	08 95       	ret

0000170e <sprintf>:
    170e:	ae e0       	ldi	r26, 0x0E	; 14
    1710:	b0 e0       	ldi	r27, 0x00	; 0
    1712:	ed e8       	ldi	r30, 0x8D	; 141
    1714:	fb e0       	ldi	r31, 0x0B	; 11
    1716:	0c 94 48 0e 	jmp	0x1c90	; 0x1c90 <__prologue_saves__+0x1c>
    171a:	0d 89       	ldd	r16, Y+21	; 0x15
    171c:	1e 89       	ldd	r17, Y+22	; 0x16
    171e:	86 e0       	ldi	r24, 0x06	; 6
    1720:	8c 83       	std	Y+4, r24	; 0x04
    1722:	1a 83       	std	Y+2, r17	; 0x02
    1724:	09 83       	std	Y+1, r16	; 0x01
    1726:	8f ef       	ldi	r24, 0xFF	; 255
    1728:	9f e7       	ldi	r25, 0x7F	; 127
    172a:	9e 83       	std	Y+6, r25	; 0x06
    172c:	8d 83       	std	Y+5, r24	; 0x05
    172e:	ae 01       	movw	r20, r28
    1730:	47 5e       	subi	r20, 0xE7	; 231
    1732:	5f 4f       	sbci	r21, 0xFF	; 255
    1734:	6f 89       	ldd	r22, Y+23	; 0x17
    1736:	78 8d       	ldd	r23, Y+24	; 0x18
    1738:	ce 01       	movw	r24, r28
    173a:	01 96       	adiw	r24, 0x01	; 1
    173c:	0e 94 a9 0b 	call	0x1752	; 0x1752 <vfprintf>
    1740:	ef 81       	ldd	r30, Y+7	; 0x07
    1742:	f8 85       	ldd	r31, Y+8	; 0x08
    1744:	e0 0f       	add	r30, r16
    1746:	f1 1f       	adc	r31, r17
    1748:	10 82       	st	Z, r1
    174a:	2e 96       	adiw	r28, 0x0e	; 14
    174c:	e4 e0       	ldi	r30, 0x04	; 4
    174e:	0c 94 64 0e 	jmp	0x1cc8	; 0x1cc8 <__epilogue_restores__+0x1c>

00001752 <vfprintf>:
    1752:	ab e0       	ldi	r26, 0x0B	; 11
    1754:	b0 e0       	ldi	r27, 0x00	; 0
    1756:	ef ea       	ldi	r30, 0xAF	; 175
    1758:	fb e0       	ldi	r31, 0x0B	; 11
    175a:	0c 94 3a 0e 	jmp	0x1c74	; 0x1c74 <__prologue_saves__>
    175e:	6c 01       	movw	r12, r24
    1760:	7b 01       	movw	r14, r22
    1762:	8a 01       	movw	r16, r20
    1764:	fc 01       	movw	r30, r24
    1766:	17 82       	std	Z+7, r1	; 0x07
    1768:	16 82       	std	Z+6, r1	; 0x06
    176a:	83 81       	ldd	r24, Z+3	; 0x03
    176c:	81 ff       	sbrs	r24, 1
    176e:	cc c1       	rjmp	.+920    	; 0x1b08 <vfprintf+0x3b6>
    1770:	ce 01       	movw	r24, r28
    1772:	01 96       	adiw	r24, 0x01	; 1
    1774:	3c 01       	movw	r6, r24
    1776:	f6 01       	movw	r30, r12
    1778:	93 81       	ldd	r25, Z+3	; 0x03
    177a:	f7 01       	movw	r30, r14
    177c:	93 fd       	sbrc	r25, 3
    177e:	85 91       	lpm	r24, Z+
    1780:	93 ff       	sbrs	r25, 3
    1782:	81 91       	ld	r24, Z+
    1784:	7f 01       	movw	r14, r30
    1786:	88 23       	and	r24, r24
    1788:	09 f4       	brne	.+2      	; 0x178c <vfprintf+0x3a>
    178a:	ba c1       	rjmp	.+884    	; 0x1b00 <vfprintf+0x3ae>
    178c:	85 32       	cpi	r24, 0x25	; 37
    178e:	39 f4       	brne	.+14     	; 0x179e <vfprintf+0x4c>
    1790:	93 fd       	sbrc	r25, 3
    1792:	85 91       	lpm	r24, Z+
    1794:	93 ff       	sbrs	r25, 3
    1796:	81 91       	ld	r24, Z+
    1798:	7f 01       	movw	r14, r30
    179a:	85 32       	cpi	r24, 0x25	; 37
    179c:	29 f4       	brne	.+10     	; 0x17a8 <vfprintf+0x56>
    179e:	b6 01       	movw	r22, r12
    17a0:	90 e0       	ldi	r25, 0x00	; 0
    17a2:	0e 94 a0 0d 	call	0x1b40	; 0x1b40 <fputc>
    17a6:	e7 cf       	rjmp	.-50     	; 0x1776 <vfprintf+0x24>
    17a8:	91 2c       	mov	r9, r1
    17aa:	21 2c       	mov	r2, r1
    17ac:	31 2c       	mov	r3, r1
    17ae:	ff e1       	ldi	r31, 0x1F	; 31
    17b0:	f3 15       	cp	r31, r3
    17b2:	d8 f0       	brcs	.+54     	; 0x17ea <vfprintf+0x98>
    17b4:	8b 32       	cpi	r24, 0x2B	; 43
    17b6:	79 f0       	breq	.+30     	; 0x17d6 <vfprintf+0x84>
    17b8:	38 f4       	brcc	.+14     	; 0x17c8 <vfprintf+0x76>
    17ba:	80 32       	cpi	r24, 0x20	; 32
    17bc:	79 f0       	breq	.+30     	; 0x17dc <vfprintf+0x8a>
    17be:	83 32       	cpi	r24, 0x23	; 35
    17c0:	a1 f4       	brne	.+40     	; 0x17ea <vfprintf+0x98>
    17c2:	23 2d       	mov	r18, r3
    17c4:	20 61       	ori	r18, 0x10	; 16
    17c6:	1d c0       	rjmp	.+58     	; 0x1802 <vfprintf+0xb0>
    17c8:	8d 32       	cpi	r24, 0x2D	; 45
    17ca:	61 f0       	breq	.+24     	; 0x17e4 <vfprintf+0x92>
    17cc:	80 33       	cpi	r24, 0x30	; 48
    17ce:	69 f4       	brne	.+26     	; 0x17ea <vfprintf+0x98>
    17d0:	23 2d       	mov	r18, r3
    17d2:	21 60       	ori	r18, 0x01	; 1
    17d4:	16 c0       	rjmp	.+44     	; 0x1802 <vfprintf+0xb0>
    17d6:	83 2d       	mov	r24, r3
    17d8:	82 60       	ori	r24, 0x02	; 2
    17da:	38 2e       	mov	r3, r24
    17dc:	e3 2d       	mov	r30, r3
    17de:	e4 60       	ori	r30, 0x04	; 4
    17e0:	3e 2e       	mov	r3, r30
    17e2:	2a c0       	rjmp	.+84     	; 0x1838 <vfprintf+0xe6>
    17e4:	f3 2d       	mov	r31, r3
    17e6:	f8 60       	ori	r31, 0x08	; 8
    17e8:	1d c0       	rjmp	.+58     	; 0x1824 <vfprintf+0xd2>
    17ea:	37 fc       	sbrc	r3, 7
    17ec:	2d c0       	rjmp	.+90     	; 0x1848 <vfprintf+0xf6>
    17ee:	20 ed       	ldi	r18, 0xD0	; 208
    17f0:	28 0f       	add	r18, r24
    17f2:	2a 30       	cpi	r18, 0x0A	; 10
    17f4:	40 f0       	brcs	.+16     	; 0x1806 <vfprintf+0xb4>
    17f6:	8e 32       	cpi	r24, 0x2E	; 46
    17f8:	b9 f4       	brne	.+46     	; 0x1828 <vfprintf+0xd6>
    17fa:	36 fc       	sbrc	r3, 6
    17fc:	81 c1       	rjmp	.+770    	; 0x1b00 <vfprintf+0x3ae>
    17fe:	23 2d       	mov	r18, r3
    1800:	20 64       	ori	r18, 0x40	; 64
    1802:	32 2e       	mov	r3, r18
    1804:	19 c0       	rjmp	.+50     	; 0x1838 <vfprintf+0xe6>
    1806:	36 fe       	sbrs	r3, 6
    1808:	06 c0       	rjmp	.+12     	; 0x1816 <vfprintf+0xc4>
    180a:	8a e0       	ldi	r24, 0x0A	; 10
    180c:	98 9e       	mul	r9, r24
    180e:	20 0d       	add	r18, r0
    1810:	11 24       	eor	r1, r1
    1812:	92 2e       	mov	r9, r18
    1814:	11 c0       	rjmp	.+34     	; 0x1838 <vfprintf+0xe6>
    1816:	ea e0       	ldi	r30, 0x0A	; 10
    1818:	2e 9e       	mul	r2, r30
    181a:	20 0d       	add	r18, r0
    181c:	11 24       	eor	r1, r1
    181e:	22 2e       	mov	r2, r18
    1820:	f3 2d       	mov	r31, r3
    1822:	f0 62       	ori	r31, 0x20	; 32
    1824:	3f 2e       	mov	r3, r31
    1826:	08 c0       	rjmp	.+16     	; 0x1838 <vfprintf+0xe6>
    1828:	8c 36       	cpi	r24, 0x6C	; 108
    182a:	21 f4       	brne	.+8      	; 0x1834 <vfprintf+0xe2>
    182c:	83 2d       	mov	r24, r3
    182e:	80 68       	ori	r24, 0x80	; 128
    1830:	38 2e       	mov	r3, r24
    1832:	02 c0       	rjmp	.+4      	; 0x1838 <vfprintf+0xe6>
    1834:	88 36       	cpi	r24, 0x68	; 104
    1836:	41 f4       	brne	.+16     	; 0x1848 <vfprintf+0xf6>
    1838:	f7 01       	movw	r30, r14
    183a:	93 fd       	sbrc	r25, 3
    183c:	85 91       	lpm	r24, Z+
    183e:	93 ff       	sbrs	r25, 3
    1840:	81 91       	ld	r24, Z+
    1842:	7f 01       	movw	r14, r30
    1844:	81 11       	cpse	r24, r1
    1846:	b3 cf       	rjmp	.-154    	; 0x17ae <vfprintf+0x5c>
    1848:	98 2f       	mov	r25, r24
    184a:	9f 7d       	andi	r25, 0xDF	; 223
    184c:	95 54       	subi	r25, 0x45	; 69
    184e:	93 30       	cpi	r25, 0x03	; 3
    1850:	28 f4       	brcc	.+10     	; 0x185c <vfprintf+0x10a>
    1852:	0c 5f       	subi	r16, 0xFC	; 252
    1854:	1f 4f       	sbci	r17, 0xFF	; 255
    1856:	9f e3       	ldi	r25, 0x3F	; 63
    1858:	99 83       	std	Y+1, r25	; 0x01
    185a:	0d c0       	rjmp	.+26     	; 0x1876 <vfprintf+0x124>
    185c:	83 36       	cpi	r24, 0x63	; 99
    185e:	31 f0       	breq	.+12     	; 0x186c <vfprintf+0x11a>
    1860:	83 37       	cpi	r24, 0x73	; 115
    1862:	71 f0       	breq	.+28     	; 0x1880 <vfprintf+0x12e>
    1864:	83 35       	cpi	r24, 0x53	; 83
    1866:	09 f0       	breq	.+2      	; 0x186a <vfprintf+0x118>
    1868:	59 c0       	rjmp	.+178    	; 0x191c <vfprintf+0x1ca>
    186a:	21 c0       	rjmp	.+66     	; 0x18ae <vfprintf+0x15c>
    186c:	f8 01       	movw	r30, r16
    186e:	80 81       	ld	r24, Z
    1870:	89 83       	std	Y+1, r24	; 0x01
    1872:	0e 5f       	subi	r16, 0xFE	; 254
    1874:	1f 4f       	sbci	r17, 0xFF	; 255
    1876:	88 24       	eor	r8, r8
    1878:	83 94       	inc	r8
    187a:	91 2c       	mov	r9, r1
    187c:	53 01       	movw	r10, r6
    187e:	13 c0       	rjmp	.+38     	; 0x18a6 <vfprintf+0x154>
    1880:	28 01       	movw	r4, r16
    1882:	f2 e0       	ldi	r31, 0x02	; 2
    1884:	4f 0e       	add	r4, r31
    1886:	51 1c       	adc	r5, r1
    1888:	f8 01       	movw	r30, r16
    188a:	a0 80       	ld	r10, Z
    188c:	b1 80       	ldd	r11, Z+1	; 0x01
    188e:	36 fe       	sbrs	r3, 6
    1890:	03 c0       	rjmp	.+6      	; 0x1898 <vfprintf+0x146>
    1892:	69 2d       	mov	r22, r9
    1894:	70 e0       	ldi	r23, 0x00	; 0
    1896:	02 c0       	rjmp	.+4      	; 0x189c <vfprintf+0x14a>
    1898:	6f ef       	ldi	r22, 0xFF	; 255
    189a:	7f ef       	ldi	r23, 0xFF	; 255
    189c:	c5 01       	movw	r24, r10
    189e:	0e 94 95 0d 	call	0x1b2a	; 0x1b2a <strnlen>
    18a2:	4c 01       	movw	r8, r24
    18a4:	82 01       	movw	r16, r4
    18a6:	f3 2d       	mov	r31, r3
    18a8:	ff 77       	andi	r31, 0x7F	; 127
    18aa:	3f 2e       	mov	r3, r31
    18ac:	16 c0       	rjmp	.+44     	; 0x18da <vfprintf+0x188>
    18ae:	28 01       	movw	r4, r16
    18b0:	22 e0       	ldi	r18, 0x02	; 2
    18b2:	42 0e       	add	r4, r18
    18b4:	51 1c       	adc	r5, r1
    18b6:	f8 01       	movw	r30, r16
    18b8:	a0 80       	ld	r10, Z
    18ba:	b1 80       	ldd	r11, Z+1	; 0x01
    18bc:	36 fe       	sbrs	r3, 6
    18be:	03 c0       	rjmp	.+6      	; 0x18c6 <vfprintf+0x174>
    18c0:	69 2d       	mov	r22, r9
    18c2:	70 e0       	ldi	r23, 0x00	; 0
    18c4:	02 c0       	rjmp	.+4      	; 0x18ca <vfprintf+0x178>
    18c6:	6f ef       	ldi	r22, 0xFF	; 255
    18c8:	7f ef       	ldi	r23, 0xFF	; 255
    18ca:	c5 01       	movw	r24, r10
    18cc:	0e 94 8a 0d 	call	0x1b14	; 0x1b14 <strnlen_P>
    18d0:	4c 01       	movw	r8, r24
    18d2:	f3 2d       	mov	r31, r3
    18d4:	f0 68       	ori	r31, 0x80	; 128
    18d6:	3f 2e       	mov	r3, r31
    18d8:	82 01       	movw	r16, r4
    18da:	33 fc       	sbrc	r3, 3
    18dc:	1b c0       	rjmp	.+54     	; 0x1914 <vfprintf+0x1c2>
    18de:	82 2d       	mov	r24, r2
    18e0:	90 e0       	ldi	r25, 0x00	; 0
    18e2:	88 16       	cp	r8, r24
    18e4:	99 06       	cpc	r9, r25
    18e6:	b0 f4       	brcc	.+44     	; 0x1914 <vfprintf+0x1c2>
    18e8:	b6 01       	movw	r22, r12
    18ea:	80 e2       	ldi	r24, 0x20	; 32
    18ec:	90 e0       	ldi	r25, 0x00	; 0
    18ee:	0e 94 a0 0d 	call	0x1b40	; 0x1b40 <fputc>
    18f2:	2a 94       	dec	r2
    18f4:	f4 cf       	rjmp	.-24     	; 0x18de <vfprintf+0x18c>
    18f6:	f5 01       	movw	r30, r10
    18f8:	37 fc       	sbrc	r3, 7
    18fa:	85 91       	lpm	r24, Z+
    18fc:	37 fe       	sbrs	r3, 7
    18fe:	81 91       	ld	r24, Z+
    1900:	5f 01       	movw	r10, r30
    1902:	b6 01       	movw	r22, r12
    1904:	90 e0       	ldi	r25, 0x00	; 0
    1906:	0e 94 a0 0d 	call	0x1b40	; 0x1b40 <fputc>
    190a:	21 10       	cpse	r2, r1
    190c:	2a 94       	dec	r2
    190e:	21 e0       	ldi	r18, 0x01	; 1
    1910:	82 1a       	sub	r8, r18
    1912:	91 08       	sbc	r9, r1
    1914:	81 14       	cp	r8, r1
    1916:	91 04       	cpc	r9, r1
    1918:	71 f7       	brne	.-36     	; 0x18f6 <vfprintf+0x1a4>
    191a:	e8 c0       	rjmp	.+464    	; 0x1aec <vfprintf+0x39a>
    191c:	84 36       	cpi	r24, 0x64	; 100
    191e:	11 f0       	breq	.+4      	; 0x1924 <vfprintf+0x1d2>
    1920:	89 36       	cpi	r24, 0x69	; 105
    1922:	41 f5       	brne	.+80     	; 0x1974 <vfprintf+0x222>
    1924:	f8 01       	movw	r30, r16
    1926:	37 fe       	sbrs	r3, 7
    1928:	07 c0       	rjmp	.+14     	; 0x1938 <vfprintf+0x1e6>
    192a:	60 81       	ld	r22, Z
    192c:	71 81       	ldd	r23, Z+1	; 0x01
    192e:	82 81       	ldd	r24, Z+2	; 0x02
    1930:	93 81       	ldd	r25, Z+3	; 0x03
    1932:	0c 5f       	subi	r16, 0xFC	; 252
    1934:	1f 4f       	sbci	r17, 0xFF	; 255
    1936:	08 c0       	rjmp	.+16     	; 0x1948 <vfprintf+0x1f6>
    1938:	60 81       	ld	r22, Z
    193a:	71 81       	ldd	r23, Z+1	; 0x01
    193c:	07 2e       	mov	r0, r23
    193e:	00 0c       	add	r0, r0
    1940:	88 0b       	sbc	r24, r24
    1942:	99 0b       	sbc	r25, r25
    1944:	0e 5f       	subi	r16, 0xFE	; 254
    1946:	1f 4f       	sbci	r17, 0xFF	; 255
    1948:	f3 2d       	mov	r31, r3
    194a:	ff 76       	andi	r31, 0x6F	; 111
    194c:	3f 2e       	mov	r3, r31
    194e:	97 ff       	sbrs	r25, 7
    1950:	09 c0       	rjmp	.+18     	; 0x1964 <vfprintf+0x212>
    1952:	90 95       	com	r25
    1954:	80 95       	com	r24
    1956:	70 95       	com	r23
    1958:	61 95       	neg	r22
    195a:	7f 4f       	sbci	r23, 0xFF	; 255
    195c:	8f 4f       	sbci	r24, 0xFF	; 255
    195e:	9f 4f       	sbci	r25, 0xFF	; 255
    1960:	f0 68       	ori	r31, 0x80	; 128
    1962:	3f 2e       	mov	r3, r31
    1964:	2a e0       	ldi	r18, 0x0A	; 10
    1966:	30 e0       	ldi	r19, 0x00	; 0
    1968:	a3 01       	movw	r20, r6
    196a:	0e 94 dc 0d 	call	0x1bb8	; 0x1bb8 <__ultoa_invert>
    196e:	88 2e       	mov	r8, r24
    1970:	86 18       	sub	r8, r6
    1972:	45 c0       	rjmp	.+138    	; 0x19fe <vfprintf+0x2ac>
    1974:	85 37       	cpi	r24, 0x75	; 117
    1976:	31 f4       	brne	.+12     	; 0x1984 <vfprintf+0x232>
    1978:	23 2d       	mov	r18, r3
    197a:	2f 7e       	andi	r18, 0xEF	; 239
    197c:	b2 2e       	mov	r11, r18
    197e:	2a e0       	ldi	r18, 0x0A	; 10
    1980:	30 e0       	ldi	r19, 0x00	; 0
    1982:	25 c0       	rjmp	.+74     	; 0x19ce <vfprintf+0x27c>
    1984:	93 2d       	mov	r25, r3
    1986:	99 7f       	andi	r25, 0xF9	; 249
    1988:	b9 2e       	mov	r11, r25
    198a:	8f 36       	cpi	r24, 0x6F	; 111
    198c:	c1 f0       	breq	.+48     	; 0x19be <vfprintf+0x26c>
    198e:	18 f4       	brcc	.+6      	; 0x1996 <vfprintf+0x244>
    1990:	88 35       	cpi	r24, 0x58	; 88
    1992:	79 f0       	breq	.+30     	; 0x19b2 <vfprintf+0x260>
    1994:	b5 c0       	rjmp	.+362    	; 0x1b00 <vfprintf+0x3ae>
    1996:	80 37       	cpi	r24, 0x70	; 112
    1998:	19 f0       	breq	.+6      	; 0x19a0 <vfprintf+0x24e>
    199a:	88 37       	cpi	r24, 0x78	; 120
    199c:	21 f0       	breq	.+8      	; 0x19a6 <vfprintf+0x254>
    199e:	b0 c0       	rjmp	.+352    	; 0x1b00 <vfprintf+0x3ae>
    19a0:	e9 2f       	mov	r30, r25
    19a2:	e0 61       	ori	r30, 0x10	; 16
    19a4:	be 2e       	mov	r11, r30
    19a6:	b4 fe       	sbrs	r11, 4
    19a8:	0d c0       	rjmp	.+26     	; 0x19c4 <vfprintf+0x272>
    19aa:	fb 2d       	mov	r31, r11
    19ac:	f4 60       	ori	r31, 0x04	; 4
    19ae:	bf 2e       	mov	r11, r31
    19b0:	09 c0       	rjmp	.+18     	; 0x19c4 <vfprintf+0x272>
    19b2:	34 fe       	sbrs	r3, 4
    19b4:	0a c0       	rjmp	.+20     	; 0x19ca <vfprintf+0x278>
    19b6:	29 2f       	mov	r18, r25
    19b8:	26 60       	ori	r18, 0x06	; 6
    19ba:	b2 2e       	mov	r11, r18
    19bc:	06 c0       	rjmp	.+12     	; 0x19ca <vfprintf+0x278>
    19be:	28 e0       	ldi	r18, 0x08	; 8
    19c0:	30 e0       	ldi	r19, 0x00	; 0
    19c2:	05 c0       	rjmp	.+10     	; 0x19ce <vfprintf+0x27c>
    19c4:	20 e1       	ldi	r18, 0x10	; 16
    19c6:	30 e0       	ldi	r19, 0x00	; 0
    19c8:	02 c0       	rjmp	.+4      	; 0x19ce <vfprintf+0x27c>
    19ca:	20 e1       	ldi	r18, 0x10	; 16
    19cc:	32 e0       	ldi	r19, 0x02	; 2
    19ce:	f8 01       	movw	r30, r16
    19d0:	b7 fe       	sbrs	r11, 7
    19d2:	07 c0       	rjmp	.+14     	; 0x19e2 <vfprintf+0x290>
    19d4:	60 81       	ld	r22, Z
    19d6:	71 81       	ldd	r23, Z+1	; 0x01
    19d8:	82 81       	ldd	r24, Z+2	; 0x02
    19da:	93 81       	ldd	r25, Z+3	; 0x03
    19dc:	0c 5f       	subi	r16, 0xFC	; 252
    19de:	1f 4f       	sbci	r17, 0xFF	; 255
    19e0:	06 c0       	rjmp	.+12     	; 0x19ee <vfprintf+0x29c>
    19e2:	60 81       	ld	r22, Z
    19e4:	71 81       	ldd	r23, Z+1	; 0x01
    19e6:	80 e0       	ldi	r24, 0x00	; 0
    19e8:	90 e0       	ldi	r25, 0x00	; 0
    19ea:	0e 5f       	subi	r16, 0xFE	; 254
    19ec:	1f 4f       	sbci	r17, 0xFF	; 255
    19ee:	a3 01       	movw	r20, r6
    19f0:	0e 94 dc 0d 	call	0x1bb8	; 0x1bb8 <__ultoa_invert>
    19f4:	88 2e       	mov	r8, r24
    19f6:	86 18       	sub	r8, r6
    19f8:	fb 2d       	mov	r31, r11
    19fa:	ff 77       	andi	r31, 0x7F	; 127
    19fc:	3f 2e       	mov	r3, r31
    19fe:	36 fe       	sbrs	r3, 6
    1a00:	0d c0       	rjmp	.+26     	; 0x1a1c <vfprintf+0x2ca>
    1a02:	23 2d       	mov	r18, r3
    1a04:	2e 7f       	andi	r18, 0xFE	; 254
    1a06:	a2 2e       	mov	r10, r18
    1a08:	89 14       	cp	r8, r9
    1a0a:	58 f4       	brcc	.+22     	; 0x1a22 <vfprintf+0x2d0>
    1a0c:	34 fe       	sbrs	r3, 4
    1a0e:	0b c0       	rjmp	.+22     	; 0x1a26 <vfprintf+0x2d4>
    1a10:	32 fc       	sbrc	r3, 2
    1a12:	09 c0       	rjmp	.+18     	; 0x1a26 <vfprintf+0x2d4>
    1a14:	83 2d       	mov	r24, r3
    1a16:	8e 7e       	andi	r24, 0xEE	; 238
    1a18:	a8 2e       	mov	r10, r24
    1a1a:	05 c0       	rjmp	.+10     	; 0x1a26 <vfprintf+0x2d4>
    1a1c:	b8 2c       	mov	r11, r8
    1a1e:	a3 2c       	mov	r10, r3
    1a20:	03 c0       	rjmp	.+6      	; 0x1a28 <vfprintf+0x2d6>
    1a22:	b8 2c       	mov	r11, r8
    1a24:	01 c0       	rjmp	.+2      	; 0x1a28 <vfprintf+0x2d6>
    1a26:	b9 2c       	mov	r11, r9
    1a28:	a4 fe       	sbrs	r10, 4
    1a2a:	0f c0       	rjmp	.+30     	; 0x1a4a <vfprintf+0x2f8>
    1a2c:	fe 01       	movw	r30, r28
    1a2e:	e8 0d       	add	r30, r8
    1a30:	f1 1d       	adc	r31, r1
    1a32:	80 81       	ld	r24, Z
    1a34:	80 33       	cpi	r24, 0x30	; 48
    1a36:	21 f4       	brne	.+8      	; 0x1a40 <vfprintf+0x2ee>
    1a38:	9a 2d       	mov	r25, r10
    1a3a:	99 7e       	andi	r25, 0xE9	; 233
    1a3c:	a9 2e       	mov	r10, r25
    1a3e:	09 c0       	rjmp	.+18     	; 0x1a52 <vfprintf+0x300>
    1a40:	a2 fe       	sbrs	r10, 2
    1a42:	06 c0       	rjmp	.+12     	; 0x1a50 <vfprintf+0x2fe>
    1a44:	b3 94       	inc	r11
    1a46:	b3 94       	inc	r11
    1a48:	04 c0       	rjmp	.+8      	; 0x1a52 <vfprintf+0x300>
    1a4a:	8a 2d       	mov	r24, r10
    1a4c:	86 78       	andi	r24, 0x86	; 134
    1a4e:	09 f0       	breq	.+2      	; 0x1a52 <vfprintf+0x300>
    1a50:	b3 94       	inc	r11
    1a52:	a3 fc       	sbrc	r10, 3
    1a54:	11 c0       	rjmp	.+34     	; 0x1a78 <vfprintf+0x326>
    1a56:	a0 fe       	sbrs	r10, 0
    1a58:	06 c0       	rjmp	.+12     	; 0x1a66 <vfprintf+0x314>
    1a5a:	b2 14       	cp	r11, r2
    1a5c:	88 f4       	brcc	.+34     	; 0x1a80 <vfprintf+0x32e>
    1a5e:	28 0c       	add	r2, r8
    1a60:	92 2c       	mov	r9, r2
    1a62:	9b 18       	sub	r9, r11
    1a64:	0e c0       	rjmp	.+28     	; 0x1a82 <vfprintf+0x330>
    1a66:	b2 14       	cp	r11, r2
    1a68:	60 f4       	brcc	.+24     	; 0x1a82 <vfprintf+0x330>
    1a6a:	b6 01       	movw	r22, r12
    1a6c:	80 e2       	ldi	r24, 0x20	; 32
    1a6e:	90 e0       	ldi	r25, 0x00	; 0
    1a70:	0e 94 a0 0d 	call	0x1b40	; 0x1b40 <fputc>
    1a74:	b3 94       	inc	r11
    1a76:	f7 cf       	rjmp	.-18     	; 0x1a66 <vfprintf+0x314>
    1a78:	b2 14       	cp	r11, r2
    1a7a:	18 f4       	brcc	.+6      	; 0x1a82 <vfprintf+0x330>
    1a7c:	2b 18       	sub	r2, r11
    1a7e:	02 c0       	rjmp	.+4      	; 0x1a84 <vfprintf+0x332>
    1a80:	98 2c       	mov	r9, r8
    1a82:	21 2c       	mov	r2, r1
    1a84:	a4 fe       	sbrs	r10, 4
    1a86:	10 c0       	rjmp	.+32     	; 0x1aa8 <vfprintf+0x356>
    1a88:	b6 01       	movw	r22, r12
    1a8a:	80 e3       	ldi	r24, 0x30	; 48
    1a8c:	90 e0       	ldi	r25, 0x00	; 0
    1a8e:	0e 94 a0 0d 	call	0x1b40	; 0x1b40 <fputc>
    1a92:	a2 fe       	sbrs	r10, 2
    1a94:	17 c0       	rjmp	.+46     	; 0x1ac4 <vfprintf+0x372>
    1a96:	a1 fc       	sbrc	r10, 1
    1a98:	03 c0       	rjmp	.+6      	; 0x1aa0 <vfprintf+0x34e>
    1a9a:	88 e7       	ldi	r24, 0x78	; 120
    1a9c:	90 e0       	ldi	r25, 0x00	; 0
    1a9e:	02 c0       	rjmp	.+4      	; 0x1aa4 <vfprintf+0x352>
    1aa0:	88 e5       	ldi	r24, 0x58	; 88
    1aa2:	90 e0       	ldi	r25, 0x00	; 0
    1aa4:	b6 01       	movw	r22, r12
    1aa6:	0c c0       	rjmp	.+24     	; 0x1ac0 <vfprintf+0x36e>
    1aa8:	8a 2d       	mov	r24, r10
    1aaa:	86 78       	andi	r24, 0x86	; 134
    1aac:	59 f0       	breq	.+22     	; 0x1ac4 <vfprintf+0x372>
    1aae:	a1 fe       	sbrs	r10, 1
    1ab0:	02 c0       	rjmp	.+4      	; 0x1ab6 <vfprintf+0x364>
    1ab2:	8b e2       	ldi	r24, 0x2B	; 43
    1ab4:	01 c0       	rjmp	.+2      	; 0x1ab8 <vfprintf+0x366>
    1ab6:	80 e2       	ldi	r24, 0x20	; 32
    1ab8:	a7 fc       	sbrc	r10, 7
    1aba:	8d e2       	ldi	r24, 0x2D	; 45
    1abc:	b6 01       	movw	r22, r12
    1abe:	90 e0       	ldi	r25, 0x00	; 0
    1ac0:	0e 94 a0 0d 	call	0x1b40	; 0x1b40 <fputc>
    1ac4:	89 14       	cp	r8, r9
    1ac6:	38 f4       	brcc	.+14     	; 0x1ad6 <vfprintf+0x384>
    1ac8:	b6 01       	movw	r22, r12
    1aca:	80 e3       	ldi	r24, 0x30	; 48
    1acc:	90 e0       	ldi	r25, 0x00	; 0
    1ace:	0e 94 a0 0d 	call	0x1b40	; 0x1b40 <fputc>
    1ad2:	9a 94       	dec	r9
    1ad4:	f7 cf       	rjmp	.-18     	; 0x1ac4 <vfprintf+0x372>
    1ad6:	8a 94       	dec	r8
    1ad8:	f3 01       	movw	r30, r6
    1ada:	e8 0d       	add	r30, r8
    1adc:	f1 1d       	adc	r31, r1
    1ade:	80 81       	ld	r24, Z
    1ae0:	b6 01       	movw	r22, r12
    1ae2:	90 e0       	ldi	r25, 0x00	; 0
    1ae4:	0e 94 a0 0d 	call	0x1b40	; 0x1b40 <fputc>
    1ae8:	81 10       	cpse	r8, r1
    1aea:	f5 cf       	rjmp	.-22     	; 0x1ad6 <vfprintf+0x384>
    1aec:	22 20       	and	r2, r2
    1aee:	09 f4       	brne	.+2      	; 0x1af2 <vfprintf+0x3a0>
    1af0:	42 ce       	rjmp	.-892    	; 0x1776 <vfprintf+0x24>
    1af2:	b6 01       	movw	r22, r12
    1af4:	80 e2       	ldi	r24, 0x20	; 32
    1af6:	90 e0       	ldi	r25, 0x00	; 0
    1af8:	0e 94 a0 0d 	call	0x1b40	; 0x1b40 <fputc>
    1afc:	2a 94       	dec	r2
    1afe:	f6 cf       	rjmp	.-20     	; 0x1aec <vfprintf+0x39a>
    1b00:	f6 01       	movw	r30, r12
    1b02:	86 81       	ldd	r24, Z+6	; 0x06
    1b04:	97 81       	ldd	r25, Z+7	; 0x07
    1b06:	02 c0       	rjmp	.+4      	; 0x1b0c <vfprintf+0x3ba>
    1b08:	8f ef       	ldi	r24, 0xFF	; 255
    1b0a:	9f ef       	ldi	r25, 0xFF	; 255
    1b0c:	2b 96       	adiw	r28, 0x0b	; 11
    1b0e:	e2 e1       	ldi	r30, 0x12	; 18
    1b10:	0c 94 56 0e 	jmp	0x1cac	; 0x1cac <__epilogue_restores__>

00001b14 <strnlen_P>:
    1b14:	fc 01       	movw	r30, r24
    1b16:	05 90       	lpm	r0, Z+
    1b18:	61 50       	subi	r22, 0x01	; 1
    1b1a:	70 40       	sbci	r23, 0x00	; 0
    1b1c:	01 10       	cpse	r0, r1
    1b1e:	d8 f7       	brcc	.-10     	; 0x1b16 <strnlen_P+0x2>
    1b20:	80 95       	com	r24
    1b22:	90 95       	com	r25
    1b24:	8e 0f       	add	r24, r30
    1b26:	9f 1f       	adc	r25, r31
    1b28:	08 95       	ret

00001b2a <strnlen>:
    1b2a:	fc 01       	movw	r30, r24
    1b2c:	61 50       	subi	r22, 0x01	; 1
    1b2e:	70 40       	sbci	r23, 0x00	; 0
    1b30:	01 90       	ld	r0, Z+
    1b32:	01 10       	cpse	r0, r1
    1b34:	d8 f7       	brcc	.-10     	; 0x1b2c <strnlen+0x2>
    1b36:	80 95       	com	r24
    1b38:	90 95       	com	r25
    1b3a:	8e 0f       	add	r24, r30
    1b3c:	9f 1f       	adc	r25, r31
    1b3e:	08 95       	ret

00001b40 <fputc>:
    1b40:	0f 93       	push	r16
    1b42:	1f 93       	push	r17
    1b44:	cf 93       	push	r28
    1b46:	df 93       	push	r29
    1b48:	fb 01       	movw	r30, r22
    1b4a:	23 81       	ldd	r18, Z+3	; 0x03
    1b4c:	21 fd       	sbrc	r18, 1
    1b4e:	03 c0       	rjmp	.+6      	; 0x1b56 <fputc+0x16>
    1b50:	8f ef       	ldi	r24, 0xFF	; 255
    1b52:	9f ef       	ldi	r25, 0xFF	; 255
    1b54:	2c c0       	rjmp	.+88     	; 0x1bae <fputc+0x6e>
    1b56:	22 ff       	sbrs	r18, 2
    1b58:	16 c0       	rjmp	.+44     	; 0x1b86 <fputc+0x46>
    1b5a:	46 81       	ldd	r20, Z+6	; 0x06
    1b5c:	57 81       	ldd	r21, Z+7	; 0x07
    1b5e:	24 81       	ldd	r18, Z+4	; 0x04
    1b60:	35 81       	ldd	r19, Z+5	; 0x05
    1b62:	42 17       	cp	r20, r18
    1b64:	53 07       	cpc	r21, r19
    1b66:	44 f4       	brge	.+16     	; 0x1b78 <fputc+0x38>
    1b68:	a0 81       	ld	r26, Z
    1b6a:	b1 81       	ldd	r27, Z+1	; 0x01
    1b6c:	9d 01       	movw	r18, r26
    1b6e:	2f 5f       	subi	r18, 0xFF	; 255
    1b70:	3f 4f       	sbci	r19, 0xFF	; 255
    1b72:	31 83       	std	Z+1, r19	; 0x01
    1b74:	20 83       	st	Z, r18
    1b76:	8c 93       	st	X, r24
    1b78:	26 81       	ldd	r18, Z+6	; 0x06
    1b7a:	37 81       	ldd	r19, Z+7	; 0x07
    1b7c:	2f 5f       	subi	r18, 0xFF	; 255
    1b7e:	3f 4f       	sbci	r19, 0xFF	; 255
    1b80:	37 83       	std	Z+7, r19	; 0x07
    1b82:	26 83       	std	Z+6, r18	; 0x06
    1b84:	14 c0       	rjmp	.+40     	; 0x1bae <fputc+0x6e>
    1b86:	8b 01       	movw	r16, r22
    1b88:	ec 01       	movw	r28, r24
    1b8a:	fb 01       	movw	r30, r22
    1b8c:	00 84       	ldd	r0, Z+8	; 0x08
    1b8e:	f1 85       	ldd	r31, Z+9	; 0x09
    1b90:	e0 2d       	mov	r30, r0
    1b92:	09 95       	icall
    1b94:	89 2b       	or	r24, r25
    1b96:	e1 f6       	brne	.-72     	; 0x1b50 <fputc+0x10>
    1b98:	d8 01       	movw	r26, r16
    1b9a:	16 96       	adiw	r26, 0x06	; 6
    1b9c:	8d 91       	ld	r24, X+
    1b9e:	9c 91       	ld	r25, X
    1ba0:	17 97       	sbiw	r26, 0x07	; 7
    1ba2:	01 96       	adiw	r24, 0x01	; 1
    1ba4:	17 96       	adiw	r26, 0x07	; 7
    1ba6:	9c 93       	st	X, r25
    1ba8:	8e 93       	st	-X, r24
    1baa:	16 97       	sbiw	r26, 0x06	; 6
    1bac:	ce 01       	movw	r24, r28
    1bae:	df 91       	pop	r29
    1bb0:	cf 91       	pop	r28
    1bb2:	1f 91       	pop	r17
    1bb4:	0f 91       	pop	r16
    1bb6:	08 95       	ret

00001bb8 <__ultoa_invert>:
    1bb8:	fa 01       	movw	r30, r20
    1bba:	aa 27       	eor	r26, r26
    1bbc:	28 30       	cpi	r18, 0x08	; 8
    1bbe:	51 f1       	breq	.+84     	; 0x1c14 <__ultoa_invert+0x5c>
    1bc0:	20 31       	cpi	r18, 0x10	; 16
    1bc2:	81 f1       	breq	.+96     	; 0x1c24 <__ultoa_invert+0x6c>
    1bc4:	e8 94       	clt
    1bc6:	6f 93       	push	r22
    1bc8:	6e 7f       	andi	r22, 0xFE	; 254
    1bca:	6e 5f       	subi	r22, 0xFE	; 254
    1bcc:	7f 4f       	sbci	r23, 0xFF	; 255
    1bce:	8f 4f       	sbci	r24, 0xFF	; 255
    1bd0:	9f 4f       	sbci	r25, 0xFF	; 255
    1bd2:	af 4f       	sbci	r26, 0xFF	; 255
    1bd4:	b1 e0       	ldi	r27, 0x01	; 1
    1bd6:	3e d0       	rcall	.+124    	; 0x1c54 <__ultoa_invert+0x9c>
    1bd8:	b4 e0       	ldi	r27, 0x04	; 4
    1bda:	3c d0       	rcall	.+120    	; 0x1c54 <__ultoa_invert+0x9c>
    1bdc:	67 0f       	add	r22, r23
    1bde:	78 1f       	adc	r23, r24
    1be0:	89 1f       	adc	r24, r25
    1be2:	9a 1f       	adc	r25, r26
    1be4:	a1 1d       	adc	r26, r1
    1be6:	68 0f       	add	r22, r24
    1be8:	79 1f       	adc	r23, r25
    1bea:	8a 1f       	adc	r24, r26
    1bec:	91 1d       	adc	r25, r1
    1bee:	a1 1d       	adc	r26, r1
    1bf0:	6a 0f       	add	r22, r26
    1bf2:	71 1d       	adc	r23, r1
    1bf4:	81 1d       	adc	r24, r1
    1bf6:	91 1d       	adc	r25, r1
    1bf8:	a1 1d       	adc	r26, r1
    1bfa:	20 d0       	rcall	.+64     	; 0x1c3c <__ultoa_invert+0x84>
    1bfc:	09 f4       	brne	.+2      	; 0x1c00 <__ultoa_invert+0x48>
    1bfe:	68 94       	set
    1c00:	3f 91       	pop	r19
    1c02:	2a e0       	ldi	r18, 0x0A	; 10
    1c04:	26 9f       	mul	r18, r22
    1c06:	11 24       	eor	r1, r1
    1c08:	30 19       	sub	r19, r0
    1c0a:	30 5d       	subi	r19, 0xD0	; 208
    1c0c:	31 93       	st	Z+, r19
    1c0e:	de f6       	brtc	.-74     	; 0x1bc6 <__ultoa_invert+0xe>
    1c10:	cf 01       	movw	r24, r30
    1c12:	08 95       	ret
    1c14:	46 2f       	mov	r20, r22
    1c16:	47 70       	andi	r20, 0x07	; 7
    1c18:	40 5d       	subi	r20, 0xD0	; 208
    1c1a:	41 93       	st	Z+, r20
    1c1c:	b3 e0       	ldi	r27, 0x03	; 3
    1c1e:	0f d0       	rcall	.+30     	; 0x1c3e <__ultoa_invert+0x86>
    1c20:	c9 f7       	brne	.-14     	; 0x1c14 <__ultoa_invert+0x5c>
    1c22:	f6 cf       	rjmp	.-20     	; 0x1c10 <__ultoa_invert+0x58>
    1c24:	46 2f       	mov	r20, r22
    1c26:	4f 70       	andi	r20, 0x0F	; 15
    1c28:	40 5d       	subi	r20, 0xD0	; 208
    1c2a:	4a 33       	cpi	r20, 0x3A	; 58
    1c2c:	18 f0       	brcs	.+6      	; 0x1c34 <__ultoa_invert+0x7c>
    1c2e:	49 5d       	subi	r20, 0xD9	; 217
    1c30:	31 fd       	sbrc	r19, 1
    1c32:	40 52       	subi	r20, 0x20	; 32
    1c34:	41 93       	st	Z+, r20
    1c36:	02 d0       	rcall	.+4      	; 0x1c3c <__ultoa_invert+0x84>
    1c38:	a9 f7       	brne	.-22     	; 0x1c24 <__ultoa_invert+0x6c>
    1c3a:	ea cf       	rjmp	.-44     	; 0x1c10 <__ultoa_invert+0x58>
    1c3c:	b4 e0       	ldi	r27, 0x04	; 4
    1c3e:	a6 95       	lsr	r26
    1c40:	97 95       	ror	r25
    1c42:	87 95       	ror	r24
    1c44:	77 95       	ror	r23
    1c46:	67 95       	ror	r22
    1c48:	ba 95       	dec	r27
    1c4a:	c9 f7       	brne	.-14     	; 0x1c3e <__ultoa_invert+0x86>
    1c4c:	00 97       	sbiw	r24, 0x00	; 0
    1c4e:	61 05       	cpc	r22, r1
    1c50:	71 05       	cpc	r23, r1
    1c52:	08 95       	ret
    1c54:	9b 01       	movw	r18, r22
    1c56:	ac 01       	movw	r20, r24
    1c58:	0a 2e       	mov	r0, r26
    1c5a:	06 94       	lsr	r0
    1c5c:	57 95       	ror	r21
    1c5e:	47 95       	ror	r20
    1c60:	37 95       	ror	r19
    1c62:	27 95       	ror	r18
    1c64:	ba 95       	dec	r27
    1c66:	c9 f7       	brne	.-14     	; 0x1c5a <__ultoa_invert+0xa2>
    1c68:	62 0f       	add	r22, r18
    1c6a:	73 1f       	adc	r23, r19
    1c6c:	84 1f       	adc	r24, r20
    1c6e:	95 1f       	adc	r25, r21
    1c70:	a0 1d       	adc	r26, r0
    1c72:	08 95       	ret

00001c74 <__prologue_saves__>:
    1c74:	2f 92       	push	r2
    1c76:	3f 92       	push	r3
    1c78:	4f 92       	push	r4
    1c7a:	5f 92       	push	r5
    1c7c:	6f 92       	push	r6
    1c7e:	7f 92       	push	r7
    1c80:	8f 92       	push	r8
    1c82:	9f 92       	push	r9
    1c84:	af 92       	push	r10
    1c86:	bf 92       	push	r11
    1c88:	cf 92       	push	r12
    1c8a:	df 92       	push	r13
    1c8c:	ef 92       	push	r14
    1c8e:	ff 92       	push	r15
    1c90:	0f 93       	push	r16
    1c92:	1f 93       	push	r17
    1c94:	cf 93       	push	r28
    1c96:	df 93       	push	r29
    1c98:	cd b7       	in	r28, 0x3d	; 61
    1c9a:	de b7       	in	r29, 0x3e	; 62
    1c9c:	ca 1b       	sub	r28, r26
    1c9e:	db 0b       	sbc	r29, r27
    1ca0:	0f b6       	in	r0, 0x3f	; 63
    1ca2:	f8 94       	cli
    1ca4:	de bf       	out	0x3e, r29	; 62
    1ca6:	0f be       	out	0x3f, r0	; 63
    1ca8:	cd bf       	out	0x3d, r28	; 61
    1caa:	09 94       	ijmp

00001cac <__epilogue_restores__>:
    1cac:	2a 88       	ldd	r2, Y+18	; 0x12
    1cae:	39 88       	ldd	r3, Y+17	; 0x11
    1cb0:	48 88       	ldd	r4, Y+16	; 0x10
    1cb2:	5f 84       	ldd	r5, Y+15	; 0x0f
    1cb4:	6e 84       	ldd	r6, Y+14	; 0x0e
    1cb6:	7d 84       	ldd	r7, Y+13	; 0x0d
    1cb8:	8c 84       	ldd	r8, Y+12	; 0x0c
    1cba:	9b 84       	ldd	r9, Y+11	; 0x0b
    1cbc:	aa 84       	ldd	r10, Y+10	; 0x0a
    1cbe:	b9 84       	ldd	r11, Y+9	; 0x09
    1cc0:	c8 84       	ldd	r12, Y+8	; 0x08
    1cc2:	df 80       	ldd	r13, Y+7	; 0x07
    1cc4:	ee 80       	ldd	r14, Y+6	; 0x06
    1cc6:	fd 80       	ldd	r15, Y+5	; 0x05
    1cc8:	0c 81       	ldd	r16, Y+4	; 0x04
    1cca:	1b 81       	ldd	r17, Y+3	; 0x03
    1ccc:	aa 81       	ldd	r26, Y+2	; 0x02
    1cce:	b9 81       	ldd	r27, Y+1	; 0x01
    1cd0:	ce 0f       	add	r28, r30
    1cd2:	d1 1d       	adc	r29, r1
    1cd4:	0f b6       	in	r0, 0x3f	; 63
    1cd6:	f8 94       	cli
    1cd8:	de bf       	out	0x3e, r29	; 62
    1cda:	0f be       	out	0x3f, r0	; 63
    1cdc:	cd bf       	out	0x3d, r28	; 61
    1cde:	ed 01       	movw	r28, r26
    1ce0:	08 95       	ret

00001ce2 <_exit>:
    1ce2:	f8 94       	cli

00001ce4 <__stop_program>:
    1ce4:	ff cf       	rjmp	.-2      	; 0x1ce4 <__stop_program>
